
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u020d\000\002\002\004\000\002\047\007\000\002\047" +
    "\007\000\002\047\007\000\002\047\007\000\002\047\005" +
    "\000\002\066\013\000\002\066\013\000\002\066\013\000" +
    "\002\066\013\000\002\066\013\000\002\066\013\000\002" +
    "\067\007\000\002\067\007\000\002\067\007\000\002\067" +
    "\007\000\002\070\011\000\002\070\011\000\002\070\011" +
    "\000\002\070\011\000\002\070\011\000\002\041\010\000" +
    "\002\041\010\000\002\041\010\000\002\041\010\000\002" +
    "\041\010\000\002\042\005\000\002\042\005\000\002\042" +
    "\005\000\002\045\005\000\002\045\005\000\002\045\005" +
    "\000\002\044\005\000\002\044\005\000\002\044\005\000" +
    "\002\043\005\000\002\043\005\000\002\043\005\000\002" +
    "\002\004\000\002\002\004\000\002\002\004\000\002\002" +
    "\005\000\002\002\003\000\002\002\005\000\002\046\004" +
    "\000\002\046\004\000\002\046\004\000\002\046\003\000" +
    "\002\046\005\000\002\013\004\000\002\013\005\000\002" +
    "\013\004\000\002\013\003\000\002\013\005\000\002\030" +
    "\006\000\002\030\010\000\002\011\004\000\002\011\004" +
    "\000\002\011\004\000\002\011\004\000\002\011\004\000" +
    "\002\011\004\000\002\011\004\000\002\011\004\000\002" +
    "\011\005\000\002\011\003\000\002\011\005\000\002\073" +
    "\011\000\002\074\006\000\002\075\004\000\002\075\004" +
    "\000\002\075\004\000\002\075\004\000\002\075\004\000" +
    "\002\075\004\000\002\075\004\000\002\075\004\000\002" +
    "\075\005\000\002\075\004\000\002\075\003\000\002\075" +
    "\003\000\002\075\003\000\002\075\003\000\002\075\003" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\075\005\000\002\075\005\000\002\075\004\000\002" +
    "\077\004\000\002\077\004\000\002\077\004\000\002\077" +
    "\004\000\002\077\004\000\002\077\004\000\002\077\004" +
    "\000\002\077\004\000\002\077\005\000\002\077\004\000" +
    "\002\077\003\000\002\077\003\000\002\077\003\000\002" +
    "\077\003\000\002\077\003\000\002\077\003\000\002\077" +
    "\003\000\002\077\003\000\002\077\005\000\002\076\004" +
    "\000\002\076\004\000\002\076\004\000\002\076\004\000" +
    "\002\076\005\000\002\076\004\000\002\076\004\000\002" +
    "\076\004\000\002\076\004\000\002\076\004\000\002\076" +
    "\005\000\002\076\004\000\002\076\003\000\002\076\003" +
    "\000\002\076\003\000\002\076\003\000\002\076\003\000" +
    "\002\076\003\000\002\076\003\000\002\076\003\000\002" +
    "\076\005\000\002\071\011\000\002\072\004\000\002\072" +
    "\004\000\002\072\004\000\002\072\004\000\002\072\004" +
    "\000\002\072\004\000\002\072\004\000\002\072\004\000" +
    "\002\072\005\000\002\072\004\000\002\072\003\000\002" +
    "\072\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\003\000\002\072\003\000\002\072\003\000\002\072\003" +
    "\000\002\072\005\000\002\072\005\000\002\072\005\000" +
    "\002\101\017\000\002\101\014\000\002\100\004\000\002" +
    "\100\004\000\002\100\004\000\002\100\004\000\002\100" +
    "\004\000\002\100\004\000\002\100\004\000\002\100\004" +
    "\000\002\100\005\000\002\100\004\000\002\100\003\000" +
    "\002\100\003\000\002\100\003\000\002\100\003\000\002" +
    "\100\003\000\002\100\003\000\002\100\003\000\002\100" +
    "\003\000\002\100\005\000\002\100\005\000\002\100\005" +
    "\000\002\012\004\000\002\012\004\000\002\012\004\000" +
    "\002\012\004\000\002\012\004\000\002\012\004\000\002" +
    "\012\004\000\002\012\004\000\002\012\005\000\002\012" +
    "\004\000\002\012\005\000\002\003\007\000\002\003\006" +
    "\000\002\003\010\000\002\003\007\000\002\003\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\003\000\002" +
    "\004\007\000\002\004\011\000\002\004\010\000\002\004" +
    "\007\000\002\004\006\000\002\004\010\000\002\005\006" +
    "\000\002\005\005\000\002\005\005\000\002\005\012\000" +
    "\002\005\010\000\002\005\014\000\002\010\003\000\002" +
    "\010\003\000\002\007\003\000\002\007\003\000\002\007" +
    "\003\000\002\023\003\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\026\003\000" +
    "\002\026\003\000\002\021\005\000\002\021\005\000\002" +
    "\021\007\000\002\021\003\000\002\021\011\000\002\024" +
    "\004\000\002\024\003\000\002\033\005\000\002\033\006" +
    "\000\002\040\005\000\002\040\006\000\002\040\005\000" +
    "\002\040\005\000\002\040\005\000\002\040\005\000\002" +
    "\040\004\000\002\034\003\000\002\034\003\000\002\034" +
    "\003\000\002\034\003\000\002\034\003\000\002\034\003" +
    "\000\002\032\014\000\002\032\012\000\002\032\010\000" +
    "\002\032\006\000\002\032\004\000\002\035\005\000\002" +
    "\035\004\000\002\031\006\000\002\031\006\000\002\031" +
    "\006\000\002\031\005\000\002\031\010\000\002\031\007" +
    "\000\002\006\011\000\002\006\011\000\002\014\012\000" +
    "\002\020\006\000\002\015\004\000\002\015\004\000\002" +
    "\015\004\000\002\015\004\000\002\015\004\000\002\015" +
    "\004\000\002\015\004\000\002\015\004\000\002\015\005" +
    "\000\002\015\004\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\005\000\002\015\004\000\002\016\004\000\002\016\004" +
    "\000\002\016\004\000\002\016\004\000\002\016\004\000" +
    "\002\016\004\000\002\016\004\000\002\016\004\000\002" +
    "\016\005\000\002\016\004\000\002\016\003\000\002\016" +
    "\003\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\017\004\000\002\017\004\000\002\017\004\000\002" +
    "\017\004\000\002\017\005\000\002\017\004\000\002\017" +
    "\004\000\002\017\004\000\002\017\004\000\002\017\004" +
    "\000\002\017\005\000\002\017\004\000\002\017\003\000" +
    "\002\017\003\000\002\017\003\000\002\017\003\000\002" +
    "\017\003\000\002\017\003\000\002\017\003\000\002\017" +
    "\003\000\002\022\017\000\002\022\014\000\002\036\004" +
    "\000\002\036\004\000\002\036\004\000\002\036\004\000" +
    "\002\036\004\000\002\036\004\000\002\036\004\000\002" +
    "\036\004\000\002\036\005\000\002\036\004\000\002\036" +
    "\003\000\002\036\003\000\002\036\003\000\002\036\003" +
    "\000\002\036\003\000\002\036\003\000\002\036\003\000" +
    "\002\036\003\000\002\036\005\000\002\061\012\000\002" +
    "\062\006\000\002\063\004\000\002\063\004\000\002\063" +
    "\004\000\002\063\004\000\002\063\004\000\002\063\004" +
    "\000\002\063\004\000\002\063\004\000\002\063\005\000" +
    "\002\063\004\000\002\063\003\000\002\063\003\000\002" +
    "\063\003\000\002\063\003\000\002\063\003\000\002\063" +
    "\003\000\002\063\003\000\002\063\003\000\002\063\005" +
    "\000\002\063\005\000\002\063\004\000\002\064\004\000" +
    "\002\064\004\000\002\064\004\000\002\064\004\000\002" +
    "\064\005\000\002\064\004\000\002\064\004\000\002\064" +
    "\004\000\002\064\004\000\002\064\004\000\002\064\005" +
    "\000\002\064\004\000\002\064\003\000\002\064\003\000" +
    "\002\064\003\000\002\064\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\003\000\002\064\003\000\002\064" +
    "\005\000\002\065\004\000\002\065\004\000\002\065\004" +
    "\000\002\065\004\000\002\065\004\000\002\065\004\000" +
    "\002\065\004\000\002\065\004\000\002\065\005\000\002" +
    "\065\004\000\002\065\003\000\002\065\003\000\002\065" +
    "\003\000\002\065\003\000\002\065\003\000\002\065\003" +
    "\000\002\065\003\000\002\065\003\000\002\065\005\000" +
    "\002\057\011\000\002\060\004\000\002\060\004\000\002" +
    "\060\004\000\002\060\004\000\002\060\004\000\002\060" +
    "\004\000\002\060\004\000\002\060\004\000\002\060\005" +
    "\000\002\060\004\000\002\060\003\000\002\060\003\000" +
    "\002\060\003\000\002\060\003\000\002\060\003\000\002" +
    "\060\003\000\002\060\003\000\002\060\003\000\002\060" +
    "\005\000\002\060\005\000\002\050\012\000\002\054\006" +
    "\000\002\051\004\000\002\051\004\000\002\051\004\000" +
    "\002\051\004\000\002\051\004\000\002\051\004\000\002" +
    "\051\004\000\002\051\004\000\002\051\005\000\002\051" +
    "\004\000\002\051\003\000\002\051\003\000\002\051\003" +
    "\000\002\051\003\000\002\051\003\000\002\051\003\000" +
    "\002\051\003\000\002\051\003\000\002\051\005\000\002" +
    "\051\005\000\002\051\004\000\002\053\004\000\002\053" +
    "\004\000\002\053\004\000\002\053\004\000\002\053\004" +
    "\000\002\053\005\000\002\053\004\000\002\053\004\000" +
    "\002\053\004\000\002\053\004\000\002\053\005\000\002" +
    "\053\004\000\002\053\003\000\002\053\003\000\002\053" +
    "\003\000\002\053\003\000\002\053\003\000\002\053\003" +
    "\000\002\053\003\000\002\053\003\000\002\053\005\000" +
    "\002\052\004\000\002\052\004\000\002\052\004\000\002" +
    "\052\004\000\002\052\004\000\002\052\004\000\002\052" +
    "\004\000\002\052\004\000\002\052\005\000\002\052\004" +
    "\000\002\052\003\000\002\052\003\000\002\052\003\000" +
    "\002\052\003\000\002\052\003\000\002\052\003\000\002" +
    "\052\003\000\002\052\003\000\002\052\005\000\002\056" +
    "\017\000\002\056\014\000\002\055\004\000\002\055\004" +
    "\000\002\055\004\000\002\055\004\000\002\055\004\000" +
    "\002\055\004\000\002\055\004\000\002\055\004\000\002" +
    "\055\005\000\002\055\004\000\002\055\003\000\002\055" +
    "\003\000\002\055\003\000\002\055\003\000\002\055\003" +
    "\000\002\055\003\000\002\055\003\000\002\055\003\000" +
    "\002\055\005\000\002\055\005\000\002\025\011\000\002" +
    "\037\004\000\002\037\004\000\002\037\004\000\002\037" +
    "\004\000\002\037\004\000\002\037\004\000\002\037\004" +
    "\000\002\037\004\000\002\037\005\000\002\037\004\000" +
    "\002\037\003\000\002\037\003\000\002\037\003\000\002" +
    "\037\003\000\002\037\003\000\002\037\003\000\002\037" +
    "\003\000\002\037\003\000\002\037\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0378\000\006\003\005\033\006\001\002\000\004\002" +
    "\u037a\001\002\000\006\034\u0375\062\u0374\001\002\000\006" +
    "\003\007\034\010\001\002\000\004\064\u0371\001\002\000" +
    "\006\003\012\064\011\001\002\000\004\062\u036f\001\002" +
    "\000\004\062\013\001\002\000\012\003\021\006\024\031" +
    "\020\033\023\001\002\000\004\002\ufffd\001\002\000\012" +
    "\003\021\006\024\031\020\033\023\001\002\000\004\002" +
    "\uffd7\001\002\000\012\003\021\006\024\031\020\033\023" +
    "\001\002\000\006\003\u035d\061\u035c\001\002\000\014\030" +
    "\u0187\031\u0189\032\u018a\061\u0355\062\u0356\001\002\000\012" +
    "\003\021\006\024\031\020\033\023\001\002\000\012\003" +
    "\030\030\027\031\031\032\032\001\002\000\004\062\025" +
    "\001\002\000\012\003\021\006\024\031\020\033\023\001" +
    "\002\000\004\002\uffd8\001\002\000\006\003\u033d\064\u033c" +
    "\001\002\000\004\064\u0333\001\002\000\006\003\u0326\064" +
    "\u0325\001\002\000\006\003\034\064\033\001\002\000\004" +
    "\062\u0323\001\002\000\004\062\035\001\002\000\014\003" +
    "\041\006\045\033\044\060\043\064\040\001\002\000\014" +
    "\003\041\006\045\033\044\060\043\064\040\001\002\000" +
    "\014\003\ufff2\006\ufff2\031\ufff2\033\ufff2\060\ufff2\001\002" +
    "\000\004\055\u031c\001\002\000\010\031\u0189\032\u0319\062" +
    "\u0318\001\002\000\014\003\041\006\045\033\044\060\043" +
    "\064\040\001\002\000\006\003\u0313\032\u0314\001\002\000" +
    "\006\003\051\031\031\001\002\000\004\062\047\001\002" +
    "\000\014\003\uffcd\006\uffcd\031\uffcd\033\uffcd\060\uffcd\001" +
    "\002\000\014\003\041\006\045\033\044\060\043\064\040" +
    "\001\002\000\014\003\uffcf\006\uffcf\031\uffcf\033\uffcf\060" +
    "\uffcf\001\002\000\004\064\052\001\002\000\004\050\053" +
    "\001\002\000\012\012\056\051\055\052\057\064\054\001" +
    "\002\000\004\055\u0310\001\002\000\010\003\uff43\055\uff43" +
    "\062\uff43\001\002\000\004\064\u030c\001\002\000\006\012" +
    "\u0304\064\u0303\001\002\000\004\062\061\001\002\000\030" +
    "\003\105\005\073\006\101\013\103\017\067\025\106\050" +
    "\100\054\063\060\102\064\071\065\107\001\002\000\030" +
    "\003\105\005\073\006\101\013\103\017\067\025\106\050" +
    "\100\054\063\060\102\064\071\065\107\001\002\000\004" +
    "\064\u02f6\001\002\000\030\003\105\005\073\006\101\013" +
    "\103\017\067\025\106\050\100\054\063\060\102\064\071" +
    "\065\107\001\002\000\030\003\105\005\073\006\101\013" +
    "\103\017\067\025\106\050\100\054\063\060\102\064\071" +
    "\065\107\001\002\000\030\003\105\005\073\006\101\013" +
    "\103\017\067\025\106\050\100\054\063\060\102\064\071" +
    "\065\107\001\002\000\004\064\u0255\001\002\000\016\003" +
    "\uffef\006\uffef\031\uffef\033\uffef\060\uffef\064\uffef\001\002" +
    "\000\030\035\uff29\036\uff29\037\uff29\040\uff29\041\uff29\042" +
    "\uff29\047\u022b\050\u0229\053\u0228\064\112\065\107\001\002" +
    "\000\030\003\105\005\073\006\101\013\103\017\067\025" +
    "\106\050\100\054\063\060\102\064\071\065\107\001\002" +
    "\000\004\053\u021a\001\002\000\030\003\105\005\073\006" +
    "\101\013\103\017\067\025\106\050\100\054\063\060\102" +
    "\064\071\065\107\001\002\000\030\003\105\005\073\006" +
    "\101\013\103\017\067\025\106\050\100\054\063\060\102" +
    "\064\071\065\107\001\002\000\016\035\137\036\136\037" +
    "\134\040\132\041\133\042\140\001\002\000\010\003\u0183" +
    "\033\023\060\u0182\001\002\000\006\064\112\065\107\001" +
    "\002\000\004\062\u017a\001\002\000\006\003\u0176\031\u0177" +
    "\001\002\000\012\026\111\027\115\064\112\065\107\001" +
    "\002\000\030\003\105\005\073\006\101\013\103\017\067" +
    "\025\106\050\100\054\063\060\102\064\071\065\107\001" +
    "\002\000\006\031\u0124\062\u0123\001\002\000\004\022\110" +
    "\001\002\000\052\014\uff28\020\uff28\023\uff28\035\uff28\036" +
    "\uff28\037\uff28\040\uff28\041\uff28\042\uff28\043\uff28\044\uff28" +
    "\045\uff28\046\uff28\047\uff28\050\uff28\051\uff28\052\uff28\062" +
    "\uff28\064\uff28\065\uff28\001\002\000\012\026\111\027\115" +
    "\064\112\065\107\001\002\000\006\014\uff33\062\uff33\001" +
    "\002\000\050\020\uff29\023\uff29\035\uff29\036\uff29\037\uff29" +
    "\040\uff29\041\uff29\042\uff29\043\uff29\044\uff29\045\uff29\046" +
    "\uff29\047\uff29\050\uff29\051\uff29\052\uff29\062\uff29\064\uff29" +
    "\065\uff29\001\002\000\004\062\163\001\002\000\006\014" +
    "\uff24\062\uff24\001\002\000\006\014\uff32\062\uff32\001\002" +
    "\000\014\043\123\044\121\045\122\046\120\047\124\001" +
    "\002\000\014\026\111\027\115\050\127\064\125\065\107" +
    "\001\002\000\014\026\uff2b\027\uff2b\050\uff2b\064\uff2b\065" +
    "\uff2b\001\002\000\014\026\uff2d\027\uff2d\050\uff2d\064\uff2d" +
    "\065\uff2d\001\002\000\014\026\uff2c\027\uff2c\050\uff2c\064" +
    "\uff2c\065\uff2c\001\002\000\014\026\uff2e\027\uff2e\050\uff2e" +
    "\064\uff2e\065\uff2e\001\002\000\014\026\uff2a\027\uff2a\050" +
    "\uff2a\064\uff2a\065\uff2a\001\002\000\010\014\uff29\050\143" +
    "\062\uff29\001\002\000\006\014\uff26\062\uff26\001\002\000" +
    "\006\064\112\065\107\001\002\000\006\014\uff27\062\uff27" +
    "\001\002\000\016\035\137\036\136\037\134\040\132\041" +
    "\133\042\140\001\002\000\024\035\uff14\036\uff14\037\uff14" +
    "\040\uff14\041\uff14\042\uff14\050\uff14\064\uff14\065\uff14\001" +
    "\002\000\024\035\uff13\036\uff13\037\uff13\040\uff13\041\uff13" +
    "\042\uff13\050\uff13\064\uff13\065\uff13\001\002\000\024\035" +
    "\uff15\036\uff15\037\uff15\040\uff15\041\uff15\042\uff15\050\uff15" +
    "\064\uff15\065\uff15\001\002\000\006\064\112\065\107\001" +
    "\002\000\024\035\uff16\036\uff16\037\uff16\040\uff16\041\uff16" +
    "\042\uff16\050\uff16\064\uff16\065\uff16\001\002\000\024\035" +
    "\uff17\036\uff17\037\uff17\040\uff17\041\uff17\042\uff17\050\uff17" +
    "\064\uff17\065\uff17\001\002\000\024\035\uff12\036\uff12\037" +
    "\uff12\040\uff12\041\uff12\042\uff12\050\uff12\064\uff12\065\uff12" +
    "\001\002\000\004\051\142\001\002\000\006\014\uff23\062" +
    "\uff23\001\002\000\006\064\112\065\107\001\002\000\006" +
    "\014\uff25\062\uff25\001\002\000\006\051\146\052\147\001" +
    "\002\000\012\014\uff0d\051\uff0d\052\uff0d\062\uff0d\001\002" +
    "\000\006\064\112\065\107\001\002\000\006\051\151\052" +
    "\152\001\002\000\012\014\uff0e\051\uff0e\052\uff0e\062\uff0e" +
    "\001\002\000\006\064\112\065\107\001\002\000\006\051" +
    "\154\052\155\001\002\000\012\014\uff0f\051\uff0f\052\uff0f" +
    "\062\uff0f\001\002\000\006\064\112\065\107\001\002\000" +
    "\006\051\157\052\160\001\002\000\012\014\uff10\051\uff10" +
    "\052\uff10\062\uff10\001\002\000\006\064\112\065\107\001" +
    "\002\000\004\051\162\001\002\000\012\014\uff11\051\uff11" +
    "\052\uff11\062\uff11\001\002\000\026\005\073\006\174\013" +
    "\176\017\167\025\106\050\100\054\063\056\200\064\071" +
    "\065\107\001\002\000\030\005\073\006\174\013\176\017" +
    "\167\021\ufdf8\025\106\050\100\054\063\056\200\064\071" +
    "\065\107\001\002\000\030\005\073\006\174\013\176\017" +
    "\167\021\ufdf7\025\106\050\100\054\063\056\200\064\071" +
    "\065\107\001\002\000\030\005\073\006\174\013\176\017" +
    "\167\021\ufdfd\025\106\050\100\054\063\056\200\064\071" +
    "\065\107\001\002\000\004\064\343\001\002\000\030\005" +
    "\073\006\174\013\176\017\167\021\ufdf9\025\106\050\100" +
    "\054\063\056\200\064\071\065\107\001\002\000\030\005" +
    "\073\006\174\013\176\017\167\021\ufdfa\025\106\050\100" +
    "\054\063\056\200\064\071\065\107\001\002\000\030\005" +
    "\073\006\174\013\176\017\167\021\ufdf6\025\106\050\100" +
    "\054\063\056\200\064\071\065\107\001\002\000\030\005" +
    "\073\006\174\013\176\017\167\021\ufdfc\025\106\050\100" +
    "\054\063\056\200\064\071\065\107\001\002\000\004\062" +
    "\335\001\002\000\030\005\073\006\174\013\176\017\167" +
    "\021\ufdfb\025\106\050\100\054\063\056\200\064\071\065" +
    "\107\001\002\000\012\026\111\027\115\064\112\065\107" +
    "\001\002\000\004\021\203\001\002\000\004\025\201\001" +
    "\002\000\004\062\202\001\002\000\004\021\ufdf5\001\002" +
    "\000\004\062\204\001\002\000\042\003\ufe08\005\ufe08\006" +
    "\ufe08\013\ufe08\015\ufe08\016\ufe08\017\ufe08\021\ufe08\024\ufe08" +
    "\025\ufe08\050\ufe08\054\ufe08\056\ufe08\060\ufe08\064\ufe08\065" +
    "\ufe08\001\002\000\004\014\206\001\002\000\004\062\207" +
    "\001\002\000\032\005\073\006\222\013\176\015\211\016" +
    "\210\017\167\025\106\050\100\054\063\056\224\064\071" +
    "\065\107\001\002\000\004\062\332\001\002\000\012\026" +
    "\111\027\115\064\112\065\107\001\002\000\034\005\073" +
    "\006\222\013\176\015\211\016\210\017\167\025\106\050" +
    "\100\054\063\056\224\060\ufe4e\064\071\065\107\001\002" +
    "\000\034\005\073\006\222\013\176\015\211\016\210\017" +
    "\167\025\106\050\100\054\063\056\224\060\ufe4d\064\071" +
    "\065\107\001\002\000\034\005\073\006\222\013\176\015" +
    "\211\016\210\017\167\025\106\050\100\054\063\056\224" +
    "\060\ufe4a\064\071\065\107\001\002\000\034\005\073\006" +
    "\222\013\176\015\211\016\210\017\167\025\106\050\100" +
    "\054\063\056\224\060\ufe4f\064\071\065\107\001\002\000" +
    "\034\005\073\006\222\013\176\015\211\016\210\017\167" +
    "\025\106\050\100\054\063\056\224\060\ufe50\064\071\065" +
    "\107\001\002\000\034\005\073\006\222\013\176\015\211" +
    "\016\210\017\167\025\106\050\100\054\063\056\224\060" +
    "\ufe4c\064\071\065\107\001\002\000\034\005\073\006\222" +
    "\013\176\015\211\016\210\017\167\025\106\050\100\054" +
    "\063\056\224\060\ufe4b\064\071\065\107\001\002\000\004" +
    "\060\232\001\002\000\004\062\230\001\002\000\034\005" +
    "\073\006\222\013\176\015\211\016\210\017\167\025\106" +
    "\050\100\054\063\056\224\060\ufe51\064\071\065\107\001" +
    "\002\000\004\025\225\001\002\000\004\062\226\001\002" +
    "\000\004\060\ufe49\001\002\000\004\060\ufe5b\001\002\000" +
    "\034\005\073\006\222\013\176\015\211\016\210\017\167" +
    "\025\106\050\100\054\063\056\224\060\ufe52\064\071\065" +
    "\107\001\002\000\004\060\ufe53\001\002\000\004\013\233" +
    "\001\002\000\004\062\234\001\002\000\040\005\ufe5d\006" +
    "\ufe5d\013\ufe5d\015\ufe5d\016\ufe5d\017\ufe5d\021\ufe5d\024\ufe5d" +
    "\025\ufe5d\050\ufe5d\054\ufe5d\056\ufe5d\060\ufe5d\064\ufe5d\065" +
    "\ufe5d\001\002\000\004\060\ufe55\001\002\000\004\060\ufe57" +
    "\001\002\000\004\060\ufe5a\001\002\000\004\060\ufe59\001" +
    "\002\000\004\060\ufe54\001\002\000\004\060\ufe56\001\002" +
    "\000\004\060\ufe58\001\002\000\004\060\ufe47\001\002\000" +
    "\004\014\246\001\002\000\004\062\247\001\002\000\032" +
    "\005\073\006\262\013\176\015\251\016\250\017\167\025" +
    "\106\050\100\054\063\056\264\064\071\065\107\001\002" +
    "\000\004\062\302\001\002\000\012\026\111\027\115\064" +
    "\112\065\107\001\002\000\034\005\073\006\262\013\176" +
    "\015\251\016\250\017\167\025\106\050\100\054\063\056" +
    "\264\060\ufe36\064\071\065\107\001\002\000\034\005\073" +
    "\006\262\013\176\015\251\016\250\017\167\025\106\050" +
    "\100\054\063\056\264\060\ufe35\064\071\065\107\001\002" +
    "\000\034\005\073\006\262\013\176\015\251\016\250\017" +
    "\167\025\106\050\100\054\063\056\264\060\ufe3a\064\071" +
    "\065\107\001\002\000\004\060\ufe5c\001\002\000\034\005" +
    "\073\006\262\013\176\015\251\016\250\017\167\025\106" +
    "\050\100\054\063\056\264\060\ufe37\064\071\065\107\001" +
    "\002\000\034\005\073\006\262\013\176\015\251\016\250" +
    "\017\167\025\106\050\100\054\063\056\264\060\ufe38\064" +
    "\071\065\107\001\002\000\034\005\073\006\262\013\176" +
    "\015\251\016\250\017\167\025\106\050\100\054\063\056" +
    "\264\060\ufe34\064\071\065\107\001\002\000\034\005\073" +
    "\006\262\013\176\015\251\016\250\017\167\025\106\050" +
    "\100\054\063\056\264\060\ufe33\064\071\065\107\001\002" +
    "\000\004\062\270\001\002\000\034\005\073\006\262\013" +
    "\176\015\251\016\250\017\167\025\106\050\100\054\063" +
    "\056\264\060\ufe39\064\071\065\107\001\002\000\004\025" +
    "\265\001\002\000\004\062\266\001\002\000\004\060\ufe32" +
    "\001\002\000\004\060\ufe45\001\002\000\034\005\073\006" +
    "\262\013\176\015\251\016\250\017\167\025\106\050\100" +
    "\054\063\056\264\060\ufe3b\064\071\065\107\001\002\000" +
    "\004\060\ufe3c\001\002\000\004\060\ufe3d\001\002\000\004" +
    "\060\ufe3f\001\002\000\004\060\ufe44\001\002\000\004\060" +
    "\ufe43\001\002\000\004\060\ufe46\001\002\000\004\060\ufe3e" +
    "\001\002\000\004\060\ufe42\001\002\000\004\060\ufe40\001" +
    "\002\000\026\005\073\006\312\013\176\017\167\025\106" +
    "\050\100\054\063\056\314\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe23\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe22\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe27\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe24\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe25\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe21\064\071\065\107\001\002\000" +
    "\030\005\073\006\312\013\176\017\167\025\106\050\100" +
    "\054\063\056\314\060\ufe20\064\071\065\107\001\002\000" +
    "\004\062\321\001\002\000\030\005\073\006\312\013\176" +
    "\017\167\025\106\050\100\054\063\056\314\060\ufe26\064" +
    "\071\065\107\001\002\000\004\025\316\001\002\000\004" +
    "\060\ufe41\001\002\000\004\062\317\001\002\000\004\060" +
    "\ufe1f\001\002\000\004\060\ufe30\001\002\000\030\005\073" +
    "\006\312\013\176\017\167\025\106\050\100\054\063\056" +
    "\314\060\ufe28\064\071\065\107\001\002\000\004\060\ufe29" +
    "\001\002\000\004\060\ufe2a\001\002\000\004\060\ufe2c\001" +
    "\002\000\004\060\ufe2f\001\002\000\004\060\ufe2e\001\002" +
    "\000\004\060\ufe31\001\002\000\004\060\ufe2b\001\002\000" +
    "\004\060\ufe2d\001\002\000\026\005\073\006\312\013\176" +
    "\017\167\025\106\050\100\054\063\056\314\064\071\065" +
    "\107\001\002\000\004\060\ufe48\001\002\000\004\021\ufe05" +
    "\001\002\000\030\005\073\006\174\013\176\017\167\021" +
    "\ufdfe\025\106\050\100\054\063\056\200\064\071\065\107" +
    "\001\002\000\004\021\ufdff\001\002\000\004\021\ufe06\001" +
    "\002\000\004\021\ufe00\001\002\000\004\021\ufe04\001\002" +
    "\000\004\021\ufe03\001\002\000\004\047\344\001\002\000" +
    "\006\064\112\065\107\001\002\000\004\020\346\001\002" +
    "\000\010\050\100\064\112\065\107\001\002\000\026\005" +
    "\073\006\370\013\176\017\167\025\106\050\100\054\063" +
    "\056\372\064\071\065\107\001\002\000\020\023\352\035" +
    "\137\036\136\037\134\040\132\041\133\042\140\001\002" +
    "\000\024\035\137\036\136\037\134\040\132\041\133\042" +
    "\140\050\u010e\064\112\065\107\001\002\000\006\036\355" +
    "\065\354\001\002\000\004\062\357\001\002\000\004\062" +
    "\uff21\001\002\000\004\065\356\001\002\000\004\062\uff22" +
    "\001\002\000\026\005\073\006\370\013\176\017\167\025" +
    "\106\050\100\054\063\056\372\064\071\065\107\001\002" +
    "\000\030\005\073\006\370\013\176\017\167\024\ufe0d\025" +
    "\106\050\100\054\063\056\372\064\071\065\107\001\002" +
    "\000\030\005\073\006\370\013\176\017\167\024\ufe0c\025" +
    "\106\050\100\054\063\056\372\064\071\065\107\001\002" +
    "\000\030\005\073\006\370\013\176\017\167\024\ufe12\025" +
    "\106\050\100\054\063\056\372\064\071\065\107\001\002" +
    "\000\030\005\073\006\370\013\176\017\167\024\ufe0e\025" +
    "\106\050\100\054\063\056\372\064\071\065\107\001\002" +
    "\000\004\024\u0105\001\002\000\030\005\073\006\370\013" +
    "\176\017\167\024\ufe0f\025\106\050\100\054\063\056\372" +
    "\064\071\065\107\001\002\000\030\005\073\006\370\013" +
    "\176\017\167\024\ufe0b\025\106\050\100\054\063\056\372" +
    "\064\071\065\107\001\002\000\030\005\073\006\370\013" +
    "\176\017\167\024\ufe11\025\106\050\100\054\063\056\372" +
    "\064\071\065\107\001\002\000\004\062\u0100\001\002\000" +
    "\030\005\073\006\370\013\176\017\167\024\ufe10\025\106" +
    "\050\100\054\063\056\372\064\071\065\107\001\002\000" +
    "\006\017\374\025\373\001\002\000\004\062\376\001\002" +
    "\000\004\062\375\001\002\000\004\024\ufe09\001\002\000" +
    "\004\024\ufe0a\001\002\000\004\024\ufe1a\001\002\000\030" +
    "\005\073\006\370\013\176\017\167\024\ufe13\025\106\050" +
    "\100\054\063\056\372\064\071\065\107\001\002\000\004" +
    "\024\ufe14\001\002\000\004\024\ufe1b\001\002\000\004\024" +
    "\ufe15\001\002\000\004\024\ufe19\001\002\000\004\064\u0106" +
    "\001\002\000\004\062\u0107\001\002\000\040\005\ufe1e\006" +
    "\ufe1e\013\ufe1e\015\ufe1e\016\ufe1e\017\ufe1e\021\ufe1e\024\ufe1e" +
    "\025\ufe1e\050\ufe1e\054\ufe1e\056\ufe1e\060\ufe1e\064\ufe1e\065" +
    "\ufe1e\001\002\000\004\024\ufe18\001\002\000\004\024\ufe1c" +
    "\001\002\000\004\024\ufe16\001\002\000\004\024\ufe17\001" +
    "\002\000\022\035\137\036\136\037\134\040\132\041\133" +
    "\042\140\051\u0116\062\u0118\001\002\000\042\003\uff20\005" +
    "\uff20\006\uff20\013\uff20\015\uff20\016\uff20\017\uff20\021\uff20" +
    "\024\uff20\025\uff20\050\uff20\054\uff20\056\uff20\060\uff20\064" +
    "\uff20\065\uff20\001\002\000\006\064\112\065\107\001\002" +
    "\000\006\064\112\065\107\001\002\000\026\035\137\036" +
    "\136\037\134\040\132\041\133\042\140\050\u010e\062\u0112" +
    "\064\112\065\107\001\002\000\042\003\uff1c\005\uff1c\006" +
    "\uff1c\013\uff1c\015\uff1c\016\uff1c\017\uff1c\021\uff1c\024\uff1c" +
    "\025\uff1c\050\uff1c\054\uff1c\056\uff1c\060\uff1c\064\uff1c\065" +
    "\uff1c\001\002\000\042\003\uff1a\005\uff1a\006\uff1a\013\uff1a" +
    "\015\uff1a\016\uff1a\017\uff1a\021\uff1a\024\uff1a\025\uff1a\050" +
    "\uff1a\054\uff1a\056\uff1a\060\uff1a\064\uff1a\065\uff1a\001\002" +
    "\000\016\035\137\036\136\037\134\040\132\041\133\042" +
    "\140\001\002\000\024\035\137\036\136\037\134\040\132" +
    "\041\133\042\140\050\u010e\064\112\065\107\001\002\000" +
    "\042\003\uff1d\005\uff1d\006\uff1d\013\uff1d\015\uff1d\016\uff1d" +
    "\017\uff1d\021\uff1d\024\uff1d\025\uff1d\050\uff1d\054\uff1d\056" +
    "\uff1d\060\uff1d\064\uff1d\065\uff1d\001\002\000\026\035\137" +
    "\036\136\037\134\040\132\041\133\042\140\050\u010e\062" +
    "\u011b\064\112\065\107\001\002\000\024\035\137\036\136" +
    "\037\134\040\132\041\133\042\140\050\u010e\064\112\065" +
    "\107\001\002\000\042\003\uff18\005\uff18\006\uff18\013\uff18" +
    "\015\uff18\016\uff18\017\uff18\021\uff18\024\uff18\025\uff18\050" +
    "\uff18\054\uff18\056\uff18\060\uff18\064\uff18\065\uff18\001\002" +
    "\000\042\003\uff1e\005\uff1e\006\uff1e\013\uff1e\015\uff1e\016" +
    "\uff1e\017\uff1e\021\uff1e\024\uff1e\025\uff1e\050\uff1e\054\uff1e" +
    "\056\uff1e\060\uff1e\064\uff1e\065\uff1e\001\002\000\042\003" +
    "\uff1b\005\uff1b\006\uff1b\013\uff1b\015\uff1b\016\uff1b\017\uff1b" +
    "\021\uff1b\024\uff1b\025\uff1b\050\uff1b\054\uff1b\056\uff1b\060" +
    "\uff1b\064\uff1b\065\uff1b\001\002\000\042\003\uff19\005\uff19" +
    "\006\uff19\013\uff19\015\uff19\016\uff19\017\uff19\021\uff19\024" +
    "\uff19\025\uff19\050\uff19\054\uff19\056\uff19\060\uff19\064\uff19" +
    "\065\uff19\001\002\000\004\024\u011d\001\002\000\004\064" +
    "\u011e\001\002\000\004\062\u011f\001\002\000\040\005\ufe1d" +
    "\006\ufe1d\013\ufe1d\015\ufe1d\016\ufe1d\017\ufe1d\021\ufe1d\024" +
    "\ufe1d\025\ufe1d\050\ufe1d\054\ufe1d\056\ufe1d\060\ufe1d\064\ufe1d" +
    "\065\ufe1d\001\002\000\004\021\ufe07\001\002\000\004\021" +
    "\ufe01\001\002\000\004\021\ufe02\001\002\000\030\003\105" +
    "\005\073\006\101\013\103\017\067\025\106\050\100\054" +
    "\063\060\102\064\071\065\107\001\002\000\004\062\u0125" +
    "\001\002\000\010\003\uffdd\033\uffdd\060\uffdd\001\002\000" +
    "\020\002\uff48\003\uff48\006\uff48\031\uff48\033\uff48\060\uff48" +
    "\064\uff48\001\002\000\020\002\uff51\003\uff51\006\uff51\031" +
    "\uff51\033\uff51\060\uff51\064\uff51\001\002\000\004\014\u0129" +
    "\001\002\000\004\062\u012a\001\002\000\030\005\073\006" +
    "\u0135\013\103\015\u012d\016\u012b\017\067\025\106\050\100" +
    "\054\063\064\071\065\107\001\002\000\004\062\u0174\001" +
    "\002\000\032\005\073\006\u0135\013\103\015\u012d\016\u012b" +
    "\017\067\025\106\050\100\054\063\060\ufef0\064\071\065" +
    "\107\001\002\000\012\026\111\027\115\064\112\065\107" +
    "\001\002\000\032\005\073\006\u0135\013\103\015\u012d\016" +
    "\u012b\017\067\025\106\050\100\054\063\060\ufef3\064\071" +
    "\065\107\001\002\000\032\005\073\006\u0135\013\103\015" +
    "\u012d\016\u012b\017\067\025\106\050\100\054\063\060\ufef2" +
    "\064\071\065\107\001\002\000\032\005\073\006\u0135\013" +
    "\103\015\u012d\016\u012b\017\067\025\106\050\100\054\063" +
    "\060\ufeef\064\071\065\107\001\002\000\032\005\073\006" +
    "\u0135\013\103\015\u012d\016\u012b\017\067\025\106\050\100" +
    "\054\063\060\ufef4\064\071\065\107\001\002\000\032\005" +
    "\073\006\u0135\013\103\015\u012d\016\u012b\017\067\025\106" +
    "\050\100\054\063\060\ufef5\064\071\065\107\001\002\000" +
    "\032\005\073\006\u0135\013\103\015\u012d\016\u012b\017\067" +
    "\025\106\050\100\054\063\060\ufef1\064\071\065\107\001" +
    "\002\000\004\060\u013a\001\002\000\004\062\u0138\001\002" +
    "\000\032\005\073\006\u0135\013\103\015\u012d\016\u012b\017" +
    "\067\025\106\050\100\054\063\060\ufef6\064\071\065\107" +
    "\001\002\000\004\060\uff00\001\002\000\032\005\073\006" +
    "\u0135\013\103\015\u012d\016\u012b\017\067\025\106\050\100" +
    "\054\063\060\ufef7\064\071\065\107\001\002\000\004\060" +
    "\ufef8\001\002\000\004\013\u013b\001\002\000\004\062\u013c" +
    "\001\002\000\034\003\uff02\005\uff02\006\uff02\013\uff02\015" +
    "\uff02\016\uff02\017\uff02\025\uff02\050\uff02\054\uff02\060\uff02" +
    "\064\uff02\065\uff02\001\002\000\004\060\ufefc\001\002\000" +
    "\004\060\ufeff\001\002\000\004\060\ufefe\001\002\000\004" +
    "\060\ufef9\001\002\000\004\060\ufefb\001\002\000\004\060" +
    "\ufefd\001\002\000\004\014\u0145\001\002\000\004\060\ufeed" +
    "\001\002\000\004\062\u0146\001\002\000\030\005\073\006" +
    "\u0151\013\103\015\u0149\016\u0147\017\067\025\106\050\100" +
    "\054\063\064\071\065\107\001\002\000\004\062\u015e\001" +
    "\002\000\032\005\073\006\u0151\013\103\015\u0149\016\u0147" +
    "\017\067\025\106\050\100\054\063\060\ufec8\064\071\065" +
    "\107\001\002\000\012\026\111\027\115\064\112\065\107" +
    "\001\002\000\032\005\073\006\u0151\013\103\015\u0149\016" +
    "\u0147\017\067\025\106\050\100\054\063\060\ufecb\064\071" +
    "\065\107\001\002\000\032\005\073\006\u0151\013\103\015" +
    "\u0149\016\u0147\017\067\025\106\050\100\054\063\060\ufeca" +
    "\064\071\065\107\001\002\000\032\005\073\006\u0151\013" +
    "\103\015\u0149\016\u0147\017\067\025\106\050\100\054\063" +
    "\060\ufec7\064\071\065\107\001\002\000\032\005\073\006" +
    "\u0151\013\103\015\u0149\016\u0147\017\067\025\106\050\100" +
    "\054\063\060\ufecc\064\071\065\107\001\002\000\032\005" +
    "\073\006\u0151\013\103\015\u0149\016\u0147\017\067\025\106" +
    "\050\100\054\063\060\ufecd\064\071\065\107\001\002\000" +
    "\032\005\073\006\u0151\013\103\015\u0149\016\u0147\017\067" +
    "\025\106\050\100\054\063\060\ufec9\064\071\065\107\001" +
    "\002\000\004\060\uff01\001\002\000\004\062\u0154\001\002" +
    "\000\032\005\073\006\u0151\013\103\015\u0149\016\u0147\017" +
    "\067\025\106\050\100\054\063\060\ufece\064\071\065\107" +
    "\001\002\000\004\060\ufeda\001\002\000\032\005\073\006" +
    "\u0151\013\103\015\u0149\016\u0147\017\067\025\106\050\100" +
    "\054\063\060\ufecf\064\071\065\107\001\002\000\004\060" +
    "\ufed0\001\002\000\004\060\ufed4\001\002\000\004\060\ufed9" +
    "\001\002\000\004\060\ufed8\001\002\000\004\060\ufed1\001" +
    "\002\000\004\060\ufed3\001\002\000\004\060\ufed7\001\002" +
    "\000\004\060\ufed5\001\002\000\004\060\ufed2\001\002\000" +
    "\024\005\073\006\u0166\013\103\017\067\025\106\050\100" +
    "\054\063\064\071\065\107\001\002\000\026\005\073\006" +
    "\u0166\013\103\017\067\025\106\050\100\054\063\060\ufedc" +
    "\064\071\065\107\001\002\000\026\005\073\006\u0166\013" +
    "\103\017\067\025\106\050\100\054\063\060\ufedf\064\071" +
    "\065\107\001\002\000\026\005\073\006\u0166\013\103\017" +
    "\067\025\106\050\100\054\063\060\ufede\064\071\065\107" +
    "\001\002\000\026\005\073\006\u0166\013\103\017\067\025" +
    "\106\050\100\054\063\060\ufedb\064\071\065\107\001\002" +
    "\000\026\005\073\006\u0166\013\103\017\067\025\106\050" +
    "\100\054\063\060\ufee0\064\071\065\107\001\002\000\026" +
    "\005\073\006\u0166\013\103\017\067\025\106\050\100\054" +
    "\063\060\ufee1\064\071\065\107\001\002\000\026\005\073" +
    "\006\u0166\013\103\017\067\025\106\050\100\054\063\060" +
    "\ufedd\064\071\065\107\001\002\000\004\062\u016a\001\002" +
    "\000\026\005\073\006\u0166\013\103\017\067\025\106\050" +
    "\100\054\063\060\ufee2\064\071\065\107\001\002\000\004" +
    "\060\ufed6\001\002\000\004\060\ufeec\001\002\000\026\005" +
    "\073\006\u0166\013\103\017\067\025\106\050\100\054\063" +
    "\060\ufee3\064\071\065\107\001\002\000\004\060\ufee4\001" +
    "\002\000\004\060\ufee8\001\002\000\004\060\ufeeb\001\002" +
    "\000\004\060\ufeea\001\002\000\004\060\ufee5\001\002\000" +
    "\004\060\ufee7\001\002\000\004\060\ufee9\001\002\000\004" +
    "\060\ufee6\001\002\000\004\060\ufefa\001\002\000\024\005" +
    "\073\006\u0166\013\103\017\067\025\106\050\100\054\063" +
    "\064\071\065\107\001\002\000\004\060\ufeee\001\002\000" +
    "\004\062\u0179\001\002\000\004\062\u0178\001\002\000\010" +
    "\003\uffde\033\uffde\060\uffde\001\002\000\010\003\uffdc\033" +
    "\uffdc\060\uffdc\001\002\000\030\003\105\005\073\006\101" +
    "\013\103\017\067\025\106\050\100\054\063\060\102\064" +
    "\071\065\107\001\002\000\020\002\uff4a\003\uff4a\006\uff4a" +
    "\031\uff4a\033\uff4a\060\uff4a\064\uff4a\001\002\000\016\035" +
    "\137\036\136\037\134\040\132\041\133\042\140\001\002" +
    "\000\024\035\137\036\136\037\134\040\132\041\133\042" +
    "\140\050\u010e\064\112\065\107\001\002\000\042\003\uff1f" +
    "\005\uff1f\006\uff1f\013\uff1f\015\uff1f\016\uff1f\017\uff1f\021" +
    "\uff1f\024\uff1f\025\uff1f\050\uff1f\054\uff1f\056\uff1f\060\uff1f" +
    "\064\uff1f\065\uff1f\001\002\000\010\003\u0183\033\023\060" +
    "\u0182\001\002\000\010\003\u0183\033\023\060\u0182\001\002" +
    "\000\020\002\uff49\003\uff49\006\uff49\031\uff49\033\uff49\060" +
    "\uff49\064\uff49\001\002\000\006\003\u0212\034\u0213\001\002" +
    "\000\014\030\u0187\031\u0189\032\u018a\034\u018b\062\u0188\001" +
    "\002\000\010\003\u0183\033\023\060\u0182\001\002\000\020" +
    "\002\uffd2\003\uffd2\006\uffd2\031\uffd2\033\uffd2\060\uffd2\064" +
    "\uffd2\001\002\000\020\002\uffd4\003\uffd4\006\uffd4\031\uffd4" +
    "\033\uffd4\060\uffd4\064\uffd4\001\002\000\004\064\u0196\001" +
    "\002\000\010\003\u0183\033\023\060\u0182\001\002\000\004" +
    "\064\u0190\001\002\000\004\064\u018d\001\002\000\004\062" +
    "\u018c\001\002\000\020\002\uffe6\003\uffe6\006\uffe6\031\uffe6" +
    "\033\uffe6\060\uffe6\064\uffe6\001\002\000\004\062\u018e\001" +
    "\002\000\014\003\041\006\045\033\044\060\043\064\040" +
    "\001\002\000\014\003\ufff4\006\ufff4\031\ufff4\033\ufff4\060" +
    "\ufff4\001\002\000\004\050\u0191\001\002\000\012\012\056" +
    "\051\055\052\057\064\054\001\002\000\004\062\u0193\001" +
    "\002\000\030\003\105\005\073\006\101\013\103\017\067" +
    "\025\106\050\100\054\063\060\102\064\071\065\107\001" +
    "\002\000\016\003\ufff0\006\ufff0\031\ufff0\033\ufff0\060\ufff0" +
    "\064\ufff0\001\002\000\020\002\uffd1\003\uffd1\006\uffd1\031" +
    "\uffd1\033\uffd1\060\uffd1\064\uffd1\001\002\000\004\050\u0197" +
    "\001\002\000\012\012\056\051\055\052\057\064\054\001" +
    "\002\000\004\055\u0199\001\002\000\010\007\u019a\010\u019d" +
    "\011\u019b\001\002\000\016\012\uff30\047\uff30\051\uff30\052" +
    "\uff30\062\uff30\064\uff30\001\002\000\016\012\uff31\047\uff31" +
    "\051\uff31\052\uff31\062\uff31\064\uff31\001\002\000\004\062" +
    "\u019e\001\002\000\016\012\uff2f\047\uff2f\051\uff2f\052\uff2f" +
    "\062\uff2f\064\uff2f\001\002\000\030\003\u01ac\005\073\006" +
    "\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\060\u01aa" +
    "\064\071\065\107\001\002\000\030\003\u01ac\005\073\006" +
    "\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\060\u01aa" +
    "\064\071\065\107\001\002\000\030\003\u01ac\005\073\006" +
    "\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\060\u01aa" +
    "\064\071\065\107\001\002\000\030\003\u01ac\005\073\006" +
    "\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\060\u01aa" +
    "\064\071\065\107\001\002\000\004\064\u01e4\001\002\000" +
    "\030\003\u01ac\005\073\006\u01a9\013\u01ab\017\u01a2\025\u01ad" +
    "\050\100\054\063\060\u01aa\064\071\065\107\001\002\000" +
    "\030\003\u01ac\005\073\006\u01a9\013\u01ab\017\u01a2\025\u01ad" +
    "\050\100\054\063\060\u01aa\064\071\065\107\001\002\000" +
    "\030\003\u01ac\005\073\006\u01a9\013\u01ab\017\u01a2\025\u01ad" +
    "\050\100\054\063\060\u01aa\064\071\065\107\001\002\000" +
    "\030\003\u01ac\005\073\006\u01a9\013\u01ab\017\u01a2\025\u01ad" +
    "\050\100\054\063\060\u01aa\064\071\065\107\001\002\000" +
    "\014\003\ufffa\006\ufffa\031\ufffa\033\ufffa\060\ufffa\001\002" +
    "\000\014\003\uffc0\006\uffc0\031\uffc0\033\uffc0\060\uffc0\001" +
    "\002\000\004\062\u01de\001\002\000\006\003\u01db\030\u01da" +
    "\001\002\000\012\026\111\027\115\064\112\065\107\001" +
    "\002\000\006\030\u01d0\062\u01d1\001\002\000\004\022\u01b0" +
    "\001\002\000\030\003\u01ac\005\073\006\u01a9\013\u01ab\017" +
    "\u01a2\025\u01ad\050\100\054\063\060\u01aa\064\071\065\107" +
    "\001\002\000\014\003\uffc9\006\uffc9\031\uffc9\033\uffc9\060" +
    "\uffc9\001\002\000\012\026\111\027\115\064\112\065\107" +
    "\001\002\000\004\062\u01b2\001\002\000\026\005\073\006" +
    "\u01ba\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff70\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff73\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff6f\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff6d\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff71\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff72\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\030\005\073\006\u01ba\013" +
    "\u01ab\017\u01a2\021\uff6e\025\u01ad\050\100\054\063\056\u01bd" +
    "\064\071\065\107\001\002\000\004\062\u01c7\001\002\000" +
    "\004\021\u01c5\001\002\000\030\005\073\006\u01ba\013\u01ab" +
    "\017\u01a2\021\uff74\025\u01ad\050\100\054\063\056\u01bd\064" +
    "\071\065\107\001\002\000\010\017\u01c0\025\u01bf\030\u01be" +
    "\001\002\000\004\062\u01c3\001\002\000\004\062\u01c2\001" +
    "\002\000\004\062\u01c1\001\002\000\004\021\uff6a\001\002" +
    "\000\004\021\uff6c\001\002\000\004\021\uff6b\001\002\000" +
    "\004\021\uff7e\001\002\000\004\062\u01c6\001\002\000\036" +
    "\003\uff7f\005\uff7f\006\uff7f\013\uff7f\017\uff7f\021\uff7f\024" +
    "\uff7f\025\uff7f\050\uff7f\054\uff7f\056\uff7f\060\uff7f\064\uff7f" +
    "\065\uff7f\001\002\000\030\005\073\006\u01ba\013\u01ab\017" +
    "\u01a2\021\uff75\025\u01ad\050\100\054\063\056\u01bd\064\071" +
    "\065\107\001\002\000\004\021\uff76\001\002\000\004\021" +
    "\uff78\001\002\000\004\021\uff7c\001\002\000\004\021\uff7b" +
    "\001\002\000\004\021\uff77\001\002\000\004\021\uff79\001" +
    "\002\000\004\021\uff7d\001\002\000\004\021\uff7a\001\002" +
    "\000\004\062\u01d3\001\002\000\030\003\u01ac\005\073\006" +
    "\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\060\u01aa" +
    "\064\071\065\107\001\002\000\014\003\uffbf\006\uffbf\031" +
    "\uffbf\033\uffbf\060\uffbf\001\002\000\014\003\uffe3\006\uffe3" +
    "\031\uffe3\033\uffe3\060\uffe3\001\002\000\004\014\u01d5\001" +
    "\002\000\004\062\u01d6\001\002\000\004\060\u01d7\001\002" +
    "\000\004\013\u01d8\001\002\000\004\062\u01d9\001\002\000" +
    "\036\003\uffbe\005\uffbe\006\uffbe\013\uffbe\017\uffbe\021\uffbe" +
    "\024\uffbe\025\uffbe\050\uffbe\054\uffbe\056\uffbe\060\uffbe\064" +
    "\uffbe\065\uffbe\001\002\000\004\062\u01dd\001\002\000\004" +
    "\062\u01dc\001\002\000\014\003\uffe2\006\uffe2\031\uffe2\033" +
    "\uffe2\060\uffe2\001\002\000\014\003\uffe4\006\uffe4\031\uffe4" +
    "\033\uffe4\060\uffe4\001\002\000\030\003\u01ac\005\073\006" +
    "\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063\060\u01aa" +
    "\064\071\065\107\001\002\000\014\003\uffc1\006\uffc1\031" +
    "\uffc1\033\uffc1\060\uffc1\001\002\000\014\003\uffc6\006\uffc6" +
    "\031\uffc6\033\uffc6\060\uffc6\001\002\000\014\003\uffc2\006" +
    "\uffc2\031\uffc2\033\uffc2\060\uffc2\001\002\000\014\003\uffc5" +
    "\006\uffc5\031\uffc5\033\uffc5\060\uffc5\001\002\000\014\003" +
    "\uffc8\006\uffc8\031\uffc8\033\uffc8\060\uffc8\001\002\000\004" +
    "\047\u01e5\001\002\000\006\064\112\065\107\001\002\000" +
    "\004\020\u01e7\001\002\000\010\050\100\064\112\065\107" +
    "\001\002\000\026\005\073\006\u01f4\013\u01ab\017\u01a2\025" +
    "\u01ad\050\100\054\063\056\u01f7\064\071\065\107\001\002" +
    "\000\020\023\u01ea\035\137\036\136\037\134\040\132\041" +
    "\133\042\140\001\002\000\006\036\355\065\354\001\002" +
    "\000\004\062\u01ec\001\002\000\026\005\073\006\u01f4\013" +
    "\u01ab\017\u01a2\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff58\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff5b\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff57\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff5d\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff59\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff5a\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\030\005\073\006\u01f4\013\u01ab\017" +
    "\u01a2\024\uff56\025\u01ad\050\100\054\063\056\u01f7\064\071" +
    "\065\107\001\002\000\004\062\u0202\001\002\000\004\024" +
    "\u01ff\001\002\000\030\005\073\006\u01f4\013\u01ab\017\u01a2" +
    "\024\uff5c\025\u01ad\050\100\054\063\056\u01f7\064\071\065" +
    "\107\001\002\000\010\017\u01fa\025\u01f9\030\u01f8\001\002" +
    "\000\004\062\u01fd\001\002\000\004\062\u01fc\001\002\000" +
    "\004\062\u01fb\001\002\000\004\024\uff53\001\002\000\004" +
    "\024\uff55\001\002\000\004\024\uff54\001\002\000\004\024" +
    "\uff66\001\002\000\004\064\u0200\001\002\000\004\062\u0201" +
    "\001\002\000\036\003\uff69\005\uff69\006\uff69\013\uff69\017" +
    "\uff69\021\uff69\024\uff69\025\uff69\050\uff69\054\uff69\056\uff69" +
    "\060\uff69\064\uff69\065\uff69\001\002\000\030\005\073\006" +
    "\u01f4\013\u01ab\017\u01a2\024\uff5e\025\u01ad\050\100\054\063" +
    "\056\u01f7\064\071\065\107\001\002\000\004\024\uff5f\001" +
    "\002\000\004\024\uff60\001\002\000\004\024\uff64\001\002" +
    "\000\004\024\uff63\001\002\000\004\024\uff67\001\002\000" +
    "\004\024\uff61\001\002\000\004\024\uff65\001\002\000\004" +
    "\024\uff62\001\002\000\004\024\u020c\001\002\000\004\064" +
    "\u020d\001\002\000\004\062\u020e\001\002\000\036\003\uff68" +
    "\005\uff68\006\uff68\013\uff68\017\uff68\021\uff68\024\uff68\025" +
    "\uff68\050\uff68\054\uff68\056\uff68\060\uff68\064\uff68\065\uff68" +
    "\001\002\000\014\003\uffc3\006\uffc3\031\uffc3\033\uffc3\060" +
    "\uffc3\001\002\000\014\003\uffc4\006\uffc4\031\uffc4\033\uffc4" +
    "\060\uffc4\001\002\000\014\003\uffc7\006\uffc7\031\uffc7\033" +
    "\uffc7\060\uffc7\001\002\000\004\062\u0215\001\002\000\004" +
    "\062\u0214\001\002\000\020\002\uffe7\003\uffe7\006\uffe7\031" +
    "\uffe7\033\uffe7\060\uffe7\064\uffe7\001\002\000\020\002\uffe5" +
    "\003\uffe5\006\uffe5\031\uffe5\033\uffe5\060\uffe5\064\uffe5\001" +
    "\002\000\020\002\uffd3\003\uffd3\006\uffd3\031\uffd3\033\uffd3" +
    "\060\uffd3\064\uffd3\001\002\000\020\002\uffd5\003\uffd5\006" +
    "\uffd5\031\uffd5\033\uffd5\060\uffd5\064\uffd5\001\002\000\020" +
    "\002\uff4c\003\uff4c\006\uff4c\031\uff4c\033\uff4c\060\uff4c\064" +
    "\uff4c\001\002\000\020\002\uff50\003\uff50\006\uff50\031\uff50" +
    "\033\uff50\060\uff50\064\uff50\001\002\000\006\004\u021c\057" +
    "\u021b\001\002\000\004\050\u0224\001\002\000\004\050\u021d" +
    "\001\002\000\006\063\u021f\064\u021e\001\002\000\004\051" +
    "\u0222\001\002\000\004\051\u0220\001\002\000\004\062\u0221" +
    "\001\002\000\042\003\uff04\005\uff04\006\uff04\013\uff04\015" +
    "\uff04\016\uff04\017\uff04\021\uff04\024\uff04\025\uff04\050\uff04" +
    "\054\uff04\056\uff04\060\uff04\064\uff04\065\uff04\001\002\000" +
    "\004\062\u0223\001\002\000\042\003\uff03\005\uff03\006\uff03" +
    "\013\uff03\015\uff03\016\uff03\017\uff03\021\uff03\024\uff03\025" +
    "\uff03\050\uff03\054\uff03\056\uff03\060\uff03\064\uff03\065\uff03" +
    "\001\002\000\004\051\u0225\001\002\000\004\062\u0226\001" +
    "\002\000\042\003\uff35\005\uff35\006\uff35\013\uff35\015\uff35" +
    "\016\uff35\017\uff35\021\uff35\024\uff35\025\uff35\050\uff35\054" +
    "\uff35\056\uff35\060\uff35\064\uff35\065\uff35\001\002\000\020" +
    "\002\uff4f\003\uff4f\006\uff4f\031\uff4f\033\uff4f\060\uff4f\064" +
    "\uff4f\001\002\000\004\064\u024a\001\002\000\012\050\u0241" +
    "\051\u0240\064\112\065\107\001\002\000\006\052\u023b\062" +
    "\u023a\001\002\000\020\005\u022e\026\111\027\115\050\100" +
    "\063\u0231\064\u022f\065\107\001\002\000\004\062\u0239\001" +
    "\002\000\020\035\137\036\136\037\134\040\132\041\133" +
    "\042\140\062\uff41\001\002\000\004\053\u0234\001\002\000" +
    "\026\035\uff29\036\uff29\037\uff29\040\uff29\041\uff29\042\uff29" +
    "\050\u0229\062\uff29\064\112\065\107\001\002\000\042\003" +
    "\uff37\005\uff37\006\uff37\013\uff37\015\uff37\016\uff37\017\uff37" +
    "\021\uff37\024\uff37\025\uff37\050\uff37\054\uff37\056\uff37\060" +
    "\uff37\064\uff37\065\uff37\001\002\000\004\062\uff40\001\002" +
    "\000\042\003\uff38\005\uff38\006\uff38\013\uff38\015\uff38\016" +
    "\uff38\017\uff38\021\uff38\024\uff38\025\uff38\050\uff38\054\uff38" +
    "\056\uff38\060\uff38\064\uff38\065\uff38\001\002\000\004\062" +
    "\uff42\001\002\000\004\057\u0235\001\002\000\004\050\u0236" +
    "\001\002\000\004\051\u0237\001\002\000\004\062\u0238\001" +
    "\002\000\042\003\uff36\005\uff36\006\uff36\013\uff36\015\uff36" +
    "\016\uff36\017\uff36\021\uff36\024\uff36\025\uff36\050\uff36\054" +
    "\uff36\056\uff36\060\uff36\064\uff36\065\uff36\001\002\000\042" +
    "\003\uff39\005\uff39\006\uff39\013\uff39\015\uff39\016\uff39\017" +
    "\uff39\021\uff39\024\uff39\025\uff39\050\uff39\054\uff39\056\uff39" +
    "\060\uff39\064\uff39\065\uff39\001\002\000\042\003\uff07\005" +
    "\uff07\006\uff07\013\uff07\015\uff07\016\uff07\017\uff07\021\uff07" +
    "\024\uff07\025\uff07\050\uff07\054\uff07\056\uff07\060\uff07\064" +
    "\uff07\065\uff07\001\002\000\006\064\112\065\107\001\002" +
    "\000\004\062\u023d\001\002\000\042\003\uff08\005\uff08\006" +
    "\uff08\013\uff08\015\uff08\016\uff08\017\uff08\021\uff08\024\uff08" +
    "\025\uff08\050\uff08\054\uff08\056\uff08\060\uff08\064\uff08\065" +
    "\uff08\001\002\000\006\052\u023b\062\uff0b\001\002\000\004" +
    "\062\uff0c\001\002\000\004\062\u0249\001\002\000\006\064" +
    "\112\065\107\001\002\000\006\052\u023b\062\u0243\001\002" +
    "\000\042\003\uff0a\005\uff0a\006\uff0a\013\uff0a\015\uff0a\016" +
    "\uff0a\017\uff0a\021\uff0a\024\uff0a\025\uff0a\050\uff0a\054\uff0a" +
    "\056\uff0a\060\uff0a\064\uff0a\065\uff0a\001\002\000\004\062" +
    "\u0245\001\002\000\042\003\uff05\005\uff05\006\uff05\013\uff05" +
    "\015\uff05\016\uff05\017\uff05\021\uff05\024\uff05\025\uff05\050" +
    "\uff05\054\uff05\056\uff05\060\uff05\064\uff05\065\uff05\001\002" +
    "\000\004\051\u0247\001\002\000\004\062\u0248\001\002\000" +
    "\042\003\uff06\005\uff06\006\uff06\013\uff06\015\uff06\016\uff06" +
    "\017\uff06\021\uff06\024\uff06\025\uff06\050\uff06\054\uff06\056" +
    "\uff06\060\uff06\064\uff06\065\uff06\001\002\000\042\003\uff09" +
    "\005\uff09\006\uff09\013\uff09\015\uff09\016\uff09\017\uff09\021" +
    "\uff09\024\uff09\025\uff09\050\uff09\054\uff09\056\uff09\060\uff09" +
    "\064\uff09\065\uff09\001\002\000\004\047\u024b\001\002\000" +
    "\016\005\u024e\026\111\027\115\063\u0231\064\112\065\107" +
    "\001\002\000\004\062\u0254\001\002\000\004\062\uff41\001" +
    "\002\000\004\053\u024f\001\002\000\004\057\u0250\001\002" +
    "\000\004\050\u0251\001\002\000\004\051\u0252\001\002\000" +
    "\004\062\u0253\001\002\000\042\003\uff34\005\uff34\006\uff34" +
    "\013\uff34\015\uff34\016\uff34\017\uff34\021\uff34\024\uff34\025" +
    "\uff34\050\uff34\054\uff34\056\uff34\060\uff34\064\uff34\065\uff34" +
    "\001\002\000\042\003\uff3a\005\uff3a\006\uff3a\013\uff3a\015" +
    "\uff3a\016\uff3a\017\uff3a\021\uff3a\024\uff3a\025\uff3a\050\uff3a" +
    "\054\uff3a\056\uff3a\060\uff3a\064\uff3a\065\uff3a\001\002\000" +
    "\004\047\u0256\001\002\000\006\064\112\065\107\001\002" +
    "\000\004\020\u0258\001\002\000\010\050\100\064\112\065" +
    "\107\001\002\000\026\005\073\006\u0265\013\u0267\017\067" +
    "\025\u0268\050\100\054\063\056\u026a\064\071\065\107\001" +
    "\002\000\020\023\u025b\035\137\036\136\037\134\040\132" +
    "\041\133\042\140\001\002\000\006\036\355\065\354\001" +
    "\002\000\004\062\u025d\001\002\000\026\005\073\006\u0265" +
    "\013\u0267\017\067\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\030\005\073\006\u0265\013\u0267" +
    "\017\067\024\ufeba\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\030\005\073\006\u0265\013\u0267" +
    "\017\067\024\ufeb6\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\030\005\073\006\u0265\013\u0267" +
    "\017\067\024\ufeb5\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\030\005\073\006\u0265\013\u0267" +
    "\017\067\024\ufeb7\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\030\005\073\006\u0265\013\u0267" +
    "\017\067\024\ufeb8\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\030\005\073\006\u0265\013\u0267" +
    "\017\067\024\ufeb4\025\u0268\050\100\054\063\056\u026a\064" +
    "\071\065\107\001\002\000\004\024\u02e6\001\002\000\004" +
    "\062\u02e4\001\002\000\030\005\073\006\u0265\013\u0267\017" +
    "\067\024\ufeb3\025\u0268\050\100\054\063\056\u026a\064\071" +
    "\065\107\001\002\000\012\026\111\027\115\064\112\065" +
    "\107\001\002\000\004\022\u026e\001\002\000\030\005\073" +
    "\006\u0265\013\u0267\017\067\024\ufeb9\025\u0268\050\100\054" +
    "\063\056\u026a\064\071\065\107\001\002\000\004\017\u026b" +
    "\001\002\000\004\062\u026c\001\002\000\004\024\ufeb2\001" +
    "\002\000\004\024\ufec3\001\002\000\012\026\111\027\115" +
    "\064\112\065\107\001\002\000\004\062\u0270\001\002\000" +
    "\026\005\073\006\u0277\013\u0267\017\067\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\030\005" +
    "\073\006\u0277\013\u0267\017\067\021\ufe67\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\030\005" +
    "\073\006\u0277\013\u0267\017\067\021\ufe64\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\030\005" +
    "\073\006\u0277\013\u0267\017\067\021\ufe63\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\030\005" +
    "\073\006\u0277\013\u0267\017\067\021\ufe65\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\030\005" +
    "\073\006\u0277\013\u0267\017\067\021\ufe66\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\030\005" +
    "\073\006\u0277\013\u0267\017\067\021\ufe62\025\u0268\050\100" +
    "\054\063\056\u027b\064\071\065\107\001\002\000\004\062" +
    "\u0284\001\002\000\004\021\u0282\001\002\000\030\005\073" +
    "\006\u0277\013\u0267\017\067\021\ufe60\025\u0268\050\100\054" +
    "\063\056\u027b\064\071\065\107\001\002\000\030\005\073" +
    "\006\u0277\013\u0267\017\067\021\ufe61\025\u0268\050\100\054" +
    "\063\056\u027b\064\071\065\107\001\002\000\006\017\u027d" +
    "\025\u027c\001\002\000\004\062\u027f\001\002\000\004\062" +
    "\u027e\001\002\000\004\021\ufe5e\001\002\000\004\021\ufe5f" +
    "\001\002\000\004\021\ufe6a\001\002\000\004\021\ufe6b\001" +
    "\002\000\004\062\u0283\001\002\000\040\005\ufe72\006\ufe72" +
    "\013\ufe72\015\ufe72\016\ufe72\017\ufe72\021\ufe72\024\ufe72\025" +
    "\ufe72\050\ufe72\054\ufe72\056\ufe72\060\ufe72\064\ufe72\065\ufe72" +
    "\001\002\000\030\005\073\006\u0277\013\u0267\017\067\021" +
    "\ufe68\025\u0268\050\100\054\063\056\u027b\064\071\065\107" +
    "\001\002\000\004\021\ufe69\001\002\000\004\021\ufe6c\001" +
    "\002\000\004\021\ufe70\001\002\000\004\021\ufe6f\001\002" +
    "\000\004\021\ufe6d\001\002\000\004\021\ufe6e\001\002\000" +
    "\004\021\ufe71\001\002\000\004\014\u028d\001\002\000\004" +
    "\062\u028e\001\002\000\032\005\073\006\u0298\013\u0267\015" +
    "\u0291\016\u028f\017\067\025\u0268\050\100\054\063\056\u029b" +
    "\064\071\065\107\001\002\000\004\062\u02e1\001\002\000" +
    "\034\005\073\006\u0298\013\u0267\015\u0291\016\u028f\017\067" +
    "\025\u0268\050\100\054\063\056\u029b\060\ufe9f\064\071\065" +
    "\107\001\002\000\012\026\111\027\115\064\112\065\107" +
    "\001\002\000\034\005\073\006\u0298\013\u0267\015\u0291\016" +
    "\u028f\017\067\025\u0268\050\100\054\063\056\u029b\060\ufea2" +
    "\064\071\065\107\001\002\000\034\005\073\006\u0298\013" +
    "\u0267\015\u0291\016\u028f\017\067\025\u0268\050\100\054\063" +
    "\056\u029b\060\ufea1\064\071\065\107\001\002\000\034\005" +
    "\073\006\u0298\013\u0267\015\u0291\016\u028f\017\067\025\u0268" +
    "\050\100\054\063\056\u029b\060\ufea3\064\071\065\107\001" +
    "\002\000\034\005\073\006\u0298\013\u0267\015\u0291\016\u028f" +
    "\017\067\025\u0268\050\100\054\063\056\u029b\060\ufea4\064" +
    "\071\065\107\001\002\000\034\005\073\006\u0298\013\u0267" +
    "\015\u0291\016\u028f\017\067\025\u0268\050\100\054\063\056" +
    "\u029b\060\ufea0\064\071\065\107\001\002\000\004\060\u02a2" +
    "\001\002\000\004\062\u02a0\001\002\000\034\005\073\006" +
    "\u0298\013\u0267\015\u0291\016\u028f\017\067\025\u0268\050\100" +
    "\054\063\056\u029b\060\ufe9e\064\071\065\107\001\002\000" +
    "\034\005\073\006\u0298\013\u0267\015\u0291\016\u028f\017\067" +
    "\025\u0268\050\100\054\063\056\u029b\060\ufea5\064\071\065" +
    "\107\001\002\000\004\017\u029c\001\002\000\004\062\u029d" +
    "\001\002\000\004\060\ufe9d\001\002\000\004\060\ufeaf\001" +
    "\002\000\004\060\ufea8\001\002\000\034\005\073\006\u0298" +
    "\013\u0267\015\u0291\016\u028f\017\067\025\u0268\050\100\054" +
    "\063\056\u029b\060\ufea6\064\071\065\107\001\002\000\004" +
    "\060\ufea7\001\002\000\004\013\u02a3\001\002\000\004\062" +
    "\u02a4\001\002\000\040\005\ufeb1\006\ufeb1\013\ufeb1\015\ufeb1" +
    "\016\ufeb1\017\ufeb1\021\ufeb1\024\ufeb1\025\ufeb1\050\ufeb1\054" +
    "\ufeb1\056\ufeb1\060\ufeb1\064\ufeb1\065\ufeb1\001\002\000\004" +
    "\060\ufeab\001\002\000\004\060\ufeae\001\002\000\004\060" +
    "\ufead\001\002\000\004\060\ufeaa\001\002\000\004\060\ufeac" +
    "\001\002\000\004\014\u02ac\001\002\000\004\060\ufe9b\001" +
    "\002\000\004\062\u02ad\001\002\000\032\005\073\006\u02b6" +
    "\013\u0267\015\u02b0\016\u02ae\017\067\025\u0268\050\100\054" +
    "\063\056\u02ba\064\071\065\107\001\002\000\004\062\u02c8" +
    "\001\002\000\034\005\073\006\u02b6\013\u0267\015\u02b0\016" +
    "\u02ae\017\067\025\u0268\050\100\054\063\056\u02ba\060\ufe88" +
    "\064\071\065\107\001\002\000\012\026\111\027\115\064" +
    "\112\065\107\001\002\000\034\005\073\006\u02b6\013\u0267" +
    "\015\u02b0\016\u02ae\017\067\025\u0268\050\100\054\063\056" +
    "\u02ba\060\ufe8b\064\071\065\107\001\002\000\034\005\073" +
    "\006\u02b6\013\u0267\015\u02b0\016\u02ae\017\067\025\u0268\050" +
    "\100\054\063\056\u02ba\060\ufe8a\064\071\065\107\001\002" +
    "\000\034\005\073\006\u02b6\013\u0267\015\u02b0\016\u02ae\017" +
    "\067\025\u0268\050\100\054\063\056\u02ba\060\ufe8c\064\071" +
    "\065\107\001\002\000\034\005\073\006\u02b6\013\u0267\015" +
    "\u02b0\016\u02ae\017\067\025\u0268\050\100\054\063\056\u02ba" +
    "\060\ufe8d\064\071\065\107\001\002\000\034\005\073\006" +
    "\u02b6\013\u0267\015\u02b0\016\u02ae\017\067\025\u0268\050\100" +
    "\054\063\056\u02ba\060\ufe89\064\071\065\107\001\002\000" +
    "\004\062\u02bf\001\002\000\034\005\073\006\u02b6\013\u0267" +
    "\015\u02b0\016\u02ae\017\067\025\u0268\050\100\054\063\056" +
    "\u02ba\060\ufe87\064\071\065\107\001\002\000\004\060\ufeb0" +
    "\001\002\000\034\005\073\006\u02b6\013\u0267\015\u02b0\016" +
    "\u02ae\017\067\025\u0268\050\100\054\063\056\u02ba\060\ufe8e" +
    "\064\071\065\107\001\002\000\004\017\u02bb\001\002\000" +
    "\004\062\u02bc\001\002\000\004\060\ufe86\001\002\000\004" +
    "\060\ufe9a\001\002\000\004\060\ufe91\001\002\000\034\005" +
    "\073\006\u02b6\013\u0267\015\u02b0\016\u02ae\017\067\025\u0268" +
    "\050\100\054\063\056\u02ba\060\ufe8f\064\071\065\107\001" +
    "\002\000\004\060\ufe90\001\002\000\004\060\ufe94\001\002" +
    "\000\004\060\ufe99\001\002\000\004\060\ufe98\001\002\000" +
    "\004\060\ufe93\001\002\000\004\060\ufe97\001\002\000\004" +
    "\060\ufe95\001\002\000\004\060\ufe92\001\002\000\026\005" +
    "\073\006\u02cf\013\u0267\017\067\025\u0268\050\100\054\063" +
    "\056\u02d3\064\071\065\107\001\002\000\030\005\073\006" +
    "\u02cf\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3" +
    "\060\ufe75\064\071\065\107\001\002\000\030\005\073\006" +
    "\u02cf\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3" +
    "\060\ufe78\064\071\065\107\001\002\000\030\005\073\006" +
    "\u02cf\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3" +
    "\060\ufe77\064\071\065\107\001\002\000\030\005\073\006" +
    "\u02cf\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3" +
    "\060\ufe79\064\071\065\107\001\002\000\030\005\073\006" +
    "\u02cf\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3" +
    "\060\ufe7a\064\071\065\107\001\002\000\030\005\073\006" +
    "\u02cf\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3" +
    "\060\ufe76\064\071\065\107\001\002\000\004\062\u02d8\001" +
    "\002\000\004\060\ufe96\001\002\000\030\005\073\006\u02cf" +
    "\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3\060" +
    "\ufe74\064\071\065\107\001\002\000\030\005\073\006\u02cf" +
    "\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3\060" +
    "\ufe7b\064\071\065\107\001\002\000\004\017\u02d4\001\002" +
    "\000\004\062\u02d5\001\002\000\004\060\ufe73\001\002\000" +
    "\004\060\ufe85\001\002\000\004\060\ufe7e\001\002\000\030" +
    "\005\073\006\u02cf\013\u0267\017\067\025\u0268\050\100\054" +
    "\063\056\u02d3\060\ufe7c\064\071\065\107\001\002\000\004" +
    "\060\ufe7d\001\002\000\004\060\ufe81\001\002\000\004\060" +
    "\ufe84\001\002\000\004\060\ufe83\001\002\000\004\060\ufe80" +
    "\001\002\000\004\060\ufe82\001\002\000\004\060\ufe7f\001" +
    "\002\000\004\060\ufea9\001\002\000\026\005\073\006\u02cf" +
    "\013\u0267\017\067\025\u0268\050\100\054\063\056\u02d3\064" +
    "\071\065\107\001\002\000\004\060\ufe9c\001\002\000\004" +
    "\024\ufebd\001\002\000\030\005\073\006\u0265\013\u0267\017" +
    "\067\024\ufebb\025\u0268\050\100\054\063\056\u026a\064\071" +
    "\065\107\001\002\000\004\024\ufebc\001\002\000\004\064" +
    "\u02e7\001\002\000\004\062\u02e8\001\002\000\042\003\ufec6" +
    "\005\ufec6\006\ufec6\013\ufec6\015\ufec6\016\ufec6\017\ufec6\021" +
    "\ufec6\024\ufec6\025\ufec6\050\ufec6\054\ufec6\056\ufec6\060\ufec6" +
    "\064\ufec6\065\ufec6\001\002\000\004\024\ufebe\001\002\000" +
    "\004\024\ufec2\001\002\000\004\024\ufec1\001\002\000\004" +
    "\024\ufebf\001\002\000\004\024\ufec0\001\002\000\004\024" +
    "\ufec4\001\002\000\004\024\u02f0\001\002\000\004\064\u02f1" +
    "\001\002\000\004\062\u02f2\001\002\000\042\003\ufec5\005" +
    "\ufec5\006\ufec5\013\ufec5\015\ufec5\016\ufec5\017\ufec5\021\ufec5" +
    "\024\ufec5\025\ufec5\050\ufec5\054\ufec5\056\ufec5\060\ufec5\064" +
    "\ufec5\065\ufec5\001\002\000\020\002\uff4b\003\uff4b\006\uff4b" +
    "\031\uff4b\033\uff4b\060\uff4b\064\uff4b\001\002\000\020\002" +
    "\uff4d\003\uff4d\006\uff4d\031\uff4d\033\uff4d\060\uff4d\064\uff4d" +
    "\001\002\000\020\002\uff4e\003\uff4e\006\uff4e\031\uff4e\033" +
    "\uff4e\060\uff4e\064\uff4e\001\002\000\006\047\u02f8\055\u02f7" +
    "\001\002\000\010\007\u019a\010\u019d\011\u019b\001\002\000" +
    "\016\026\111\027\115\050\100\063\u0231\064\112\065\107" +
    "\001\002\000\004\062\u02fb\001\002\000\042\003\uff3b\005" +
    "\uff3b\006\uff3b\013\uff3b\015\uff3b\016\uff3b\017\uff3b\021\uff3b" +
    "\024\uff3b\025\uff3b\050\uff3b\054\uff3b\056\uff3b\060\uff3b\064" +
    "\uff3b\065\uff3b\001\002\000\042\003\uff3c\005\uff3c\006\uff3c" +
    "\013\uff3c\015\uff3c\016\uff3c\017\uff3c\021\uff3c\024\uff3c\025" +
    "\uff3c\050\uff3c\054\uff3c\056\uff3c\060\uff3c\064\uff3c\065\uff3c" +
    "\001\002\000\006\047\u02fe\062\u02fd\001\002\000\042\003" +
    "\uff3f\005\uff3f\006\uff3f\013\uff3f\015\uff3f\016\uff3f\017\uff3f" +
    "\021\uff3f\024\uff3f\025\uff3f\050\uff3f\054\uff3f\056\uff3f\060" +
    "\uff3f\064\uff3f\065\uff3f\001\002\000\014\026\111\027\115" +
    "\063\u0231\064\u022f\065\107\001\002\000\004\062\u0301\001" +
    "\002\000\042\003\uff3d\005\uff3d\006\uff3d\013\uff3d\015\uff3d" +
    "\016\uff3d\017\uff3d\021\uff3d\024\uff3d\025\uff3d\050\uff3d\054" +
    "\uff3d\056\uff3d\060\uff3d\064\uff3d\065\uff3d\001\002\000\042" +
    "\003\uff3e\005\uff3e\006\uff3e\013\uff3e\015\uff3e\016\uff3e\017" +
    "\uff3e\021\uff3e\024\uff3e\025\uff3e\050\uff3e\054\uff3e\056\uff3e" +
    "\060\uff3e\064\uff3e\065\uff3e\001\002\000\020\002\uff52\003" +
    "\uff52\006\uff52\031\uff52\033\uff52\060\uff52\064\uff52\001\002" +
    "\000\004\055\u0309\001\002\000\004\064\u0305\001\002\000" +
    "\004\055\u0306\001\002\000\010\007\u019a\010\u019d\011\u019b" +
    "\001\002\000\012\012\056\051\055\052\057\064\054\001" +
    "\002\000\010\003\uff45\055\uff45\062\uff45\001\002\000\010" +
    "\007\u019a\010\u019d\011\u019b\001\002\000\012\012\056\051" +
    "\055\052\057\064\054\001\002\000\010\003\uff44\055\uff44" +
    "\062\uff44\001\002\000\004\055\u030d\001\002\000\010\007" +
    "\u019a\010\u019d\011\u019b\001\002\000\012\012\056\051\055" +
    "\052\057\064\054\001\002\000\010\003\uff47\055\uff47\062" +
    "\uff47\001\002\000\010\007\u019a\010\u019d\011\u019b\001\002" +
    "\000\012\012\056\051\055\052\057\064\054\001\002\000" +
    "\010\003\uff46\055\uff46\062\uff46\001\002\000\004\062\u0316" +
    "\001\002\000\004\062\u0315\001\002\000\014\003\uffe1\006" +
    "\uffe1\031\uffe1\033\uffe1\060\uffe1\001\002\000\014\003\uffdf" +
    "\006\uffdf\031\uffdf\033\uffdf\060\uffdf\001\002\000\014\003" +
    "\uffce\006\uffce\031\uffce\033\uffce\060\uffce\001\002\000\014" +
    "\003\041\006\045\033\044\060\043\064\040\001\002\000" +
    "\004\062\u031a\001\002\000\014\003\uffe0\006\uffe0\031\uffe0" +
    "\033\uffe0\060\uffe0\001\002\000\014\003\uffcc\006\uffcc\031" +
    "\uffcc\033\uffcc\060\uffcc\001\002\000\010\007\u019a\010\u019d" +
    "\011\u019b\001\002\000\006\047\u031f\062\u031e\001\002\000" +
    "\014\003\uffcb\006\uffcb\033\uffcb\060\uffcb\064\uffcb\001\002" +
    "\000\014\026\111\027\115\063\u0231\064\112\065\107\001" +
    "\002\000\004\062\u0321\001\002\000\014\003\uffca\006\uffca" +
    "\033\uffca\060\uffca\064\uffca\001\002\000\014\003\uffd0\006" +
    "\uffd0\031\uffd0\033\uffd0\060\uffd0\001\002\000\014\003\041" +
    "\006\045\033\044\060\043\064\040\001\002\000\014\003" +
    "\ufff5\006\ufff5\031\ufff5\033\ufff5\060\ufff5\001\002\000\006" +
    "\003\u032b\050\u032c\001\002\000\004\050\u0327\001\002\000" +
    "\012\012\056\051\055\052\057\064\054\001\002\000\004" +
    "\062\u0329\001\002\000\030\003\105\005\073\006\101\013" +
    "\103\017\067\025\106\050\100\054\063\060\102\064\071" +
    "\065\107\001\002\000\016\003\uffee\006\uffee\031\uffee\033" +
    "\uffee\060\uffee\064\uffee\001\002\000\012\012\056\051\055" +
    "\052\057\064\054\001\002\000\012\012\056\051\055\052" +
    "\057\064\054\001\002\000\004\062\u032e\001\002\000\030" +
    "\003\105\005\073\006\101\013\103\017\067\025\106\050" +
    "\100\054\063\060\102\064\071\065\107\001\002\000\016" +
    "\003\ufff1\006\ufff1\031\ufff1\033\ufff1\060\ufff1\064\ufff1\001" +
    "\002\000\004\062\u0331\001\002\000\030\003\105\005\073" +
    "\006\101\013\103\017\067\025\106\050\100\054\063\060" +
    "\102\064\071\065\107\001\002\000\016\003\uffed\006\uffed" +
    "\031\uffed\033\uffed\060\uffed\064\uffed\001\002\000\006\050" +
    "\u0335\062\u0334\001\002\000\014\003\041\006\045\033\044" +
    "\060\043\064\040\001\002\000\012\012\056\051\055\052" +
    "\057\064\054\001\002\000\006\055\u0337\062\061\001\002" +
    "\000\010\007\u019a\010\u019d\011\u019b\001\002\000\004\062" +
    "\u0339\001\002\000\030\003\u01ac\005\073\006\u01a9\013\u01ab" +
    "\017\u01a2\025\u01ad\050\100\054\063\060\u01aa\064\071\065" +
    "\107\001\002\000\014\003\ufff9\006\ufff9\031\ufff9\033\ufff9" +
    "\060\ufff9\001\002\000\014\003\ufff3\006\ufff3\031\ufff3\033" +
    "\ufff3\060\ufff3\001\002\000\006\003\u0344\050\u0345\001\002" +
    "\000\004\050\u033e\001\002\000\012\012\056\051\055\052" +
    "\057\064\054\001\002\000\004\055\u0340\001\002\000\010" +
    "\007\u019a\010\u019d\011\u019b\001\002\000\004\062\u0342\001" +
    "\002\000\030\003\u01ac\005\073\006\u01a9\013\u01ab\017\u01a2" +
    "\025\u01ad\050\100\054\063\060\u01aa\064\071\065\107\001" +
    "\002\000\014\003\ufff8\006\ufff8\031\ufff8\033\ufff8\060\ufff8" +
    "\001\002\000\012\012\056\051\055\052\057\064\054\001" +
    "\002\000\012\012\056\051\055\052\057\064\054\001\002" +
    "\000\006\003\u0347\055\u0348\001\002\000\010\007\u019a\010" +
    "\u019d\011\u019b\001\002\000\010\007\u019a\010\u019d\011\u019b" +
    "\001\002\000\004\062\u034a\001\002\000\030\003\u01ac\005" +
    "\073\006\u01a9\013\u01ab\017\u01a2\025\u01ad\050\100\054\063" +
    "\060\u01aa\064\071\065\107\001\002\000\014\003\ufffb\006" +
    "\ufffb\031\ufffb\033\ufffb\060\ufffb\001\002\000\004\062\u034d" +
    "\001\002\000\030\003\u01ac\005\073\006\u01a9\013\u01ab\017" +
    "\u01a2\025\u01ad\050\100\054\063\060\u01aa\064\071\065\107" +
    "\001\002\000\014\003\ufff6\006\ufff6\031\ufff6\033\ufff6\060" +
    "\ufff6\001\002\000\004\055\u0350\001\002\000\010\007\u019a" +
    "\010\u019d\011\u019b\001\002\000\004\062\u0352\001\002\000" +
    "\030\003\u01ac\005\073\006\u01a9\013\u01ab\017\u01a2\025\u01ad" +
    "\050\100\054\063\060\u01aa\064\071\065\107\001\002\000" +
    "\014\003\ufff7\006\ufff7\031\ufff7\033\ufff7\060\ufff7\001\002" +
    "\000\004\002\uffd9\001\002\000\004\050\u0358\001\002\000" +
    "\012\003\021\006\024\031\020\033\023\001\002\000\004" +
    "\002\uffd6\001\002\000\004\051\u0359\001\002\000\004\062" +
    "\u035a\001\002\000\030\003\105\005\073\006\101\013\103" +
    "\017\067\025\106\050\100\054\063\060\102\064\071\065" +
    "\107\001\002\000\004\002\uffeb\001\002\000\006\003\u0362" +
    "\050\u0363\001\002\000\004\050\u035e\001\002\000\004\051" +
    "\u035f\001\002\000\004\062\u0360\001\002\000\030\003\105" +
    "\005\073\006\101\013\103\017\067\025\106\050\100\054" +
    "\063\060\102\064\071\065\107\001\002\000\004\002\uffea" +
    "\001\002\000\004\051\u036a\001\002\000\006\003\u0365\051" +
    "\u0364\001\002\000\004\062\u0368\001\002\000\004\062\u0366" +
    "\001\002\000\030\003\105\005\073\006\101\013\103\017" +
    "\067\025\106\050\100\054\063\060\102\064\071\065\107" +
    "\001\002\000\004\002\uffe8\001\002\000\030\003\105\005" +
    "\073\006\101\013\103\017\067\025\106\050\100\054\063" +
    "\060\102\064\071\065\107\001\002\000\004\002\uffec\001" +
    "\002\000\004\062\u036b\001\002\000\030\003\105\005\073" +
    "\006\101\013\103\017\067\025\106\050\100\054\063\060" +
    "\102\064\071\065\107\001\002\000\004\002\uffe9\001\002" +
    "\000\004\002\uffda\001\002\000\004\002\uffdb\001\002\000" +
    "\012\003\021\006\024\031\020\033\023\001\002\000\004" +
    "\002\000\001\002\000\004\062\u0372\001\002\000\012\003" +
    "\021\006\024\031\020\033\023\001\002\000\004\002\ufffe" +
    "\001\002\000\012\003\021\006\024\031\020\033\023\001" +
    "\002\000\004\064\u0376\001\002\000\004\062\u0377\001\002" +
    "\000\012\003\021\006\024\031\020\033\023\001\002\000" +
    "\004\002\uffff\001\002\000\004\002\ufffc\001\002\000\004" +
    "\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0378\000\004\047\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\002" +
    "\013\041\015\066\014\067\016\070\021\001\001\000\002" +
    "\001\001\000\014\002\u036d\041\015\066\014\067\016\070" +
    "\021\001\001\000\002\001\001\000\014\002\u036c\041\015" +
    "\066\014\067\016\070\021\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\002\u0353\041\015\066\014\067\016" +
    "\070\021\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\002\025\041\015\066\014\067\016\070\021\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\013\036\030\035\044\045\070\041\001" +
    "\001\000\012\013\u0321\030\035\044\045\070\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\013\u0316\030\035\044\045\070\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\013\047\030\035\044\045\070\041\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\003\057\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\030\004\073\005\063\006\064\012\067\014\103\022\061" +
    "\025\065\026\075\031\071\033\074\043\076\001\001\000" +
    "\030\004\073\005\063\006\064\012\u0301\014\103\022\061" +
    "\025\065\026\075\031\071\033\074\043\076\001\001\000" +
    "\002\001\001\000\030\004\073\005\063\006\064\012\u02f4" +
    "\014\103\022\061\025\065\026\075\031\071\033\074\043" +
    "\076\001\001\000\030\004\073\005\063\006\064\012\u02f3" +
    "\014\103\022\061\025\065\026\075\031\071\033\074\043" +
    "\076\001\001\000\030\004\073\005\063\006\064\012\u02f2" +
    "\014\103\022\061\025\065\026\075\031\071\033\074\043" +
    "\076\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\u0229\001\001\000\030\004\073\005\063\006\064\012" +
    "\u0226\014\103\022\061\025\065\026\075\031\071\033\074" +
    "\043\076\001\001\000\002\001\001\000\030\004\073\005" +
    "\063\006\064\012\u0218\014\103\022\061\025\065\026\075" +
    "\031\071\033\074\043\076\001\001\000\030\004\073\005" +
    "\063\006\064\012\u0217\014\103\022\061\025\065\026\075" +
    "\031\071\033\074\043\076\001\001\000\004\034\350\001" +
    "\001\000\014\042\u0184\046\u0180\066\u017e\067\u0183\070\u017f" +
    "\001\001\000\004\026\u017b\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\010\113\021\u0127\026\115\001\001" +
    "\000\030\004\073\005\063\006\064\012\u0126\014\103\022" +
    "\061\025\065\026\075\031\071\033\074\043\076\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\010\113\021\112\026\115\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\116\001\001\000\006\010\125" +
    "\026\127\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\130\001\001\000" +
    "\002\001\001\000\004\034\134\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\140\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\026\144\032" +
    "\143\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\026\147\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\026\152\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\026\155\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\026\160\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\170\005\163\006" +
    "\164\025\165\026\075\031\167\033\171\037\176\050\174" +
    "\056\172\001\001\000\026\004\170\005\163\006\164\025" +
    "\165\026\075\031\167\033\171\037\u0121\050\174\056\172" +
    "\001\001\000\026\004\170\005\163\006\164\025\165\026" +
    "\075\031\167\033\171\037\u0120\050\174\056\172\001\001" +
    "\000\026\004\170\005\163\006\164\025\165\026\075\031" +
    "\167\033\171\037\u011f\050\174\056\172\001\001\000\002" +
    "\001\001\000\026\004\170\005\163\006\164\025\165\026" +
    "\075\031\167\033\171\037\341\050\174\056\172\001\001" +
    "\000\026\004\170\005\163\006\164\025\165\026\075\031" +
    "\167\033\171\037\340\050\174\056\172\001\001\000\026" +
    "\004\170\005\163\006\164\025\165\026\075\031\167\033" +
    "\171\037\337\050\174\056\172\001\001\000\026\004\170" +
    "\005\163\006\164\025\165\026\075\031\167\033\171\037" +
    "\336\050\174\056\172\001\001\000\002\001\001\000\026" +
    "\004\170\005\163\006\164\025\165\026\075\031\167\033" +
    "\171\037\333\050\174\056\172\001\001\000\010\010\113" +
    "\021\204\026\115\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\004\215\005\211\006\212\025\213\026\075\031\214" +
    "\033\216\050\222\051\220\056\217\001\001\000\002\001" +
    "\001\000\012\010\113\021\244\026\115\054\243\001\001" +
    "\000\026\004\215\005\211\006\212\025\213\026\075\031" +
    "\214\033\216\050\222\051\242\056\217\001\001\000\026" +
    "\004\215\005\211\006\212\025\213\026\075\031\214\033" +
    "\216\050\222\051\241\056\217\001\001\000\026\004\215" +
    "\005\211\006\212\025\213\026\075\031\214\033\216\050" +
    "\222\051\240\056\217\001\001\000\026\004\215\005\211" +
    "\006\212\025\213\026\075\031\214\033\216\050\222\051" +
    "\237\056\217\001\001\000\026\004\215\005\211\006\212" +
    "\025\213\026\075\031\214\033\216\050\222\051\236\056" +
    "\217\001\001\000\026\004\215\005\211\006\212\025\213" +
    "\026\075\031\214\033\216\050\222\051\235\056\217\001" +
    "\001\000\026\004\215\005\211\006\212\025\213\026\075" +
    "\031\214\033\216\050\222\051\234\056\217\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\004\215\005\211" +
    "\006\212\025\213\026\075\031\214\033\216\050\222\051" +
    "\226\056\217\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\215\005" +
    "\211\006\212\025\213\026\075\031\214\033\216\050\222" +
    "\051\230\056\217\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\004" +
    "\256\005\251\006\252\025\253\026\075\031\255\033\257" +
    "\050\262\053\254\056\260\001\001\000\002\001\001\000" +
    "\012\010\113\021\244\026\115\054\300\001\001\000\026" +
    "\004\256\005\251\006\252\025\253\026\075\031\255\033" +
    "\257\050\262\053\277\056\260\001\001\000\026\004\256" +
    "\005\251\006\252\025\253\026\075\031\255\033\257\050" +
    "\262\053\276\056\260\001\001\000\026\004\256\005\251" +
    "\006\252\025\253\026\075\031\255\033\257\050\262\053" +
    "\275\056\260\001\001\000\002\001\001\000\026\004\256" +
    "\005\251\006\252\025\253\026\075\031\255\033\257\050" +
    "\262\053\274\056\260\001\001\000\026\004\256\005\251" +
    "\006\252\025\253\026\075\031\255\033\257\050\262\053" +
    "\273\056\260\001\001\000\026\004\256\005\251\006\252" +
    "\025\253\026\075\031\255\033\257\050\262\053\272\056" +
    "\260\001\001\000\026\004\256\005\251\006\252\025\253" +
    "\026\075\031\255\033\257\050\262\053\271\056\260\001" +
    "\001\000\002\001\001\000\026\004\256\005\251\006\252" +
    "\025\253\026\075\031\255\033\257\050\262\053\266\056" +
    "\260\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\256\005\251\006" +
    "\252\025\253\026\075\031\255\033\257\050\262\053\270" +
    "\056\260\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\004\306\005\302\006\303\025\304\026\075" +
    "\031\305\033\307\050\312\052\314\056\310\001\001\000" +
    "\026\004\306\005\302\006\303\025\304\026\075\031\305" +
    "\033\307\050\312\052\330\056\310\001\001\000\026\004" +
    "\306\005\302\006\303\025\304\026\075\031\305\033\307" +
    "\050\312\052\327\056\310\001\001\000\026\004\306\005" +
    "\302\006\303\025\304\026\075\031\305\033\307\050\312" +
    "\052\326\056\310\001\001\000\026\004\306\005\302\006" +
    "\303\025\304\026\075\031\305\033\307\050\312\052\325" +
    "\056\310\001\001\000\026\004\306\005\302\006\303\025" +
    "\304\026\075\031\305\033\307\050\312\052\324\056\310" +
    "\001\001\000\026\004\306\005\302\006\303\025\304\026" +
    "\075\031\305\033\307\050\312\052\323\056\310\001\001" +
    "\000\026\004\306\005\302\006\303\025\304\026\075\031" +
    "\305\033\307\050\312\052\322\056\310\001\001\000\002" +
    "\001\001\000\026\004\306\005\302\006\303\025\304\026" +
    "\075\031\305\033\307\050\312\052\317\056\310\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\004\306\005\302" +
    "\006\303\025\304\026\075\031\305\033\307\050\312\052" +
    "\321\056\310\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\306\005\302\006\303\025\304\026\075\031\305\033" +
    "\307\050\312\052\332\056\310\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\170\005\163\006\164\025" +
    "\165\026\075\031\167\033\171\037\335\050\174\056\172" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\344\001\001\000\002\001\001\000\006\026" +
    "\347\033\346\001\001\000\026\004\364\005\357\006\360" +
    "\025\361\026\075\031\362\033\365\050\370\055\u011b\056" +
    "\366\001\001\000\004\034\350\001\001\000\010\026\u010b" +
    "\034\u010e\040\u010c\001\001\000\004\024\352\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\004\364\005\357\006\360\025\361\026" +
    "\075\031\362\033\365\050\370\055\363\056\366\001\001" +
    "\000\026\004\364\005\357\006\360\025\361\026\075\031" +
    "\362\033\365\050\370\055\u010a\056\366\001\001\000\026" +
    "\004\364\005\357\006\360\025\361\026\075\031\362\033" +
    "\365\050\370\055\u0109\056\366\001\001\000\026\004\364" +
    "\005\357\006\360\025\361\026\075\031\362\033\365\050" +
    "\370\055\u0108\056\366\001\001\000\026\004\364\005\357" +
    "\006\360\025\361\026\075\031\362\033\365\050\370\055" +
    "\u0107\056\366\001\001\000\002\001\001\000\026\004\364" +
    "\005\357\006\360\025\361\026\075\031\362\033\365\050" +
    "\370\055\u0103\056\366\001\001\000\026\004\364\005\357" +
    "\006\360\025\361\026\075\031\362\033\365\050\370\055" +
    "\u0102\056\366\001\001\000\026\004\364\005\357\006\360" +
    "\025\361\026\075\031\362\033\365\050\370\055\u0101\056" +
    "\366\001\001\000\002\001\001\000\026\004\364\005\357" +
    "\006\360\025\361\026\075\031\362\033\365\050\370\055" +
    "\376\056\366\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\364\005\357\006\360\025\361" +
    "\026\075\031\362\033\365\050\370\055\u0100\056\366\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\034\u0116\001\001\000" +
    "\002\001\001\000\004\026\u0112\001\001\000\004\026\u010f" +
    "\001\001\000\010\026\u010b\034\u010e\040\u0110\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\034\u0113\001\001" +
    "\000\010\026\u010b\034\u010e\040\u0114\001\001\000\002\001" +
    "\001\000\010\026\u010b\034\u010e\040\u0119\001\001\000\010" +
    "\026\u010b\034\u010e\040\u0118\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\030\004\073\005\063\006\064\012\u0125\014\103\022" +
    "\061\025\065\026\075\031\071\033\074\043\076\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u0131\005\u012d\006\u012e\014\u0135\015\u0133\022\u012b\025" +
    "\u012f\026\075\031\u0130\033\u0132\001\001\000\002\001\001" +
    "\000\026\004\u0131\005\u012d\006\u012e\014\u0135\015\u0172\022" +
    "\u012b\025\u012f\026\075\031\u0130\033\u0132\001\001\000\012" +
    "\010\113\020\u0143\021\u0142\026\115\001\001\000\026\004" +
    "\u0131\005\u012d\006\u012e\014\u0135\015\u0141\022\u012b\025\u012f" +
    "\026\075\031\u0130\033\u0132\001\001\000\026\004\u0131\005" +
    "\u012d\006\u012e\014\u0135\015\u0140\022\u012b\025\u012f\026\075" +
    "\031\u0130\033\u0132\001\001\000\026\004\u0131\005\u012d\006" +
    "\u012e\014\u0135\015\u013f\022\u012b\025\u012f\026\075\031\u0130" +
    "\033\u0132\001\001\000\026\004\u0131\005\u012d\006\u012e\014" +
    "\u0135\015\u013e\022\u012b\025\u012f\026\075\031\u0130\033\u0132" +
    "\001\001\000\026\004\u0131\005\u012d\006\u012e\014\u0135\015" +
    "\u013d\022\u012b\025\u012f\026\075\031\u0130\033\u0132\001\001" +
    "\000\026\004\u0131\005\u012d\006\u012e\014\u0135\015\u013c\022" +
    "\u012b\025\u012f\026\075\031\u0130\033\u0132\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\u0131\005\u012d\006" +
    "\u012e\014\u0135\015\u0136\022\u012b\025\u012f\026\075\031\u0130" +
    "\033\u0132\001\001\000\002\001\001\000\026\004\u0131\005" +
    "\u012d\006\u012e\014\u0135\015\u0138\022\u012b\025\u012f\026\075" +
    "\031\u0130\033\u0132\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\u014d\005\u0149\006" +
    "\u014a\014\u0151\017\u014f\022\u0147\025\u014b\026\075\031\u014c" +
    "\033\u014e\001\001\000\002\001\001\000\026\004\u014d\005" +
    "\u0149\006\u014a\014\u0151\017\u015c\022\u0147\025\u014b\026\075" +
    "\031\u014c\033\u014e\001\001\000\012\010\113\020\u015b\021" +
    "\u0142\026\115\001\001\000\026\004\u014d\005\u0149\006\u014a" +
    "\014\u0151\017\u015a\022\u0147\025\u014b\026\075\031\u014c\033" +
    "\u014e\001\001\000\026\004\u014d\005\u0149\006\u014a\014\u0151" +
    "\017\u0159\022\u0147\025\u014b\026\075\031\u014c\033\u014e\001" +
    "\001\000\026\004\u014d\005\u0149\006\u014a\014\u0151\017\u0158" +
    "\022\u0147\025\u014b\026\075\031\u014c\033\u014e\001\001\000" +
    "\026\004\u014d\005\u0149\006\u014a\014\u0151\017\u0157\022\u0147" +
    "\025\u014b\026\075\031\u014c\033\u014e\001\001\000\026\004" +
    "\u014d\005\u0149\006\u014a\014\u0151\017\u0156\022\u0147\025\u014b" +
    "\026\075\031\u014c\033\u014e\001\001\000\026\004\u014d\005" +
    "\u0149\006\u014a\014\u0151\017\u0155\022\u0147\025\u014b\026\075" +
    "\031\u014c\033\u014e\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\004\u014d\005\u0149\006\u014a\014\u0151\017\u0152" +
    "\022\u0147\025\u014b\026\075\031\u014c\033\u014e\001\001\000" +
    "\002\001\001\000\026\004\u014d\005\u0149\006\u014a\014\u0151" +
    "\017\u0154\022\u0147\025\u014b\026\075\031\u014c\033\u014e\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u0163\005\u015f\006\u0160\014\u0166\016\u0167\022\u015e\025" +
    "\u0161\026\075\031\u0162\033\u0164\001\001\000\026\004\u0163" +
    "\005\u015f\006\u0160\014\u0166\016\u0171\022\u015e\025\u0161\026" +
    "\075\031\u0162\033\u0164\001\001\000\026\004\u0163\005\u015f" +
    "\006\u0160\014\u0166\016\u0170\022\u015e\025\u0161\026\075\031" +
    "\u0162\033\u0164\001\001\000\026\004\u0163\005\u015f\006\u0160" +
    "\014\u0166\016\u016f\022\u015e\025\u0161\026\075\031\u0162\033" +
    "\u0164\001\001\000\026\004\u0163\005\u015f\006\u0160\014\u0166" +
    "\016\u016e\022\u015e\025\u0161\026\075\031\u0162\033\u0164\001" +
    "\001\000\026\004\u0163\005\u015f\006\u0160\014\u0166\016\u016d" +
    "\022\u015e\025\u0161\026\075\031\u0162\033\u0164\001\001\000" +
    "\026\004\u0163\005\u015f\006\u0160\014\u0166\016\u016c\022\u015e" +
    "\025\u0161\026\075\031\u0162\033\u0164\001\001\000\026\004" +
    "\u0163\005\u015f\006\u0160\014\u0166\016\u016b\022\u015e\025\u0161" +
    "\026\075\031\u0162\033\u0164\001\001\000\002\001\001\000" +
    "\026\004\u0163\005\u015f\006\u0160\014\u0166\016\u0168\022\u015e" +
    "\025\u0161\026\075\031\u0162\033\u0164\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\u0163\005\u015f\006\u0160" +
    "\014\u0166\016\u016a\022\u015e\025\u0161\026\075\031\u0162\033" +
    "\u0164\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\004\u0163\005\u015f\006\u0160\014\u0166\016\u0174\022" +
    "\u015e\025\u0161\026\075\031\u0162\033\u0164\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\030\004\073\005\063\006\064" +
    "\012\u017a\014\103\022\061\025\065\026\075\031\071\033" +
    "\074\043\076\001\001\000\002\001\001\000\004\034\u017c" +
    "\001\001\000\010\026\u010b\034\u010e\040\u017d\001\001\000" +
    "\002\001\001\000\014\042\u0184\046\u0216\066\u017e\067\u0183" +
    "\070\u017f\001\001\000\014\042\u0184\046\u0215\066\u017e\067" +
    "\u0183\070\u017f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\042\u0184\046\u0185\066\u017e\067" +
    "\u0183\070\u017f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\042\u0184\046\u0194\066\u017e\067" +
    "\u0183\070\u017f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\013\u018e\030\035\044\045\070\041\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\u0191\001\001\000" +
    "\002\001\001\000\030\004\073\005\063\006\064\012\u0193" +
    "\014\103\022\061\025\065\026\075\031\071\033\074\043" +
    "\076\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u0197\001\001\000\002\001\001\000" +
    "\004\007\u019b\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\030\004\u01a5\005" +
    "\u019f\006\u01a0\011\u01a6\026\075\031\u01a3\033\u01a4\045\u01a7" +
    "\071\u01a2\073\u019e\101\u01ad\001\001\000\030\004\u01a5\005" +
    "\u019f\006\u01a0\011\u0210\026\075\031\u01a3\033\u01a4\045\u01a7" +
    "\071\u01a2\073\u019e\101\u01ad\001\001\000\030\004\u01a5\005" +
    "\u019f\006\u01a0\011\u020f\026\075\031\u01a3\033\u01a4\045\u01a7" +
    "\071\u01a2\073\u019e\101\u01ad\001\001\000\030\004\u01a5\005" +
    "\u019f\006\u01a0\011\u020e\026\075\031\u01a3\033\u01a4\045\u01a7" +
    "\071\u01a2\073\u019e\101\u01ad\001\001\000\002\001\001\000" +
    "\030\004\u01a5\005\u019f\006\u01a0\011\u01e2\026\075\031\u01a3" +
    "\033\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000" +
    "\030\004\u01a5\005\u019f\006\u01a0\011\u01e1\026\075\031\u01a3" +
    "\033\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000" +
    "\030\004\u01a5\005\u019f\006\u01a0\011\u01e0\026\075\031\u01a3" +
    "\033\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000" +
    "\030\004\u01a5\005\u019f\006\u01a0\011\u01df\026\075\031\u01a3" +
    "\033\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\010\113\021\u01d3\026\115\001\001\000" +
    "\002\001\001\000\002\001\001\000\030\004\u01a5\005\u019f" +
    "\006\u01a0\011\u01ae\026\075\031\u01a3\033\u01a4\045\u01a7\071" +
    "\u01a2\073\u019e\101\u01ad\001\001\000\002\001\001\000\010" +
    "\010\113\021\u01b0\026\115\001\001\000\002\001\001\000" +
    "\026\004\u01b7\005\u01b2\006\u01b4\026\075\031\u01b6\033\u01b8" +
    "\071\u01b5\072\u01ba\073\u01b3\101\u01bb\001\001\000\026\004" +
    "\u01b7\005\u01b2\006\u01b4\026\075\031\u01b6\033\u01b8\071\u01b5" +
    "\072\u01ce\073\u01b3\101\u01bb\001\001\000\026\004\u01b7\005" +
    "\u01b2\006\u01b4\026\075\031\u01b6\033\u01b8\071\u01b5\072\u01cd" +
    "\073\u01b3\101\u01bb\001\001\000\026\004\u01b7\005\u01b2\006" +
    "\u01b4\026\075\031\u01b6\033\u01b8\071\u01b5\072\u01cc\073\u01b3" +
    "\101\u01bb\001\001\000\026\004\u01b7\005\u01b2\006\u01b4\026" +
    "\075\031\u01b6\033\u01b8\071\u01b5\072\u01cb\073\u01b3\101\u01bb" +
    "\001\001\000\026\004\u01b7\005\u01b2\006\u01b4\026\075\031" +
    "\u01b6\033\u01b8\071\u01b5\072\u01ca\073\u01b3\101\u01bb\001\001" +
    "\000\026\004\u01b7\005\u01b2\006\u01b4\026\075\031\u01b6\033" +
    "\u01b8\071\u01b5\072\u01c9\073\u01b3\101\u01bb\001\001\000\026" +
    "\004\u01b7\005\u01b2\006\u01b4\026\075\031\u01b6\033\u01b8\071" +
    "\u01b5\072\u01c8\073\u01b3\101\u01bb\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\u01b7\005\u01b2\006\u01b4\026" +
    "\075\031\u01b6\033\u01b8\071\u01b5\072\u01c3\073\u01b3\101\u01bb" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u01b7\005\u01b2\006\u01b4\026\075" +
    "\031\u01b6\033\u01b8\071\u01b5\072\u01c7\073\u01b3\101\u01bb\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\004\u01a5\005\u019f\006\u01a0\011\u01d1\026\075\031\u01a3\033" +
    "\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\030\004\u01a5\005\u019f" +
    "\006\u01a0\011\u01de\026\075\031\u01a3\033\u01a4\045\u01a7\071" +
    "\u01a2\073\u019e\101\u01ad\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\026\u01e5\001\001\000\002" +
    "\001\001\000\006\026\u01e8\033\u01e7\001\001\000\026\004" +
    "\u01f1\005\u01ec\006\u01ee\026\075\031\u01f0\033\u01f2\071\u01ef" +
    "\073\u01ed\100\u020a\101\u01f5\001\001\000\004\034\350\001" +
    "\001\000\004\024\u01ea\001\001\000\002\001\001\000\026" +
    "\004\u01f1\005\u01ec\006\u01ee\026\075\031\u01f0\033\u01f2\071" +
    "\u01ef\073\u01ed\100\u01f4\101\u01f5\001\001\000\026\004\u01f1" +
    "\005\u01ec\006\u01ee\026\075\031\u01f0\033\u01f2\071\u01ef\073" +
    "\u01ed\100\u0209\101\u01f5\001\001\000\026\004\u01f1\005\u01ec" +
    "\006\u01ee\026\075\031\u01f0\033\u01f2\071\u01ef\073\u01ed\100" +
    "\u0208\101\u01f5\001\001\000\026\004\u01f1\005\u01ec\006\u01ee" +
    "\026\075\031\u01f0\033\u01f2\071\u01ef\073\u01ed\100\u0207\101" +
    "\u01f5\001\001\000\026\004\u01f1\005\u01ec\006\u01ee\026\075" +
    "\031\u01f0\033\u01f2\071\u01ef\073\u01ed\100\u0206\101\u01f5\001" +
    "\001\000\026\004\u01f1\005\u01ec\006\u01ee\026\075\031\u01f0" +
    "\033\u01f2\071\u01ef\073\u01ed\100\u0205\101\u01f5\001\001\000" +
    "\026\004\u01f1\005\u01ec\006\u01ee\026\075\031\u01f0\033\u01f2" +
    "\071\u01ef\073\u01ed\100\u0204\101\u01f5\001\001\000\026\004" +
    "\u01f1\005\u01ec\006\u01ee\026\075\031\u01f0\033\u01f2\071\u01ef" +
    "\073\u01ed\100\u0203\101\u01f5\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u01f1\005\u01ec\006\u01ee\026\075" +
    "\031\u01f0\033\u01f2\071\u01ef\073\u01ed\100\u01fd\101\u01f5\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\u01f1\005\u01ec\006" +
    "\u01ee\026\075\031\u01f0\033\u01f2\071\u01ef\073\u01ed\100\u0202" +
    "\101\u01f5\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\026\144\032\u0241\001\001\000\004\035\u023b\001" +
    "\001\000\014\010\u0232\026\u022c\027\u022b\031\u022f\033\u0231" +
    "\001\001\000\002\001\001\000\004\034\350\001\001\000" +
    "\002\001\001\000\004\026\u0229\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\026\u023d\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\035\u023e\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\026\144\032\u0245\001\001\000\004" +
    "\035\u0243\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\010" +
    "\u0232\026\u024c\027\u024b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\u0256\001" +
    "\001\000\002\001\001\000\006\026\u0259\033\u0258\001\001" +
    "\000\026\004\u0261\005\u025e\006\u025f\022\u025d\026\075\031" +
    "\u0260\033\u0262\036\u02ee\057\u0265\061\u0268\001\001\000\004" +
    "\034\350\001\001\000\004\024\u025b\001\001\000\002\001" +
    "\001\000\026\004\u0261\005\u025e\006\u025f\022\u025d\026\075" +
    "\031\u0260\033\u0262\036\u0263\057\u0265\061\u0268\001\001\000" +
    "\026\004\u0261\005\u025e\006\u025f\022\u025d\026\075\031\u0260" +
    "\033\u0262\036\u02ed\057\u0265\061\u0268\001\001\000\026\004" +
    "\u0261\005\u025e\006\u025f\022\u025d\026\075\031\u0260\033\u0262" +
    "\036\u02ec\057\u0265\061\u0268\001\001\000\026\004\u0261\005" +
    "\u025e\006\u025f\022\u025d\026\075\031\u0260\033\u0262\036\u02eb" +
    "\057\u0265\061\u0268\001\001\000\026\004\u0261\005\u025e\006" +
    "\u025f\022\u025d\026\075\031\u0260\033\u0262\036\u02ea\057\u0265" +
    "\061\u0268\001\001\000\026\004\u0261\005\u025e\006\u025f\022" +
    "\u025d\026\075\031\u0260\033\u0262\036\u02e9\057\u0265\061\u0268" +
    "\001\001\000\026\004\u0261\005\u025e\006\u025f\022\u025d\026" +
    "\075\031\u0260\033\u0262\036\u02e8\057\u0265\061\u0268\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\u0261\005" +
    "\u025e\006\u025f\022\u025d\026\075\031\u0260\033\u0262\036\u02e2" +
    "\057\u0265\061\u0268\001\001\000\010\010\113\021\u028b\026" +
    "\115\001\001\000\002\001\001\000\026\004\u0261\005\u025e" +
    "\006\u025f\022\u025d\026\075\031\u0260\033\u0262\036\u026c\057" +
    "\u0265\061\u0268\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\010\113\021" +
    "\u026e\026\115\001\001\000\002\001\001\000\026\004\u0274" +
    "\005\u0271\006\u0272\022\u0270\026\075\031\u0273\033\u0275\057" +
    "\u0278\060\u0277\061\u0279\001\001\000\026\004\u0274\005\u0271" +
    "\006\u0272\022\u0270\026\075\031\u0273\033\u0275\057\u0278\060" +
    "\u028a\061\u0279\001\001\000\026\004\u0274\005\u0271\006\u0272" +
    "\022\u0270\026\075\031\u0273\033\u0275\057\u0278\060\u0289\061" +
    "\u0279\001\001\000\026\004\u0274\005\u0271\006\u0272\022\u0270" +
    "\026\075\031\u0273\033\u0275\057\u0278\060\u0288\061\u0279\001" +
    "\001\000\026\004\u0274\005\u0271\006\u0272\022\u0270\026\075" +
    "\031\u0273\033\u0275\057\u0278\060\u0287\061\u0279\001\001\000" +
    "\026\004\u0274\005\u0271\006\u0272\022\u0270\026\075\031\u0273" +
    "\033\u0275\057\u0278\060\u0286\061\u0279\001\001\000\026\004" +
    "\u0274\005\u0271\006\u0272\022\u0270\026\075\031\u0273\033\u0275" +
    "\057\u0278\060\u0285\061\u0279\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u0274\005\u0271\006\u0272\022\u0270" +
    "\026\075\031\u0273\033\u0275\057\u0278\060\u0280\061\u0279\001" +
    "\001\000\026\004\u0274\005\u0271\006\u0272\022\u0270\026\075" +
    "\031\u0273\033\u0275\057\u0278\060\u027f\061\u0279\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u0274" +
    "\005\u0271\006\u0272\022\u0270\026\075\031\u0273\033\u0275\057" +
    "\u0278\060\u0284\061\u0279\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\u0294\005\u0291\006\u0292\022" +
    "\u028f\026\075\031\u0293\033\u0295\057\u0298\061\u0299\063\u0296" +
    "\001\001\000\002\001\001\000\026\004\u0294\005\u0291\006" +
    "\u0292\022\u028f\026\075\031\u0293\033\u0295\057\u0298\061\u0299" +
    "\063\u02df\001\001\000\012\010\113\021\u02a9\026\115\062" +
    "\u02aa\001\001\000\026\004\u0294\005\u0291\006\u0292\022\u028f" +
    "\026\075\031\u0293\033\u0295\057\u0298\061\u0299\063\u02a8\001" +
    "\001\000\026\004\u0294\005\u0291\006\u0292\022\u028f\026\075" +
    "\031\u0293\033\u0295\057\u0298\061\u0299\063\u02a7\001\001\000" +
    "\026\004\u0294\005\u0291\006\u0292\022\u028f\026\075\031\u0293" +
    "\033\u0295\057\u0298\061\u0299\063\u02a6\001\001\000\026\004" +
    "\u0294\005\u0291\006\u0292\022\u028f\026\075\031\u0293\033\u0295" +
    "\057\u0298\061\u0299\063\u02a5\001\001\000\026\004\u0294\005" +
    "\u0291\006\u0292\022\u028f\026\075\031\u0293\033\u0295\057\u0298" +
    "\061\u0299\063\u02a4\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\004\u0294\005\u0291\006\u0292\022\u028f\026\075" +
    "\031\u0293\033\u0295\057\u0298\061\u0299\063\u029e\001\001\000" +
    "\026\004\u0294\005\u0291\006\u0292\022\u028f\026\075\031\u0293" +
    "\033\u0295\057\u0298\061\u0299\063\u029d\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\u0294\005\u0291\006\u0292\022" +
    "\u028f\026\075\031\u0293\033\u0295\057\u0298\061\u0299\063\u02a0" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u02b3\005\u02b0\006\u02b1\022\u02ae\026\075\031\u02b2\033" +
    "\u02b4\057\u02b6\061\u02b8\064\u02b7\001\001\000\002\001\001" +
    "\000\026\004\u02b3\005\u02b0\006\u02b1\022\u02ae\026\075\031" +
    "\u02b2\033\u02b4\057\u02b6\061\u02b8\064\u02c6\001\001\000\012" +
    "\010\113\021\u02a9\026\115\062\u02c5\001\001\000\026\004" +
    "\u02b3\005\u02b0\006\u02b1\022\u02ae\026\075\031\u02b2\033\u02b4" +
    "\057\u02b6\061\u02b8\064\u02c4\001\001\000\026\004\u02b3\005" +
    "\u02b0\006\u02b1\022\u02ae\026\075\031\u02b2\033\u02b4\057\u02b6" +
    "\061\u02b8\064\u02c3\001\001\000\026\004\u02b3\005\u02b0\006" +
    "\u02b1\022\u02ae\026\075\031\u02b2\033\u02b4\057\u02b6\061\u02b8" +
    "\064\u02c2\001\001\000\026\004\u02b3\005\u02b0\006\u02b1\022" +
    "\u02ae\026\075\031\u02b2\033\u02b4\057\u02b6\061\u02b8\064\u02c1" +
    "\001\001\000\026\004\u02b3\005\u02b0\006\u02b1\022\u02ae\026" +
    "\075\031\u02b2\033\u02b4\057\u02b6\061\u02b8\064\u02c0\001\001" +
    "\000\002\001\001\000\026\004\u02b3\005\u02b0\006\u02b1\022" +
    "\u02ae\026\075\031\u02b2\033\u02b4\057\u02b6\061\u02b8\064\u02bd" +
    "\001\001\000\002\001\001\000\026\004\u02b3\005\u02b0\006" +
    "\u02b1\022\u02ae\026\075\031\u02b2\033\u02b4\057\u02b6\061\u02b8" +
    "\064\u02bc\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u02b3\005\u02b0\006\u02b1\022\u02ae\026\075\031\u02b2\033" +
    "\u02b4\057\u02b6\061\u02b8\064\u02bf\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\004\u02cc\005\u02c9\006\u02ca\022\u02c8\026" +
    "\075\031\u02cb\033\u02cd\057\u02d0\061\u02d1\065\u02cf\001\001" +
    "\000\026\004\u02cc\005\u02c9\006\u02ca\022\u02c8\026\075\031" +
    "\u02cb\033\u02cd\057\u02d0\061\u02d1\065\u02de\001\001\000\026" +
    "\004\u02cc\005\u02c9\006\u02ca\022\u02c8\026\075\031\u02cb\033" +
    "\u02cd\057\u02d0\061\u02d1\065\u02dd\001\001\000\026\004\u02cc" +
    "\005\u02c9\006\u02ca\022\u02c8\026\075\031\u02cb\033\u02cd\057" +
    "\u02d0\061\u02d1\065\u02dc\001\001\000\026\004\u02cc\005\u02c9" +
    "\006\u02ca\022\u02c8\026\075\031\u02cb\033\u02cd\057\u02d0\061" +
    "\u02d1\065\u02db\001\001\000\026\004\u02cc\005\u02c9\006\u02ca" +
    "\022\u02c8\026\075\031\u02cb\033\u02cd\057\u02d0\061\u02d1\065" +
    "\u02da\001\001\000\026\004\u02cc\005\u02c9\006\u02ca\022\u02c8" +
    "\026\075\031\u02cb\033\u02cd\057\u02d0\061\u02d1\065\u02d9\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u02cc" +
    "\005\u02c9\006\u02ca\022\u02c8\026\075\031\u02cb\033\u02cd\057" +
    "\u02d0\061\u02d1\065\u02d6\001\001\000\026\004\u02cc\005\u02c9" +
    "\006\u02ca\022\u02c8\026\075\031\u02cb\033\u02cd\057\u02d0\061" +
    "\u02d1\065\u02d5\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\004\u02cc\005\u02c9\006\u02ca\022\u02c8\026\075\031\u02cb" +
    "\033\u02cd\057\u02d0\061\u02d1\065\u02d8\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u02cc\005\u02c9\006\u02ca\022\u02c8" +
    "\026\075\031\u02cb\033\u02cd\057\u02d0\061\u02d1\065\u02e1\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u0261" +
    "\005\u025e\006\u025f\022\u025d\026\075\031\u0260\033\u0262\036" +
    "\u02e4\057\u0265\061\u0268\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\u02fb\001\001\000\012\010\u0232\026\u022c" +
    "\027\u02f8\033\u02f9\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\010\u0232\026\u024c\027\u02fe\031\u02ff\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\u0306\001\001\000\004\003\u0307\001\001" +
    "\000\002\001\001\000\004\007\u0309\001\001\000\004\003" +
    "\u030a\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\u030d\001\001\000\004\003\u030e\001\001\000\002\001" +
    "\001\000\004\007\u0310\001\001\000\004\003\u0311\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\013\u031a\030\035\044\045\070\041\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\u031c" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\010" +
    "\u0232\026\u024c\027\u031f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\013\u0323\030\035\044" +
    "\045\070\041\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\u0327\001\001\000\002\001" +
    "\001\000\030\004\073\005\063\006\064\012\u0329\014\103" +
    "\022\061\025\065\026\075\031\071\033\074\043\076\001" +
    "\001\000\002\001\001\000\004\003\u032f\001\001\000\004" +
    "\003\u032c\001\001\000\002\001\001\000\030\004\073\005" +
    "\063\006\064\012\u032e\014\103\022\061\025\065\026\075" +
    "\031\071\033\074\043\076\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\004\073\005\063\006\064\012\u0331" +
    "\014\103\022\061\025\065\026\075\031\071\033\074\043" +
    "\076\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\013\u033a\030\035\044\045\070\041\001\001\000\004\003" +
    "\u0335\001\001\000\002\001\001\000\004\007\u0337\001\001" +
    "\000\002\001\001\000\030\004\u01a5\005\u019f\006\u01a0\011" +
    "\u0339\026\075\031\u01a3\033\u01a4\045\u01a7\071\u01a2\073\u019e" +
    "\101\u01ad\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u033e\001\001" +
    "\000\002\001\001\000\004\007\u0340\001\001\000\002\001" +
    "\001\000\030\004\u01a5\005\u019f\006\u01a0\011\u0342\026\075" +
    "\031\u01a3\033\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001" +
    "\001\000\002\001\001\000\004\003\u034e\001\001\000\004" +
    "\003\u0345\001\001\000\002\001\001\000\004\007\u034b\001" +
    "\001\000\004\007\u0348\001\001\000\002\001\001\000\030" +
    "\004\u01a5\005\u019f\006\u01a0\011\u034a\026\075\031\u01a3\033" +
    "\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000\002" +
    "\001\001\000\002\001\001\000\030\004\u01a5\005\u019f\006" +
    "\u01a0\011\u034d\026\075\031\u01a3\033\u01a4\045\u01a7\071\u01a2" +
    "\073\u019e\101\u01ad\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\007\u0350\001\001\000\002\001\001\000\030" +
    "\004\u01a5\005\u019f\006\u01a0\011\u0352\026\075\031\u01a3\033" +
    "\u01a4\045\u01a7\071\u01a2\073\u019e\101\u01ad\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\002" +
    "\u0356\041\015\066\014\067\016\070\021\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\030\004" +
    "\073\005\063\006\064\012\u035a\014\103\022\061\025\065" +
    "\026\075\031\071\033\074\043\076\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\004\073\005\063\006\064\012" +
    "\u0360\014\103\022\061\025\065\026\075\031\071\033\074" +
    "\043\076\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\004\073\005\063\006\064\012\u0366\014\103\022\061\025" +
    "\065\026\075\031\071\033\074\043\076\001\001\000\002" +
    "\001\001\000\030\004\073\005\063\006\064\012\u0368\014" +
    "\103\022\061\025\065\026\075\031\071\033\074\043\076" +
    "\001\001\000\002\001\001\000\002\001\001\000\030\004" +
    "\073\005\063\006\064\012\u036b\014\103\022\061\025\065" +
    "\026\075\031\071\033\074\043\076\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\002\u036f" +
    "\041\015\066\014\067\016\070\021\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\002\u0372\041\015\066\014" +
    "\067\016\070\021\001\001\000\002\001\001\000\014\002" +
    "\u0378\041\015\066\014\067\016\070\021\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\002\u0377\041\015\066" +
    "\014\067\016\070\021\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    private Symbol cur_token;
    String unrecovered = "";
    String errorSintax = "";

    public String resultado="";
    public Nodo padre;
    public int contador = 1;

    ArrayList<String> listaRecover = new ArrayList<String>();

    @Override
    public void syntax_error(Symbol sym){
       listaRecover.add("\n Error Sintactico en la Linea " + (sym.right+1) +" Columna "+ (sym.left) + ". Palabras/Simbolo " + (sym.value) + " no reconocido \n") ;
    }

    public ArrayList<String> getSintax(){
        return listaRecover;
    }

    @Override
    public void unrecovered_syntax_error(Symbol cur_token){
       unrecovered = "Error Sintactico IRRECUPERABLE en la Linea: " + (cur_token.right+1)+ " Columna "+cur_token.left+". Palabras/Simbolo " + cur_token.value + " no reconocido"; 
    }

    public String getS(){
        return unrecovered;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= MODULE EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // MODULE ::= tk_public tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INICIO");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)inmod);
                parser.padre = (Nodo) tmp;
                System.out.println("OK");
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // MODULE ::= error tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // MODULE ::= tk_public error tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // MODULE ::= tk_public tk_module error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // MODULE ::= error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // FUNC ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).right;
		Object param = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).value;
		int infuncleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int infuncright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object infunc = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("FUNCION");
            tmp.setNumNodo(parser.contador++);
         
            tmp.addHijo((Nodo)infunc);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // FUNC ::= error tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // FUNC ::= tk_public error tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // FUNC ::= tk_public tk_function error tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // FUNC ::= tk_public tk_function tk_Identificador error PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // FUNC ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS error TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // STRUCT ::= tk_public tk_structure tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;
		int instructleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int instructright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object instruct = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("STRUCT");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)instruct);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // STRUCT ::= error tk_structure tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // STRUCT ::= tk_public error tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // STRUCT ::= tk_public tk_structure error tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SUBPROCESS ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object param = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int inproleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inproright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inpro = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("SUBPROCESS");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)param);
            tmp.addHijo((Nodo)inpro);
            RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SUBPROCESS ::= error tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SUBPROCESS ::= tk_public error tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SUBPROCESS ::= tk_public tk_sub error tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SUBPROCESS ::= tk_public tk_sub tk_Identificador error PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // MAIN ::= tk_sub tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;
		int inmainleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmainright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmain = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("MAIN");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)inmain);
            RESULT=tmp;

        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // MAIN ::= error tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // MAIN ::= tk_sub error tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // MAIN ::= tk_sub tk_main error tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // MAIN ::= tk_sub tk_main tk_ParentesisA error tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ENDMODULE ::= tk_end tk_module tk_Linea 
            {
              Object RESULT =null;
		 
         Nodo tmp = new Nodo("ENDMODULE");
         tmp.setNumNodo(parser.contador++);
         RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ENDMODULE ::= error tk_module tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ENDMODULE ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ENDFUNC ::= tk_end tk_function tk_Linea 
            {
              Object RESULT =null;
		 
            Nodo tmp = new Nodo("ENDFUNC");
            tmp.setNumNodo(parser.contador++);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ENDFUNC ::= error tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ENDFUNC ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ENDSTRUCT ::= tk_end tk_structure tk_Linea 
            {
              Object RESULT =null;
		 
            Nodo tmp = new Nodo("ENDSTRUCT");
            tmp.setNumNodo(parser.contador++);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ENDSTRUCT ::= error tk_structure tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ENDSTRUCT ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ENDSUB ::= tk_end tk_sub tk_Linea 
            {
              Object RESULT =null;
		 
            Nodo tmp = new Nodo("ENDSUB");
            tmp.setNumNodo(parser.contador++);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ENDSUB ::= error tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ENDSUB ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // OPCPROCESO ::= FUNC OPCPROCESO 
            {
              Object RESULT =null;
		int funcleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int funcright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object func = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INMODULE");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)func);
                tmp.addHijo((Nodo)inmod);
                RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // OPCPROCESO ::= STRUCT OPCPROCESO 
            {
              Object RESULT =null;
		int strtleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int strtright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object strt = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INMODULE");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)strt);
                tmp.addHijo((Nodo)inmod);
                RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // OPCPROCESO ::= SUBPROCESS OPCPROCESO 
            {
              Object RESULT =null;
		int subproleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int subproright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object subpro = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INMODULE");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)subpro);
                tmp.addHijo((Nodo)inmod);
                RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // OPCPROCESO ::= tk_comentario tk_Linea OPCPROCESO 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INMODULE");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Comentario");
                nd1.setValor(com.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo((Nodo)inmod);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OPCPROCESO ::= MAIN 
            {
              Object RESULT =null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INMODULE");
                tmp.setNumNodo(parser.contador++);           
                tmp.addHijo((Nodo)main);
                RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // OPCPROCESO ::= error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // OPCPROCESOAUX ::= FUNC OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // OPCPROCESOAUX ::= STRUCT OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // OPCPROCESOAUX ::= SUBPROCESS OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // OPCPROCESOAUX ::= ENDMODULE 
            {
              Object RESULT =null;
		int endmleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int endmright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object endm = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                Nodo tmp = new Nodo("INMODULE");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)endm);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // OPCPROCESOAUX ::= error tk_Linea OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // CUERPOSTRUC ::= VARIABLESTRUC CUERPOSTRUC 
            {
              Object RESULT =null;
		int varstrleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int varstrright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object varstr = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int instructleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int instructright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object instruct = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                Nodo tmp = new Nodo("INSTRUCT");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)varstr);
                tmp.addHijo((Nodo)instruct);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CUERPOSTRUC ::= tk_comentario tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int instructleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int instructright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object instruct = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                Nodo tmp = new Nodo("INSTRUCT");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Comentario");
                nd1.setValor(com.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo((Nodo)instruct);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CUERPOSTRUC ::= SUBPROCESS CUERPOSTRUC 
            {
              Object RESULT =null;
		int subpleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int subpright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object subp = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int instructleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int instructright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object instruct = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                Nodo tmp = new Nodo("INSTRUCT");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)subp);
                tmp.addHijo((Nodo)instruct);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CUERPOSTRUC ::= ENDSTRUCT 
            {
              Object RESULT =null;
		int endstructleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int endstructright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object endstruct = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                Nodo tmp = new Nodo("INSTRUCT");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)endstruct);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CUERPOSTRUC ::= error tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // VARIABLESTRUC ::= tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int tipodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int tipodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object tipod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("Variable");
                    tmp.setNumNodo(parser.contador++);

                    Nodo nd1 = new Nodo("Identificador");
                    nd1.setValor(i.toString());
                    nd1.setNumNodo(parser.contador++);

                    tmp.addHijo(nd1);
                    tmp.addHijo((Nodo)tipod);

                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // VARIABLESTRUC ::= tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int tipodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int tipodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object tipod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int valorleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object valor = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("Variable");
                    tmp.setNumNodo(parser.contador++);

                    Nodo nd1 = new Nodo("Identificador");
                    nd1.setValor(i.toString());
                    nd1.setNumNodo(parser.contador++);
 
                    tmp.addHijo(nd1);
                    tmp.addHijo((Nodo)tipod);
                    tmp.addHijo((Nodo)valor);

                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // CUERPOFUNC ::= SINTAXFOR_FUNC CUERPOFUNC 
            {
              Object RESULT =null;
		int forfunleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int forfunright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object forfun = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("FOR");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)forfun);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CUERPOFUNC ::= SINTAXWHILE_FUNC CUERPOFUNC 
            {
              Object RESULT =null;
		int whilefnleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int whilefnright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object whilefn = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("while");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)whilefn);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CUERPOFUNC ::= SINTAXIF_FUNC CUERPOFUNC 
            {
              Object RESULT =null;
		int iffnleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int iffnright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object iffn = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("INFUNCTION");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)iffn);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CUERPOFUNC ::= VARIABLE CUERPOFUNC 
            {
              Object RESULT =null;
		int varfnleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int varfnright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object varfn = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("VARIABLE");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)varfn);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CUERPOFUNC ::= LLAMADAFUNC CUERPOFUNC 
            {
              Object RESULT =null;
		int funleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int funright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object fun = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("llamada funcion");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)fun);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CUERPOFUNC ::= ASIGNACIONVAL CUERPOFUNC 
            {
              Object RESULT =null;
		int asingleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int asingright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object asing = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("ASIGNACION");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)asing);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CUERPOFUNC ::= CONSOLEWRITE CUERPOFUNC 
            {
              Object RESULT =null;
		 
            
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CUERPOFUNC ::= OPERACIONES CUERPOFUNC 
            {
              Object RESULT =null;
		int opleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int opright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object op = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int cuerpoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int cuerporight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object cuerpo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                Nodo tmp = new Nodo("ASIGNACION");
                tmp.setNumNodo(parser.contador++);
                tmp.addHijo((Nodo)op);
                tmp.addHijo((Nodo)cuerpo);
                RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CUERPOFUNC ::= tk_comentario tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;
		

            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CUERPOFUNC ::= ENDFUNC 
            {
              Object RESULT =null;
		
                Nodo tmp = new Nodo("END FUNC");
                tmp.setNumNodo(parser.contador++);
                 RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CUERPOFUNC ::= error tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // SINTAXIF_FUNC ::= tk_if CONDICION tk_then tk_Linea tk_end tk_if tk_Linea 
            {
              Object RESULT =null;
		int conleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int conright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		Object con = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int endifleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int endifright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object endif = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		
            Nodo tmp = new Nodo("IF");
            tmp.setNumNodo(parser.contador++);
            

            Nodo nd1 = new Nodo("End if");
            nd1.setNumNodo(parser.contador++);
            
            tmp.addHijo((Nodo)con);
            tmp.addHijo(nd1);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FUNC",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // SINTAXELSEIF_FUNC ::= CONDICION tk_then tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // INIF_FUNC ::= SINTAXIF_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // INIF_FUNC ::= VARIABLE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // INIF_FUNC ::= LLAMADAFUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // INIF_FUNC ::= ASIGNACIONVAL INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INIF_FUNC ::= OPERACIONES INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // INIF_FUNC ::= CONSOLEWRITE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // INIF_FUNC ::= SINTAXFOR_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // INIF_FUNC ::= SINTAXWHILE_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // INIF_FUNC ::= tk_comentario tk_Linea INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // INIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // INIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // INIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // INIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // INIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // INIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // INIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // INIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // INIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // INIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // INIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // INIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // INELSE_FUNC ::= SINTAXIF_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // INELSE_FUNC ::= VARIABLE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // INELSE_FUNC ::= LLAMADAFUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // INELSE_FUNC ::= ASIGNACIONVAL INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // INELSE_FUNC ::= OPERACIONES INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // INELSE_FUNC ::= CONSOLEWRITE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // INELSE_FUNC ::= SINTAXFOR_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // INELSE_FUNC ::= SINTAXWHILE_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // INELSE_FUNC ::= tk_comentario tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // INELSE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // INELSE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // INELSE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // INELSE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // INELSE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // INELSE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // INELSE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // INELSE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // INELSE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // INELSE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // INELSEIF_FUNC ::= SINTAXIF_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // INELSEIF_FUNC ::= VARIABLE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // INELSEIF_FUNC ::= LLAMADAFUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // INELSEIF_FUNC ::= ASIGNACIONVAL INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // INELSEIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // INELSEIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // INELSEIF_FUNC ::= OPERACIONES INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // INELSEIF_FUNC ::= CONSOLEWRITE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // INELSEIF_FUNC ::= SINTAXFOR_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // INELSEIF_FUNC ::= tk_comentario tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // INELSEIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // INELSEIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // INELSEIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // INELSEIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // INELSEIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // INELSEIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // INELSEIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // INELSEIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // INELSEIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // SINTAXWHILE_FUNC ::= tk_do tk_while CONDICION tk_Linea INWHILE_FUNC tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // INWHILE_FUNC ::= SINTAXFOR_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // INWHILE_FUNC ::= SINTAXIF_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // INWHILE_FUNC ::= VARIABLE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // INWHILE_FUNC ::= LLAMADAFUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // INWHILE_FUNC ::= ASIGNACIONVAL INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // INWHILE_FUNC ::= CONSOLEWRITE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // INWHILE_FUNC ::= OPERACIONES INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // INWHILE_FUNC ::= SINTAXWHILE_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // INWHILE_FUNC ::= tk_comentario tk_Linea INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // INWHILE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // INWHILE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // INWHILE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // INWHILE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // INWHILE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // INWHILE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // INWHILE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // INWHILE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // INWHILE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // INWHILE_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // INWHILE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // INWHILE_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // INFOR_FUNC ::= SINTAXWHILE_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // INFOR_FUNC ::= SINTAXFOR_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // INFOR_FUNC ::= SINTAXIF_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // INFOR_FUNC ::= VARIABLE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // INFOR_FUNC ::= LLAMADAFUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // INFOR_FUNC ::= ASIGNACIONVAL INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // INFOR_FUNC ::= CONSOLEWRITE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // INFOR_FUNC ::= OPERACIONES INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // INFOR_FUNC ::= tk_comentario tk_Linea INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // INFOR_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // INFOR_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // INFOR_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // INFOR_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // INFOR_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // INFOR_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // INFOR_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // INFOR_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // INFOR_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // INFOR_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // INFOR_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // INFOR_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // CUERPOPRO ::= SINTAXFOR CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // CUERPOPRO ::= SINTAXIF CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // CUERPOPRO ::= VARIABLE CUERPOPRO 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int varright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmainleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmainright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmain = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
        Nodo tmp = new Nodo("INMAIN");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)var);
            tmp.addHijo((Nodo)inmain);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // CUERPOPRO ::= LLAMADAFUNC CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // CUERPOPRO ::= ASIGNACIONVAL CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // CUERPOPRO ::= CONSOLEWRITE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // CUERPOPRO ::= OPERACIONES CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // CUERPOPRO ::= SINTAXWHILE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // CUERPOPRO ::= tk_comentario tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // CUERPOPRO ::= ENDSUB OPCPROCESOAUX 
            {
              Object RESULT =null;
		int endsleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int endsright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object ends = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmainleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmainright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmain = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("INMAIN");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)ends);
            tmp.addHijo((Nodo)inmain);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // CUERPOPRO ::= error tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // PARAMETROS ::= tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // PARAMETROS ::= tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // PARAMETROS ::= tk_Coma tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // PARAMETROS ::= tk_Coma tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // PARAMETROS ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;
		int opcboolleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int opcboolright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object opcbool = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("VALOR");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)opcbool);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // VALOR ::= iDNUM 
            {
              Object RESULT =null;
		int idnumleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int idnumright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object idnum = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("VALOR");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)idnum);
            RESULT=tmp; 
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int strright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		String str = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
           Nodo tmp = new Nodo("ValorString");
            tmp.setNumNodo(parser.contador++);
            tmp.setValor(str.toString().replaceAll("\"", ""));
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int tipodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int tipodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object tipod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                Nodo tmp = new Nodo("Variable");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo((Nodo)tipod);

                RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int tipodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int tipodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object tipod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                Nodo tmp = new Nodo("Variable");
               tmp.setNumNodo(parser.contador++);

               Nodo nd1 = new Nodo("Identificador");
               nd1.setValor(i.toString());
               nd1.setNumNodo(parser.contador++);

               tmp.addHijo(nd1);
               tmp.addHijo((Nodo)tipod);
               tmp.addHijo((Nodo)val);

               RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).value;
		int tipodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int tipodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object tipod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int llamfuncleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int llamfuncright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object llamfunc = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
               Nodo tmp = new Nodo("Variable");
               tmp.setNumNodo(parser.contador++);

               Nodo nd1 = new Nodo("Identificador");
               nd1.setValor(i.toString());
               nd1.setNumNodo(parser.contador++);

               tmp.addHijo(nd1);
               tmp.addHijo((Nodo)tipod);
               tmp.addHijo((Nodo)llamfunc);

               RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // VARIABLE ::= tk_dim tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		
                Nodo tmp = new Nodo("Variable");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo((Nodo)val);

                RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // VARIABLE ::= tk_dim tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int operleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object oper = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                Nodo tmp = new Nodo("Variable");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo((Nodo)oper);

                RESULT = tmp;

            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // VARIABLE ::= tk_Identificador tk_punto tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int iileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iiright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String ii = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		
                Nodo tmp = new Nodo("Variable");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                Nodo nd2 = new Nodo("Identificador");
                nd2.setValor(ii.toString());
                nd2.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo(nd2);
                tmp.addHijo((Nodo)val);

                RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // ASIGNACIONVAL ::= tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // ASIGNACIONVAL ::= tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // ASIGNACIONVAL ::= tk_Identificador tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // ASIGNACIONVAL ::= tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // ASIGNACIONVAL ::= tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // ASIGNACIONVAL ::= tk_Identificador tk_punto tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;
		
            Nodo tmp = new Nodo("True");
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;
		
            Nodo tmp = new Nodo("False");
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // TIPOD ::= tk_String 
            {
              Object RESULT =null;
		int strgleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int strgright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object strg = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("String");
            tmp.setValor(strg.toString());
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp;
         
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;
		int intvleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int intvright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object intv = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("Integer");
            tmp.setValor(intv.toString());
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp; 
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;
		int boolvleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int boolvright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object boolv = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("Boolean");
            tmp.setValor(boolv.toString());
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;
		int mqleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int mqright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object mq = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                        Nodo tmp = new Nodo("MayorQue");
                        tmp.setValor(mq.toString());
                        tmp.setNumNodo(parser.contador++);
                        RESULT = tmp;
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;
		int mileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int miright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object mi = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                        Nodo tmp = new Nodo("MenorIgual");
                        tmp.setValor(mi.toString());
                        tmp.setNumNodo(parser.contador++);
                        RESULT = tmp;
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;
		int meqleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int meqright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object meq = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                        Nodo tmp = new Nodo("MenorQque");
                        tmp.setValor(meq.toString());
                        tmp.setNumNodo(parser.contador++);
                        RESULT = tmp;
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;
		int meileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int meiright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object mei = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                        Nodo tmp = new Nodo("MenorIgual");
                        tmp.setValor(mei.toString());
                        tmp.setNumNodo(parser.contador++);
                        RESULT = tmp;
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;
		int iqleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int iqright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object iq = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                        Nodo tmp = new Nodo("Igual");
                        tmp.setValor(iq.toString());
                        tmp.setNumNodo(parser.contador++);
                        RESULT = tmp;
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		String id = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("Identificador");
            tmp.setValor(id.toString());
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int numright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		String num = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("Numero");
            tmp.setValor(num.toString());
            tmp.setNumNodo(parser.contador++);
            RESULT = tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int opcrleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int opcrright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object opcr = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int iddleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int iddright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object idd = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("Condicion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)opcr);
                    tmp.addHijo((Nodo)idd);
                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int opcrleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int opcrright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object opcr = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int opbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int opbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object opb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("Condicion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)opcr);
                    tmp.addHijo((Nodo)opb);
                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // CONDICION ::= iDNUM OPCRELACIONALES tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).value;
		int oprleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int oprright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object opr = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int idsleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int idsright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object ids = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("Condicion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)opr);

                    Nodo nd1 = new Nodo("Identificador");
                    nd1.setValor(i.toString());
                    nd1.setNumNodo(parser.contador++);

                    tmp.addHijo(nd1);
                    tmp.addHijo((Nodo)ids);
                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;
		int opbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int opbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object opb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("Condicion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)opb);
                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // CONDICION ::= iDNUM OPCRELACIONALES tk_ParentesisA iDNUM OPEARITMETICA iDNUM tk_ParentesisC 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)).value;
		int opcrleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int opcrright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		Object opcr = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int iddleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iddright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object idd = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int opealeft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int opearight = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object opea = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int idddleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idddright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object iddd = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		
                    Nodo tmp = new Nodo("Condicion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)opcr);
                    tmp.addHijo((Nodo)idd);
                    tmp.addHijo((Nodo)opea);
                    tmp.addHijo((Nodo)iddd);
                    RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // OPERACIONES ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int signoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int signoright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object signo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int operbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object operb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("Operacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)signo);
                    tmp.addHijo((Nodo)operb);
                    RESULT = tmp;
                 
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // OPERACIONES ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int signoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int signoright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object signo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int operbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object operb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("Operacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)signo);
                    tmp.addHijo((Nodo)operb);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // OPERACIONAUX ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int signoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int signoright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object signo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int operbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object operb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)signo);
                    tmp.addHijo((Nodo)operb);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // OPERACIONAUX ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int signoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int signoright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object signo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int operbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object operb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)signo);
                    tmp.addHijo((Nodo)operb);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // OPERACIONAUX ::= OPEARITMETICA iDNUM OPERACIONAUX 
            {
              Object RESULT =null;
		int signoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int signoright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object signo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int operbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object operb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)signo);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)operb);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // OPERACIONAUX ::= iDNUM tk_ParentesisC OPERACIONAUX 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int operbleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int operbright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object operb = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    tmp.addHijo((Nodo)operb);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // OPERACIONAUX ::= OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;
		int signoleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int signoright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object signo = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)signo);
                    tmp.addHijo((Nodo)id);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // OPERACIONAUX ::= iDNUM tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		 
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    RESULT = tmp;       
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // OPERACIONAUX ::= iDNUM tk_Linea 
            {
              Object RESULT =null;
		int idleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object id = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("InOperacion");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)id);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;
		int sumleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int sumright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object sum = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		  
                    Nodo tmp = new Nodo("Suma");
                    tmp.setValor(sum.toString());
                    tmp.setNumNodo(parser.contador++);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;
		int restaleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int restaright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object resta = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                    Nodo tmp = new Nodo("Resta");
                    tmp.setValor(resta.toString());
                    tmp.setNumNodo(parser.contador++);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;
		int mulleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int mulright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object mul = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("Multiplicacion");
                    tmp.setValor(mul.toString());
                    tmp.setNumNodo(parser.contador++);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;
		int divleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int divright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object div = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("Division");
                    tmp.setValor(div.toString());
                    tmp.setNumNodo(parser.contador++);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // OPEARITMETICA ::= tk_Signomod 
            {
              Object RESULT =null;
		int modleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int modright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object mod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("Mod");
                    tmp.setValor(mod.toString());
                    tmp.setNumNodo(parser.contador++);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // OPEARITMETICA ::= tk_Potencia 
            {
              Object RESULT =null;
		int potleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int potright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object pot = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
                    Nodo tmp = new Nodo("Potencia");
                    tmp.setValor(pot.toString());
                    tmp.setNumNodo(parser.contador++);
                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // IDENTIFICADORES ::= iDNUM tk_Coma iDNUM tk_Coma iDNUM tk_Coma iDNUM tk_Coma iDNUM tk_ParentesisC 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object d = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int eleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int eright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object e = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("Parametros Llamada");
                    tmp.setNumNodo(parser.contador++);

                    tmp.addHijo((Nodo)a);
                    tmp.addHijo((Nodo)b);
                    tmp.addHijo((Nodo)c);
                    tmp.addHijo((Nodo)d);
                    tmp.addHijo((Nodo)e);

                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // IDENTIFICADORES ::= iDNUM tk_Coma iDNUM tk_Coma iDNUM tk_Coma iDNUM tk_ParentesisC 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int dleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int dright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object d = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("Parametros Llamada");
                    tmp.setNumNodo(parser.contador++);

                    tmp.addHijo((Nodo)a);
                    tmp.addHijo((Nodo)b);
                    tmp.addHijo((Nodo)c);
                    tmp.addHijo((Nodo)d);

                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // IDENTIFICADORES ::= iDNUM tk_Coma iDNUM tk_Coma iDNUM tk_ParentesisC 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int cleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int cright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object c = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("Parametros Llamada");
                    tmp.setNumNodo(parser.contador++);

                    tmp.addHijo((Nodo)a);
                    tmp.addHijo((Nodo)b);
                    tmp.addHijo((Nodo)c);

                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // IDENTIFICADORES ::= iDNUM tk_Coma iDNUM tk_ParentesisC 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int bleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int bright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object b = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                    Nodo tmp = new Nodo("Parametros Llamada");
                    tmp.setNumNodo(parser.contador++);

                    tmp.addHijo((Nodo)a);
                    tmp.addHijo((Nodo)b);

                    RESULT = tmp;
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // IDENTIFICADORES ::= iDNUM tk_ParentesisC 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		  
                    Nodo tmp = new Nodo("Parametros Llamada");
                    tmp.setNumNodo(parser.contador++);
                    tmp.addHijo((Nodo)a);
                    RESULT = tmp; 
                
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // IDENTIFICADORESUB ::= tk_Coma iDNUM IDENTIFICADORESUB 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int idsubleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int idsubright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object idsub = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                        Nodo tmp = new Nodo("Parametros Llamada");
                        tmp.setNumNodo(parser.contador++);
                        tmp.addHijo((Nodo)a);
                        tmp.addHijo((Nodo)idsub);

                        RESULT = tmp;
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // IDENTIFICADORESUB ::= tk_Coma iDNUM 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
                        Nodo tmp = new Nodo("Parametros Llamada");
                        tmp.setNumNodo(parser.contador++);
                        tmp.addHijo((Nodo)a);
                        RESULT = tmp; 
                    
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int idsleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idsright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object ids = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                Nodo tmp = new Nodo("LLAMADAFUNCION");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                nd1.addHijo((Nodo)ids);

                RESULT = tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		 
                Nodo tmp = new Nodo("LLAMADAFUNCION");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);

                RESULT = tmp;
               
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LLAMADAFUNC ::= tk_Identificador iDNUM IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)).value;
		int idsubleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idsubright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object idsub = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                Nodo tmp = new Nodo("LLAMADAFUNCION");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                nd1.addHijo((Nodo)idsub);

                RESULT = tmp;
               
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LLAMADAFUNC ::= tk_Identificador iDNUM tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object a = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                Nodo tmp = new Nodo("LLAMADAFUNCION");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                tmp.addHijo((Nodo)a);
                RESULT = tmp;
               
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)).value;
		int idsleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idsright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object ids = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		 
                Nodo tmp = new Nodo("LLAMADAFUNCION");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                nd1.addHijo((Nodo)ids);

                RESULT = tmp;
               
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;
		int ileft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).value;
		int idsleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int idsright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object ids = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int idsubleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int idsubright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object idsub = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		 
                Nodo tmp = new Nodo("LLAMADAFUNCION");
                tmp.setNumNodo(parser.contador++);

                Nodo nd1 = new Nodo("Identificador");
                nd1.setValor(i.toString());
                nd1.setNumNodo(parser.contador++);

                tmp.addHijo(nd1);
                nd1.addHijo((Nodo)ids);
                nd1.addHijo((Nodo)idsub);
                RESULT = tmp;
               
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_valorString tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_Identificador tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // SINTAXIF ::= tk_if CONDICION tk_then tk_Linea INIF tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // SINTAXELSEIF ::= CONDICION tk_then tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // INIF ::= SINTAXIF INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // INIF ::= VARIABLE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // INIF ::= LLAMADAFUNC INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // INIF ::= ASIGNACIONVAL INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // INIF ::= OPERACIONES INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // INIF ::= CONSOLEWRITE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // INIF ::= SINTAXFOR INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // INIF ::= SINTAXWHILE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // INIF ::= tk_comentario tk_Linea INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // INIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // INIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // INIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // INIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // INIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // INIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // INIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // INIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // INIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // INIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // INIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // INELSE ::= SINTAXIF INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // INELSE ::= VARIABLE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // INELSE ::= LLAMADAFUNC INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // INELSE ::= ASIGNACIONVAL INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // INELSE ::= OPERACIONES INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // INELSE ::= CONSOLEWRITE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // INELSE ::= SINTAXFOR INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // INELSE ::= SINTAXWHILE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // INELSE ::= tk_comentario tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // INELSE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // INELSE ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // INELSE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // INELSE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // INELSE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // INELSE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // INELSE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // INELSE ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // INELSE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // INELSEIF ::= SINTAXIF INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // INELSEIF ::= VARIABLE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // INELSEIF ::= LLAMADAFUNC INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // INELSEIF ::= ASIGNACIONVAL INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // INELSEIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000001(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // INELSEIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // INELSEIF ::= OPERACIONES INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // INELSEIF ::= CONSOLEWRITE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INELSEIF ::= SINTAXFOR INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INELSEIF ::= SINTAXWHILE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // INELSEIF ::= tk_comentario tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // INELSEIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // INELSEIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // INELSEIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // INELSEIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // INELSEIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // INELSEIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // INELSEIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // INELSEIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INELSEIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // INFOR ::= SINTAXFOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // INFOR ::= SINTAXIF_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INFOR ::= VARIABLE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INFOR ::= LLAMADAFUNC INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INFOR ::= ASIGNACIONVAL INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INFOR ::= CONSOLEWRITE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // INFOR ::= OPERACIONES INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // INFOR ::= SINTAXWHILE_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // INFOR ::= tk_comentario tk_Linea INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // INFOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // INFOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // INFOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // INFOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // INFOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // INFOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // INFOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // INFOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // INFOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // INFOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // SINTAXIF_FOR ::= tk_if CONDICION tk_then tk_Linea INIF_FOR tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FOR",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // SINTAXELSEIF_FOR ::= CONDICION tk_then tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // INIF_FOR ::= SINTAXIF_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // INIF_FOR ::= VARIABLE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // INIF_FOR ::= LLAMADAFUNC INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // INIF_FOR ::= ASIGNACIONVAL INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // INIF_FOR ::= OPERACIONES INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // INIF_FOR ::= CONSOLEWRITE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // INIF_FOR ::= SINTAXFOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // INIF_FOR ::= SINTAXWHILE_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // INIF_FOR ::= tk_comentario tk_Linea INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // INIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // INIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // INIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // INIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // INIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // INIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // INIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // INIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // INIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // INIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // INIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // INIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // INELSEIF_FOR ::= SINTAXIF_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // INELSEIF_FOR ::= VARIABLE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // INELSEIF_FOR ::= LLAMADAFUNC INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // INELSEIF_FOR ::= ASIGNACIONVAL INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // INELSEIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // INELSEIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // INELSEIF_FOR ::= OPERACIONES INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // INELSEIF_FOR ::= CONSOLEWRITE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // INELSEIF_FOR ::= SINTAXFOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // INELSEIF_FOR ::= SINTAXWHILE_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // INELSEIF_FOR ::= tk_comentario tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // INELSEIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // INELSEIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // INELSEIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // INELSEIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // INELSEIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // INELSEIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // INELSEIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // INELSEIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // INELSEIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // INELSEIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // INELSE_FOR ::= SINTAXIF_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // INELSE_FOR ::= VARIABLE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // INELSE_FOR ::= LLAMADAFUNC INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // INELSE_FOR ::= ASIGNACIONVAL INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // INELSE_FOR ::= OPERACIONES INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // INELSE_FOR ::= CONSOLEWRITE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // INELSE_FOR ::= SINTAXFOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // INELSE_FOR ::= SINTAXWHILE_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // INELSE_FOR ::= tk_comentario tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // INELSE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // INELSE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // INELSE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // INELSE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // INELSE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // INELSE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // INELSE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // INELSE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // INELSE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // INELSE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // SINTAXWHILE_FOR ::= tk_do tk_while CONDICION tk_Linea INWHILE_FOR tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FOR",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // INWHILE_FOR ::= SINTAXFOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // INWHILE_FOR ::= VARIABLE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // INWHILE_FOR ::= LLAMADAFUNC INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // INWHILE_FOR ::= ASIGNACIONVAL INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // INWHILE_FOR ::= CONSOLEWRITE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // INWHILE_FOR ::= OPERACIONES INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // INWHILE_FOR ::= SINTAXWHILE_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // INWHILE_FOR ::= SINTAXIF_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // INWHILE_FOR ::= tk_comentario tk_Linea INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // INWHILE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // INWHILE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // INWHILE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // INWHILE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // INWHILE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // INWHILE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // INWHILE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // INWHILE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // INWHILE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // INWHILE_FOR ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // INWHILE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // SINTAXIF_WHILE ::= tk_if CONDICION tk_then tk_Linea INIF_WHILE tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_WHILE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // SINTAXELSEIF_WHILE ::= CONDICION tk_then tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // INIF_WHILE ::= SINTAXIF_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // INIF_WHILE ::= VARIABLE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INIF_WHILE ::= LLAMADAFUNC INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INIF_WHILE ::= ASIGNACIONVAL INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INIF_WHILE ::= OPERACIONES INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INIF_WHILE ::= CONSOLEWRITE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INIF_WHILE ::= SINTAXFOR_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INIF_WHILE ::= SINTAXWHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INIF_WHILE ::= tk_comentario tk_Linea INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // INIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // INIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // INIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // INIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // INIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // INIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // INELSEIF_WHILE ::= SINTAXWHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // INELSEIF_WHILE ::= SINTAXIF_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // INELSEIF_WHILE ::= VARIABLE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // INELSEIF_WHILE ::= LLAMADAFUNC INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // INELSEIF_WHILE ::= ASIGNACIONVAL INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // INELSEIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // INELSEIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // INELSEIF_WHILE ::= OPERACIONES INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // INELSEIF_WHILE ::= CONSOLEWRITE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // INELSEIF_WHILE ::= SINTAXFOR_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // INELSEIF_WHILE ::= tk_comentario tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // INELSEIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // INELSEIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // INELSEIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // INELSEIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // INELSEIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // INELSEIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // INELSEIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // INELSEIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // INELSEIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // INELSEIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // INELSE_WHILE ::= SINTAXWHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // INELSE_WHILE ::= SINTAXIF_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // INELSE_WHILE ::= VARIABLE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // INELSE_WHILE ::= LLAMADAFUNC INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // INELSE_WHILE ::= ASIGNACIONVAL INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // INELSE_WHILE ::= OPERACIONES INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // INELSE_WHILE ::= CONSOLEWRITE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // INELSE_WHILE ::= SINTAXFOR_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // INELSE_WHILE ::= tk_comentario tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // INELSE_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // INELSE_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // INELSE_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // INELSE_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // INELSE_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // INELSE_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // INELSE_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // INELSE_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // INELSE_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // INELSE_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // INFOR_WHILE ::= SINTAXWHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // INFOR_WHILE ::= SINTAXFOR_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // INFOR_WHILE ::= SINTAXIF_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // INFOR_WHILE ::= VARIABLE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // INFOR_WHILE ::= LLAMADAFUNC INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // INFOR_WHILE ::= ASIGNACIONVAL INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // INFOR_WHILE ::= CONSOLEWRITE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // INFOR_WHILE ::= OPERACIONES INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // INFOR_WHILE ::= tk_comentario tk_Linea INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // INFOR_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // INFOR_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // INFOR_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // INFOR_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // INFOR_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // INFOR_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // INFOR_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // INFOR_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // INFOR_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // INFOR_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // INFOR_WHILE ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_Linea INWHILE tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // INWHILE ::= SINTAXWHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // INWHILE ::= SINTAXFOR_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // INWHILE ::= SINTAXIF_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // INWHILE ::= VARIABLE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // INWHILE ::= LLAMADAFUNC INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // INWHILE ::= ASIGNACIONVAL INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // INWHILE ::= CONSOLEWRITE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // INWHILE ::= OPERACIONES INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // INWHILE ::= tk_comentario tk_Linea INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // INWHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // INWHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // INWHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // INWHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // INWHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // INWHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // INWHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // INWHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // INWHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // INWHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Gramatica$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Gramatica$do_action_part00000001(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
