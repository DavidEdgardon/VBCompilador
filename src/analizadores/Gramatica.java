
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u020f\000\002\002\004\000\002\002\003\000\002\051" +
    "\007\000\002\051\007\000\002\051\007\000\002\051\007" +
    "\000\002\051\004\000\002\051\005\000\002\061\004\000" +
    "\002\071\013\000\002\071\013\000\002\071\013\000\002" +
    "\071\013\000\002\071\013\000\002\071\013\000\002\072" +
    "\007\000\002\072\007\000\002\072\007\000\002\072\007" +
    "\000\002\073\011\000\002\073\011\000\002\073\011\000" +
    "\002\073\011\000\002\073\011\000\002\043\010\000\002" +
    "\043\010\000\002\043\010\000\002\043\010\000\002\043" +
    "\010\000\002\044\005\000\002\044\005\000\002\044\005" +
    "\000\002\047\005\000\002\047\005\000\002\047\005\000" +
    "\002\046\005\000\002\046\005\000\002\046\005\000\002" +
    "\045\005\000\002\045\005\000\002\045\005\000\002\003" +
    "\004\000\002\003\004\000\002\003\004\000\002\003\003" +
    "\000\002\003\005\000\002\050\004\000\002\050\004\000" +
    "\002\050\004\000\002\050\003\000\002\050\005\000\002" +
    "\014\004\000\002\014\004\000\002\014\004\000\002\014" +
    "\003\000\002\014\005\000\002\031\006\000\002\031\010" +
    "\000\002\031\010\000\002\031\010\000\002\012\004\000" +
    "\002\012\004\000\002\012\004\000\002\012\004\000\002" +
    "\012\004\000\002\012\004\000\002\012\004\000\002\012" +
    "\004\000\002\012\004\000\002\012\003\000\002\012\005" +
    "\000\002\076\012\000\002\077\006\000\002\100\004\000" +
    "\002\100\004\000\002\100\004\000\002\100\004\000\002" +
    "\100\004\000\002\100\004\000\002\100\004\000\002\100" +
    "\004\000\002\100\005\000\002\100\004\000\002\100\003" +
    "\000\002\100\003\000\002\100\003\000\002\100\003\000" +
    "\002\100\003\000\002\100\003\000\002\100\003\000\002" +
    "\100\003\000\002\100\005\000\002\100\005\000\002\100" +
    "\004\000\002\102\004\000\002\102\004\000\002\102\004" +
    "\000\002\102\004\000\002\102\004\000\002\102\004\000" +
    "\002\102\004\000\002\102\004\000\002\102\005\000\002" +
    "\102\004\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\003\000\002\102\003\000\002\102\005\000" +
    "\002\101\004\000\002\101\004\000\002\101\004\000\002" +
    "\101\004\000\002\101\005\000\002\101\004\000\002\101" +
    "\004\000\002\101\004\000\002\101\004\000\002\101\004" +
    "\000\002\101\005\000\002\101\004\000\002\101\003\000" +
    "\002\101\003\000\002\101\003\000\002\101\003\000\002" +
    "\101\003\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\005\000\002\074\011\000\002\075\004" +
    "\000\002\075\004\000\002\075\004\000\002\075\004\000" +
    "\002\075\004\000\002\075\004\000\002\075\004\000\002" +
    "\075\004\000\002\075\005\000\002\075\004\000\002\075" +
    "\003\000\002\075\003\000\002\075\003\000\002\075\003" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\075\003\000\002\075\005\000\002\075\005\000\002" +
    "\075\005\000\002\104\017\000\002\104\014\000\002\103" +
    "\004\000\002\103\004\000\002\103\004\000\002\103\004" +
    "\000\002\103\004\000\002\103\004\000\002\103\004\000" +
    "\002\103\004\000\002\103\005\000\002\103\004\000\002" +
    "\103\003\000\002\103\003\000\002\103\003\000\002\103" +
    "\003\000\002\103\003\000\002\103\003\000\002\103\003" +
    "\000\002\103\003\000\002\103\005\000\002\103\005\000" +
    "\002\103\005\000\002\013\004\000\002\013\004\000\002" +
    "\013\004\000\002\013\004\000\002\013\004\000\002\013" +
    "\004\000\002\013\004\000\002\013\004\000\002\013\004" +
    "\000\002\013\004\000\002\013\005\000\002\004\007\000" +
    "\002\004\006\000\002\004\010\000\002\004\007\000\002" +
    "\004\003\000\002\030\003\000\002\030\003\000\002\030" +
    "\003\000\002\005\007\000\002\005\011\000\002\005\010" +
    "\000\002\005\007\000\002\005\006\000\002\005\010\000" +
    "\002\006\006\000\002\006\005\000\002\006\005\000\002" +
    "\006\012\000\002\006\010\000\002\006\014\000\002\011" +
    "\003\000\002\011\003\000\002\010\003\000\002\010\003" +
    "\000\002\010\003\000\002\024\003\000\002\024\003\000" +
    "\002\024\003\000\002\024\003\000\002\024\003\000\002" +
    "\027\003\000\002\027\003\000\002\022\005\000\002\022" +
    "\005\000\002\022\007\000\002\022\003\000\002\022\011" +
    "\000\002\025\004\000\002\025\003\000\002\035\005\000" +
    "\002\035\006\000\002\042\005\000\002\042\006\000\002" +
    "\042\005\000\002\042\005\000\002\042\005\000\002\042" +
    "\005\000\002\042\004\000\002\036\003\000\002\036\003" +
    "\000\002\036\003\000\002\036\003\000\002\036\003\000" +
    "\002\036\003\000\002\033\004\000\002\034\004\000\002" +
    "\034\003\000\002\037\005\000\002\037\004\000\002\032" +
    "\006\000\002\032\006\000\002\032\006\000\002\032\005" +
    "\000\002\032\010\000\002\032\007\000\002\007\011\000" +
    "\002\007\011\000\002\015\012\000\002\021\006\000\002" +
    "\016\004\000\002\016\004\000\002\016\004\000\002\016" +
    "\004\000\002\016\004\000\002\016\004\000\002\016\004" +
    "\000\002\016\004\000\002\016\005\000\002\016\004\000" +
    "\002\016\003\000\002\016\003\000\002\016\003\000\002" +
    "\016\003\000\002\016\003\000\002\016\003\000\002\016" +
    "\003\000\002\016\003\000\002\016\005\000\002\016\004" +
    "\000\002\017\004\000\002\017\004\000\002\017\004\000" +
    "\002\017\004\000\002\017\004\000\002\017\004\000\002" +
    "\017\004\000\002\017\004\000\002\017\005\000\002\017" +
    "\004\000\002\017\003\000\002\017\003\000\002\017\003" +
    "\000\002\017\003\000\002\017\003\000\002\017\003\000" +
    "\002\017\003\000\002\017\003\000\002\020\004\000\002" +
    "\020\004\000\002\020\004\000\002\020\004\000\002\020" +
    "\005\000\002\020\004\000\002\020\004\000\002\020\004" +
    "\000\002\020\004\000\002\020\004\000\002\020\005\000" +
    "\002\020\004\000\002\020\003\000\002\020\003\000\002" +
    "\020\003\000\002\020\003\000\002\020\003\000\002\020" +
    "\003\000\002\020\003\000\002\020\003\000\002\023\017" +
    "\000\002\023\014\000\002\040\004\000\002\040\004\000" +
    "\002\040\004\000\002\040\004\000\002\040\004\000\002" +
    "\040\004\000\002\040\004\000\002\040\004\000\002\040" +
    "\005\000\002\040\004\000\002\040\003\000\002\040\003" +
    "\000\002\040\003\000\002\040\003\000\002\040\003\000" +
    "\002\040\003\000\002\040\003\000\002\040\003\000\002" +
    "\040\005\000\002\064\012\000\002\065\006\000\002\066" +
    "\004\000\002\066\004\000\002\066\004\000\002\066\004" +
    "\000\002\066\004\000\002\066\004\000\002\066\004\000" +
    "\002\066\004\000\002\066\005\000\002\066\004\000\002" +
    "\066\003\000\002\066\003\000\002\066\003\000\002\066" +
    "\003\000\002\066\003\000\002\066\003\000\002\066\003" +
    "\000\002\066\003\000\002\066\005\000\002\066\005\000" +
    "\002\066\004\000\002\067\004\000\002\067\004\000\002" +
    "\067\004\000\002\067\004\000\002\067\005\000\002\067" +
    "\004\000\002\067\004\000\002\067\004\000\002\067\004" +
    "\000\002\067\004\000\002\067\005\000\002\067\004\000" +
    "\002\067\003\000\002\067\003\000\002\067\003\000\002" +
    "\067\003\000\002\067\003\000\002\067\003\000\002\067" +
    "\003\000\002\067\003\000\002\067\005\000\002\070\004" +
    "\000\002\070\004\000\002\070\004\000\002\070\004\000" +
    "\002\070\004\000\002\070\004\000\002\070\004\000\002" +
    "\070\004\000\002\070\005\000\002\070\004\000\002\070" +
    "\003\000\002\070\003\000\002\070\003\000\002\070\003" +
    "\000\002\070\003\000\002\070\003\000\002\070\003\000" +
    "\002\070\003\000\002\070\005\000\002\062\011\000\002" +
    "\063\004\000\002\063\004\000\002\063\004\000\002\063" +
    "\004\000\002\063\004\000\002\063\004\000\002\063\004" +
    "\000\002\063\004\000\002\063\005\000\002\063\004\000" +
    "\002\063\003\000\002\063\003\000\002\063\003\000\002" +
    "\063\003\000\002\063\003\000\002\063\003\000\002\063" +
    "\003\000\002\063\003\000\002\063\005\000\002\063\005" +
    "\000\002\052\012\000\002\056\006\000\002\053\004\000" +
    "\002\053\004\000\002\053\004\000\002\053\004\000\002" +
    "\053\004\000\002\053\004\000\002\053\004\000\002\053" +
    "\004\000\002\053\005\000\002\053\004\000\002\053\003" +
    "\000\002\053\003\000\002\053\003\000\002\053\003\000" +
    "\002\053\003\000\002\053\003\000\002\053\003\000\002" +
    "\053\003\000\002\053\005\000\002\053\005\000\002\053" +
    "\004\000\002\055\004\000\002\055\004\000\002\055\004" +
    "\000\002\055\004\000\002\055\004\000\002\055\005\000" +
    "\002\055\004\000\002\055\004\000\002\055\004\000\002" +
    "\055\004\000\002\055\005\000\002\055\004\000\002\055" +
    "\003\000\002\055\003\000\002\055\003\000\002\055\003" +
    "\000\002\055\003\000\002\055\003\000\002\055\003\000" +
    "\002\055\003\000\002\055\005\000\002\054\004\000\002" +
    "\054\004\000\002\054\004\000\002\054\004\000\002\054" +
    "\004\000\002\054\004\000\002\054\004\000\002\054\004" +
    "\000\002\054\005\000\002\054\004\000\002\054\003\000" +
    "\002\054\003\000\002\054\003\000\002\054\003\000\002" +
    "\054\003\000\002\054\003\000\002\054\003\000\002\054" +
    "\003\000\002\054\005\000\002\060\017\000\002\060\014" +
    "\000\002\057\004\000\002\057\004\000\002\057\004\000" +
    "\002\057\004\000\002\057\004\000\002\057\004\000\002" +
    "\057\004\000\002\057\004\000\002\057\005\000\002\057" +
    "\004\000\002\057\003\000\002\057\003\000\002\057\003" +
    "\000\002\057\003\000\002\057\003\000\002\057\003\000" +
    "\002\057\003\000\002\057\003\000\002\057\005\000\002" +
    "\057\005\000\002\026\011\000\002\041\004\000\002\041" +
    "\004\000\002\041\004\000\002\041\004\000\002\041\004" +
    "\000\002\041\004\000\002\041\004\000\002\041\004\000" +
    "\002\041\005\000\002\041\004\000\002\041\003\000\002" +
    "\041\003\000\002\041\003\000\002\041\003\000\002\041" +
    "\003\000\002\041\003\000\002\041\003\000\002\041\003" +
    "\000\002\041\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u03c8\000\010\003\005\006\011\033\007\001\002\000" +
    "\004\002\000\001\002\000\006\034\u03c6\062\u03c5\001\002" +
    "\000\010\003\023\031\027\033\026\001\002\000\006\003" +
    "\014\034\015\001\002\000\004\002\013\001\002\000\004" +
    "\062\012\001\002\000\034\003\ufff9\005\ufff9\006\ufff9\013" +
    "\ufff9\017\ufff9\025\ufff9\031\ufff9\033\ufff9\050\ufff9\054\ufff9" +
    "\060\ufff9\064\ufff9\065\ufff9\001\002\000\004\002\001\001" +
    "\002\000\004\064\u03c1\001\002\000\006\003\017\064\016" +
    "\001\002\000\004\062\u03bf\001\002\000\004\062\020\001" +
    "\002\000\010\003\023\031\027\033\026\001\002\000\010" +
    "\003\023\031\027\033\026\001\002\000\010\003\023\031" +
    "\027\033\026\001\002\000\014\030\u016a\031\u016c\032\u016e" +
    "\061\u03b6\062\u03b7\001\002\000\004\002\ufffc\001\002\000" +
    "\004\002\uffd5\001\002\000\012\003\u038d\030\u038c\031\u017c" +
    "\032\u038e\001\002\000\006\003\033\061\032\001\002\000" +
    "\010\003\023\031\027\033\026\001\002\000\004\002\uffd7" +
    "\001\002\000\006\003\u0381\050\u0382\001\002\000\004\050" +
    "\034\001\002\000\004\051\035\001\002\000\004\062\036" +
    "\001\002\000\030\003\061\005\050\006\011\013\057\017" +
    "\044\025\062\050\055\054\040\060\056\064\046\065\063" +
    "\001\002\000\030\003\061\005\050\006\011\013\057\017" +
    "\044\025\062\050\055\054\040\060\056\064\046\065\063" +
    "\001\002\000\004\064\u0374\001\002\000\030\003\061\005" +
    "\050\006\011\013\057\017\044\025\062\050\055\054\040" +
    "\060\056\064\046\065\063\001\002\000\030\003\061\005" +
    "\050\006\011\013\057\017\044\025\062\050\055\054\040" +
    "\060\056\064\046\065\063\001\002\000\030\003\061\005" +
    "\050\006\011\013\057\017\044\025\062\050\055\054\040" +
    "\060\056\064\046\065\063\001\002\000\004\064\u02d3\001" +
    "\002\000\004\002\uffe7\001\002\000\030\035\uff25\036\uff25" +
    "\037\uff25\040\uff25\041\uff25\042\uff25\047\u02a9\050\u02a7\053" +
    "\u02a6\064\070\065\063\001\002\000\030\003\061\005\050" +
    "\006\011\013\057\017\044\025\062\050\055\054\040\060" +
    "\056\064\046\065\063\001\002\000\004\053\u0298\001\002" +
    "\000\030\003\061\005\050\006\011\013\057\017\044\025" +
    "\062\050\055\054\040\060\056\064\046\065\063\001\002" +
    "\000\030\003\061\005\050\006\011\013\057\017\044\025" +
    "\062\050\055\054\040\060\056\064\046\065\063\001\002" +
    "\000\016\035\116\036\114\037\112\040\110\041\111\042" +
    "\115\001\002\000\010\003\u0166\033\026\060\u0165\001\002" +
    "\000\006\064\070\065\063\001\002\000\006\003\u015b\031" +
    "\u015c\001\002\000\012\026\067\027\073\064\070\065\063" +
    "\001\002\000\030\003\061\005\050\006\011\013\057\017" +
    "\044\025\062\050\055\054\040\060\056\064\046\065\063" +
    "\001\002\000\006\031\u0109\062\u0108\001\002\000\004\022" +
    "\066\001\002\000\052\014\uff24\020\uff24\023\uff24\035\uff24" +
    "\036\uff24\037\uff24\040\uff24\041\uff24\042\uff24\043\uff24\044" +
    "\uff24\045\uff24\046\uff24\047\uff24\050\uff24\051\uff24\052\uff24" +
    "\062\uff24\064\uff24\065\uff24\001\002\000\030\003\061\005" +
    "\050\006\011\013\057\017\044\025\062\050\055\054\040" +
    "\060\056\064\046\065\063\001\002\000\020\002\uff46\003" +
    "\uff46\006\uff46\031\uff46\033\uff46\060\uff46\064\uff46\001\002" +
    "\000\012\026\067\027\073\064\070\065\063\001\002\000" +
    "\006\014\uff2f\062\uff2f\001\002\000\050\020\uff25\023\uff25" +
    "\035\uff25\036\uff25\037\uff25\040\uff25\041\uff25\042\uff25\043" +
    "\uff25\044\uff25\045\uff25\046\uff25\047\uff25\050\uff25\051\uff25" +
    "\052\uff25\062\uff25\064\uff25\065\uff25\001\002\000\004\062" +
    "\130\001\002\000\006\014\uff20\062\uff20\001\002\000\006" +
    "\014\uff2e\062\uff2e\001\002\000\014\043\102\044\076\045" +
    "\100\046\077\047\101\001\002\000\014\026\067\027\073" +
    "\050\105\064\103\065\063\001\002\000\014\026\uff29\027" +
    "\uff29\050\uff29\064\uff29\065\uff29\001\002\000\014\026\uff27" +
    "\027\uff27\050\uff27\064\uff27\065\uff27\001\002\000\014\026" +
    "\uff28\027\uff28\050\uff28\064\uff28\065\uff28\001\002\000\014" +
    "\026\uff26\027\uff26\050\uff26\064\uff26\065\uff26\001\002\000" +
    "\014\026\uff2a\027\uff2a\050\uff2a\064\uff2a\065\uff2a\001\002" +
    "\000\010\014\uff25\050\121\062\uff25\001\002\000\006\014" +
    "\uff22\062\uff22\001\002\000\006\064\070\065\063\001\002" +
    "\000\006\014\uff23\062\uff23\001\002\000\016\035\116\036" +
    "\114\037\112\040\110\041\111\042\115\001\002\000\024" +
    "\035\uff10\036\uff10\037\uff10\040\uff10\041\uff10\042\uff10\050" +
    "\uff10\064\uff10\065\uff10\001\002\000\024\035\uff0f\036\uff0f" +
    "\037\uff0f\040\uff0f\041\uff0f\042\uff0f\050\uff0f\064\uff0f\065" +
    "\uff0f\001\002\000\024\035\uff11\036\uff11\037\uff11\040\uff11" +
    "\041\uff11\042\uff11\050\uff11\064\uff11\065\uff11\001\002\000" +
    "\006\064\070\065\063\001\002\000\024\035\uff12\036\uff12" +
    "\037\uff12\040\uff12\041\uff12\042\uff12\050\uff12\064\uff12\065" +
    "\uff12\001\002\000\024\035\uff0e\036\uff0e\037\uff0e\040\uff0e" +
    "\041\uff0e\042\uff0e\050\uff0e\064\uff0e\065\uff0e\001\002\000" +
    "\024\035\uff13\036\uff13\037\uff13\040\uff13\041\uff13\042\uff13" +
    "\050\uff13\064\uff13\065\uff13\001\002\000\004\051\120\001" +
    "\002\000\006\014\uff1f\062\uff1f\001\002\000\006\064\070" +
    "\065\063\001\002\000\006\014\uff21\062\uff21\001\002\000" +
    "\006\051\124\052\126\001\002\000\012\014\uff0b\051\uff0b" +
    "\052\uff0b\062\uff0b\001\002\000\012\014\uff0d\051\uff0d\052" +
    "\uff0d\062\uff0d\001\002\000\006\064\070\065\063\001\002" +
    "\000\012\014\uff0c\051\uff0c\052\uff0c\062\uff0c\001\002\000" +
    "\026\005\050\006\141\013\143\017\134\025\062\050\055" +
    "\054\040\056\145\064\046\065\063\001\002\000\030\005" +
    "\050\006\141\013\143\017\134\021\ufdf6\025\062\050\055" +
    "\054\040\056\145\064\046\065\063\001\002\000\030\005" +
    "\050\006\141\013\143\017\134\021\ufdf5\025\062\050\055" +
    "\054\040\056\145\064\046\065\063\001\002\000\030\005" +
    "\050\006\141\013\143\017\134\021\ufdfb\025\062\050\055" +
    "\054\040\056\145\064\046\065\063\001\002\000\004\064" +
    "\310\001\002\000\030\005\050\006\141\013\143\017\134" +
    "\021\ufdf7\025\062\050\055\054\040\056\145\064\046\065" +
    "\063\001\002\000\030\005\050\006\141\013\143\017\134" +
    "\021\ufdf8\025\062\050\055\054\040\056\145\064\046\065" +
    "\063\001\002\000\030\005\050\006\141\013\143\017\134" +
    "\021\ufdf4\025\062\050\055\054\040\056\145\064\046\065" +
    "\063\001\002\000\030\005\050\006\141\013\143\017\134" +
    "\021\ufdfa\025\062\050\055\054\040\056\145\064\046\065" +
    "\063\001\002\000\004\062\302\001\002\000\030\005\050" +
    "\006\141\013\143\017\134\021\ufdf9\025\062\050\055\054" +
    "\040\056\145\064\046\065\063\001\002\000\012\026\067" +
    "\027\073\064\070\065\063\001\002\000\004\021\150\001" +
    "\002\000\004\025\146\001\002\000\004\062\147\001\002" +
    "\000\004\021\ufdf3\001\002\000\004\062\151\001\002\000" +
    "\042\003\ufe06\005\ufe06\006\ufe06\013\ufe06\015\ufe06\016\ufe06" +
    "\017\ufe06\021\ufe06\024\ufe06\025\ufe06\050\ufe06\054\ufe06\056" +
    "\ufe06\060\ufe06\064\ufe06\065\ufe06\001\002\000\004\014\153" +
    "\001\002\000\004\062\154\001\002\000\032\005\050\006" +
    "\166\013\143\015\156\016\155\017\134\025\062\050\055" +
    "\054\040\056\171\064\046\065\063\001\002\000\004\062" +
    "\277\001\002\000\012\026\067\027\073\064\070\065\063" +
    "\001\002\000\034\005\050\006\166\013\143\015\156\016" +
    "\155\017\134\025\062\050\055\054\040\056\171\060\ufe4c" +
    "\064\046\065\063\001\002\000\034\005\050\006\166\013" +
    "\143\015\156\016\155\017\134\025\062\050\055\054\040" +
    "\056\171\060\ufe4b\064\046\065\063\001\002\000\034\005" +
    "\050\006\166\013\143\015\156\016\155\017\134\025\062" +
    "\050\055\054\040\056\171\060\ufe48\064\046\065\063\001" +
    "\002\000\034\005\050\006\166\013\143\015\156\016\155" +
    "\017\134\025\062\050\055\054\040\056\171\060\ufe4d\064" +
    "\046\065\063\001\002\000\034\005\050\006\166\013\143" +
    "\015\156\016\155\017\134\025\062\050\055\054\040\056" +
    "\171\060\ufe4e\064\046\065\063\001\002\000\034\005\050" +
    "\006\166\013\143\015\156\016\155\017\134\025\062\050" +
    "\055\054\040\056\171\060\ufe4a\064\046\065\063\001\002" +
    "\000\034\005\050\006\166\013\143\015\156\016\155\017" +
    "\134\025\062\050\055\054\040\056\171\060\ufe49\064\046" +
    "\065\063\001\002\000\004\062\200\001\002\000\004\060" +
    "\175\001\002\000\034\005\050\006\166\013\143\015\156" +
    "\016\155\017\134\025\062\050\055\054\040\056\171\060" +
    "\ufe4f\064\046\065\063\001\002\000\004\025\172\001\002" +
    "\000\004\062\173\001\002\000\004\060\ufe47\001\002\000" +
    "\004\060\ufe59\001\002\000\004\013\176\001\002\000\004" +
    "\062\177\001\002\000\040\005\ufe5b\006\ufe5b\013\ufe5b\015" +
    "\ufe5b\016\ufe5b\017\ufe5b\021\ufe5b\024\ufe5b\025\ufe5b\050\ufe5b" +
    "\054\ufe5b\056\ufe5b\060\ufe5b\064\ufe5b\065\ufe5b\001\002\000" +
    "\034\005\050\006\166\013\143\015\156\016\155\017\134" +
    "\025\062\050\055\054\040\056\171\060\ufe50\064\046\065" +
    "\063\001\002\000\004\060\ufe51\001\002\000\004\060\ufe53" +
    "\001\002\000\004\060\ufe55\001\002\000\004\060\ufe58\001" +
    "\002\000\004\060\ufe57\001\002\000\004\060\ufe52\001\002" +
    "\000\004\060\ufe54\001\002\000\004\060\ufe56\001\002\000" +
    "\004\060\ufe45\001\002\000\004\014\213\001\002\000\004" +
    "\062\214\001\002\000\032\005\050\006\227\013\143\015" +
    "\216\016\215\017\134\025\062\050\055\054\040\056\231" +
    "\064\046\065\063\001\002\000\004\062\247\001\002\000" +
    "\012\026\067\027\073\064\070\065\063\001\002\000\034" +
    "\005\050\006\227\013\143\015\216\016\215\017\134\025" +
    "\062\050\055\054\040\056\231\060\ufe34\064\046\065\063" +
    "\001\002\000\034\005\050\006\227\013\143\015\216\016" +
    "\215\017\134\025\062\050\055\054\040\056\231\060\ufe33" +
    "\064\046\065\063\001\002\000\034\005\050\006\227\013" +
    "\143\015\216\016\215\017\134\025\062\050\055\054\040" +
    "\056\231\060\ufe38\064\046\065\063\001\002\000\004\060" +
    "\ufe5a\001\002\000\034\005\050\006\227\013\143\015\216" +
    "\016\215\017\134\025\062\050\055\054\040\056\231\060" +
    "\ufe35\064\046\065\063\001\002\000\034\005\050\006\227" +
    "\013\143\015\216\016\215\017\134\025\062\050\055\054" +
    "\040\056\231\060\ufe36\064\046\065\063\001\002\000\034" +
    "\005\050\006\227\013\143\015\216\016\215\017\134\025" +
    "\062\050\055\054\040\056\231\060\ufe32\064\046\065\063" +
    "\001\002\000\034\005\050\006\227\013\143\015\216\016" +
    "\215\017\134\025\062\050\055\054\040\056\231\060\ufe31" +
    "\064\046\065\063\001\002\000\004\062\235\001\002\000" +
    "\034\005\050\006\227\013\143\015\216\016\215\017\134" +
    "\025\062\050\055\054\040\056\231\060\ufe37\064\046\065" +
    "\063\001\002\000\004\025\232\001\002\000\004\062\233" +
    "\001\002\000\004\060\ufe30\001\002\000\004\060\ufe43\001" +
    "\002\000\034\005\050\006\227\013\143\015\216\016\215" +
    "\017\134\025\062\050\055\054\040\056\231\060\ufe39\064" +
    "\046\065\063\001\002\000\004\060\ufe3a\001\002\000\004" +
    "\060\ufe3b\001\002\000\004\060\ufe3d\001\002\000\004\060" +
    "\ufe42\001\002\000\004\060\ufe41\001\002\000\004\060\ufe44" +
    "\001\002\000\004\060\ufe3c\001\002\000\004\060\ufe40\001" +
    "\002\000\004\060\ufe3e\001\002\000\026\005\050\006\257" +
    "\013\143\017\134\025\062\050\055\054\040\056\261\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe21\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe20\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe25\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe22\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe23\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe1f\064" +
    "\046\065\063\001\002\000\030\005\050\006\257\013\143" +
    "\017\134\025\062\050\055\054\040\056\261\060\ufe1e\064" +
    "\046\065\063\001\002\000\004\062\266\001\002\000\030" +
    "\005\050\006\257\013\143\017\134\025\062\050\055\054" +
    "\040\056\261\060\ufe24\064\046\065\063\001\002\000\004" +
    "\025\263\001\002\000\004\060\ufe3f\001\002\000\004\062" +
    "\264\001\002\000\004\060\ufe1d\001\002\000\004\060\ufe2e" +
    "\001\002\000\030\005\050\006\257\013\143\017\134\025" +
    "\062\050\055\054\040\056\261\060\ufe26\064\046\065\063" +
    "\001\002\000\004\060\ufe27\001\002\000\004\060\ufe28\001" +
    "\002\000\004\060\ufe2a\001\002\000\004\060\ufe2d\001\002" +
    "\000\004\060\ufe2c\001\002\000\004\060\ufe2f\001\002\000" +
    "\004\060\ufe29\001\002\000\004\060\ufe2b\001\002\000\026" +
    "\005\050\006\257\013\143\017\134\025\062\050\055\054" +
    "\040\056\261\064\046\065\063\001\002\000\004\060\ufe46" +
    "\001\002\000\004\021\ufe03\001\002\000\030\005\050\006" +
    "\141\013\143\017\134\021\ufdfc\025\062\050\055\054\040" +
    "\056\145\064\046\065\063\001\002\000\004\021\ufdfd\001" +
    "\002\000\004\021\ufe04\001\002\000\004\021\ufdfe\001\002" +
    "\000\004\021\ufe02\001\002\000\004\021\ufe01\001\002\000" +
    "\004\047\311\001\002\000\006\064\070\065\063\001\002" +
    "\000\004\020\313\001\002\000\010\050\055\064\070\065" +
    "\063\001\002\000\026\005\050\006\335\013\143\017\134" +
    "\025\062\050\055\054\040\056\337\064\046\065\063\001" +
    "\002\000\020\023\317\035\116\036\114\037\112\040\110" +
    "\041\111\042\115\001\002\000\024\035\116\036\114\037" +
    "\112\040\110\041\111\042\115\050\364\064\070\065\063" +
    "\001\002\000\006\036\322\065\321\001\002\000\004\062" +
    "\324\001\002\000\004\062\uff1d\001\002\000\004\065\323" +
    "\001\002\000\004\062\uff1e\001\002\000\026\005\050\006" +
    "\335\013\143\017\134\025\062\050\055\054\040\056\337" +
    "\064\046\065\063\001\002\000\030\005\050\006\335\013" +
    "\143\017\134\024\ufe0b\025\062\050\055\054\040\056\337" +
    "\064\046\065\063\001\002\000\030\005\050\006\335\013" +
    "\143\017\134\024\ufe0a\025\062\050\055\054\040\056\337" +
    "\064\046\065\063\001\002\000\030\005\050\006\335\013" +
    "\143\017\134\024\ufe10\025\062\050\055\054\040\056\337" +
    "\064\046\065\063\001\002\000\030\005\050\006\335\013" +
    "\143\017\134\024\ufe0c\025\062\050\055\054\040\056\337" +
    "\064\046\065\063\001\002\000\004\024\352\001\002\000" +
    "\030\005\050\006\335\013\143\017\134\024\ufe0d\025\062" +
    "\050\055\054\040\056\337\064\046\065\063\001\002\000" +
    "\030\005\050\006\335\013\143\017\134\024\ufe09\025\062" +
    "\050\055\054\040\056\337\064\046\065\063\001\002\000" +
    "\030\005\050\006\335\013\143\017\134\024\ufe0f\025\062" +
    "\050\055\054\040\056\337\064\046\065\063\001\002\000" +
    "\004\062\345\001\002\000\030\005\050\006\335\013\143" +
    "\017\134\024\ufe0e\025\062\050\055\054\040\056\337\064" +
    "\046\065\063\001\002\000\006\017\341\025\340\001\002" +
    "\000\004\062\343\001\002\000\004\062\342\001\002\000" +
    "\004\024\ufe07\001\002\000\004\024\ufe08\001\002\000\004" +
    "\024\ufe18\001\002\000\030\005\050\006\335\013\143\017" +
    "\134\024\ufe11\025\062\050\055\054\040\056\337\064\046" +
    "\065\063\001\002\000\004\024\ufe12\001\002\000\004\024" +
    "\ufe19\001\002\000\004\024\ufe13\001\002\000\004\024\ufe17" +
    "\001\002\000\004\064\353\001\002\000\004\062\354\001" +
    "\002\000\040\005\ufe1c\006\ufe1c\013\ufe1c\015\ufe1c\016\ufe1c" +
    "\017\ufe1c\021\ufe1c\024\ufe1c\025\ufe1c\050\ufe1c\054\ufe1c\056" +
    "\ufe1c\060\ufe1c\064\ufe1c\065\ufe1c\001\002\000\004\024\ufe16" +
    "\001\002\000\004\024\ufe1a\001\002\000\004\024\ufe14\001" +
    "\002\000\004\024\ufe15\001\002\000\022\035\116\036\114" +
    "\037\112\040\110\041\111\042\115\051\373\062\375\001" +
    "\002\000\042\003\uff1c\005\uff1c\006\uff1c\013\uff1c\015\uff1c" +
    "\016\uff1c\017\uff1c\021\uff1c\024\uff1c\025\uff1c\050\uff1c\054" +
    "\uff1c\056\uff1c\060\uff1c\064\uff1c\065\uff1c\001\002\000\006" +
    "\064\070\065\063\001\002\000\006\064\070\065\063\001" +
    "\002\000\016\035\116\036\114\037\112\040\110\041\111" +
    "\042\115\001\002\000\024\035\116\036\114\037\112\040" +
    "\110\041\111\042\115\050\364\064\070\065\063\001\002" +
    "\000\042\003\uff19\005\uff19\006\uff19\013\uff19\015\uff19\016" +
    "\uff19\017\uff19\021\uff19\024\uff19\025\uff19\050\uff19\054\uff19" +
    "\056\uff19\060\uff19\064\uff19\065\uff19\001\002\000\026\035" +
    "\116\036\114\037\112\040\110\041\111\042\115\050\364" +
    "\062\372\064\070\065\063\001\002\000\042\003\uff18\005" +
    "\uff18\006\uff18\013\uff18\015\uff18\016\uff18\017\uff18\021\uff18" +
    "\024\uff18\025\uff18\050\uff18\054\uff18\056\uff18\060\uff18\064" +
    "\uff18\065\uff18\001\002\000\042\003\uff16\005\uff16\006\uff16" +
    "\013\uff16\015\uff16\016\uff16\017\uff16\021\uff16\024\uff16\025" +
    "\uff16\050\uff16\054\uff16\056\uff16\060\uff16\064\uff16\065\uff16" +
    "\001\002\000\026\035\116\036\114\037\112\040\110\041" +
    "\111\042\115\050\364\062\u0100\064\070\065\063\001\002" +
    "\000\024\035\116\036\114\037\112\040\110\041\111\042" +
    "\115\050\364\064\070\065\063\001\002\000\042\003\uff14" +
    "\005\uff14\006\uff14\013\uff14\015\uff14\016\uff14\017\uff14\021" +
    "\uff14\024\uff14\025\uff14\050\uff14\054\uff14\056\uff14\060\uff14" +
    "\064\uff14\065\uff14\001\002\000\042\003\uff1a\005\uff1a\006" +
    "\uff1a\013\uff1a\015\uff1a\016\uff1a\017\uff1a\021\uff1a\024\uff1a" +
    "\025\uff1a\050\uff1a\054\uff1a\056\uff1a\060\uff1a\064\uff1a\065" +
    "\uff1a\001\002\000\042\003\uff17\005\uff17\006\uff17\013\uff17" +
    "\015\uff17\016\uff17\017\uff17\021\uff17\024\uff17\025\uff17\050" +
    "\uff17\054\uff17\056\uff17\060\uff17\064\uff17\065\uff17\001\002" +
    "\000\042\003\uff15\005\uff15\006\uff15\013\uff15\015\uff15\016" +
    "\uff15\017\uff15\021\uff15\024\uff15\025\uff15\050\uff15\054\uff15" +
    "\056\uff15\060\uff15\064\uff15\065\uff15\001\002\000\004\024" +
    "\u0102\001\002\000\004\064\u0103\001\002\000\004\062\u0104" +
    "\001\002\000\040\005\ufe1b\006\ufe1b\013\ufe1b\015\ufe1b\016" +
    "\ufe1b\017\ufe1b\021\ufe1b\024\ufe1b\025\ufe1b\050\ufe1b\054\ufe1b" +
    "\056\ufe1b\060\ufe1b\064\ufe1b\065\ufe1b\001\002\000\004\021" +
    "\ufe05\001\002\000\004\021\ufdff\001\002\000\004\021\ufe00" +
    "\001\002\000\030\003\061\005\050\006\011\013\057\017" +
    "\044\025\062\050\055\054\040\060\056\064\046\065\063" +
    "\001\002\000\004\062\u010a\001\002\000\010\003\uffda\033" +
    "\uffda\060\uffda\001\002\000\020\002\uff44\003\uff44\006\uff44" +
    "\031\uff44\033\uff44\060\uff44\064\uff44\001\002\000\020\002" +
    "\uff4d\003\uff4d\006\uff4d\031\uff4d\033\uff4d\060\uff4d\064\uff4d" +
    "\001\002\000\004\014\u010e\001\002\000\004\062\u010f\001" +
    "\002\000\030\005\050\006\u011a\013\057\015\u0112\016\u0110" +
    "\017\044\025\062\050\055\054\040\064\046\065\063\001" +
    "\002\000\004\062\u0159\001\002\000\032\005\050\006\u011a" +
    "\013\057\015\u0112\016\u0110\017\044\025\062\050\055\054" +
    "\040\060\ufeee\064\046\065\063\001\002\000\012\026\067" +
    "\027\073\064\070\065\063\001\002\000\032\005\050\006" +
    "\u011a\013\057\015\u0112\016\u0110\017\044\025\062\050\055" +
    "\054\040\060\ufef1\064\046\065\063\001\002\000\032\005" +
    "\050\006\u011a\013\057\015\u0112\016\u0110\017\044\025\062" +
    "\050\055\054\040\060\ufef0\064\046\065\063\001\002\000" +
    "\032\005\050\006\u011a\013\057\015\u0112\016\u0110\017\044" +
    "\025\062\050\055\054\040\060\ufeed\064\046\065\063\001" +
    "\002\000\032\005\050\006\u011a\013\057\015\u0112\016\u0110" +
    "\017\044\025\062\050\055\054\040\060\ufef2\064\046\065" +
    "\063\001\002\000\032\005\050\006\u011a\013\057\015\u0112" +
    "\016\u0110\017\044\025\062\050\055\054\040\060\ufef3\064" +
    "\046\065\063\001\002\000\032\005\050\006\u011a\013\057" +
    "\015\u0112\016\u0110\017\044\025\062\050\055\054\040\060" +
    "\ufeef\064\046\065\063\001\002\000\004\060\u011f\001\002" +
    "\000\004\062\u011d\001\002\000\032\005\050\006\u011a\013" +
    "\057\015\u0112\016\u0110\017\044\025\062\050\055\054\040" +
    "\060\ufef4\064\046\065\063\001\002\000\004\060\ufefe\001" +
    "\002\000\032\005\050\006\u011a\013\057\015\u0112\016\u0110" +
    "\017\044\025\062\050\055\054\040\060\ufef5\064\046\065" +
    "\063\001\002\000\004\060\ufef6\001\002\000\004\013\u0120" +
    "\001\002\000\004\062\u0121\001\002\000\034\003\uff00\005" +
    "\uff00\006\uff00\013\uff00\015\uff00\016\uff00\017\uff00\025\uff00" +
    "\050\uff00\054\uff00\060\uff00\064\uff00\065\uff00\001\002\000" +
    "\004\060\ufefa\001\002\000\004\060\ufefd\001\002\000\004" +
    "\060\ufefc\001\002\000\004\060\ufef7\001\002\000\004\060" +
    "\ufef9\001\002\000\004\060\ufefb\001\002\000\004\014\u012a" +
    "\001\002\000\004\060\ufeeb\001\002\000\004\062\u012b\001" +
    "\002\000\030\005\050\006\u0136\013\057\015\u012e\016\u012c" +
    "\017\044\025\062\050\055\054\040\064\046\065\063\001" +
    "\002\000\004\062\u0143\001\002\000\032\005\050\006\u0136" +
    "\013\057\015\u012e\016\u012c\017\044\025\062\050\055\054" +
    "\040\060\ufec6\064\046\065\063\001\002\000\012\026\067" +
    "\027\073\064\070\065\063\001\002\000\032\005\050\006" +
    "\u0136\013\057\015\u012e\016\u012c\017\044\025\062\050\055" +
    "\054\040\060\ufec9\064\046\065\063\001\002\000\032\005" +
    "\050\006\u0136\013\057\015\u012e\016\u012c\017\044\025\062" +
    "\050\055\054\040\060\ufec8\064\046\065\063\001\002\000" +
    "\032\005\050\006\u0136\013\057\015\u012e\016\u012c\017\044" +
    "\025\062\050\055\054\040\060\ufec5\064\046\065\063\001" +
    "\002\000\032\005\050\006\u0136\013\057\015\u012e\016\u012c" +
    "\017\044\025\062\050\055\054\040\060\ufeca\064\046\065" +
    "\063\001\002\000\032\005\050\006\u0136\013\057\015\u012e" +
    "\016\u012c\017\044\025\062\050\055\054\040\060\ufecb\064" +
    "\046\065\063\001\002\000\032\005\050\006\u0136\013\057" +
    "\015\u012e\016\u012c\017\044\025\062\050\055\054\040\060" +
    "\ufec7\064\046\065\063\001\002\000\004\060\ufeff\001\002" +
    "\000\004\062\u0139\001\002\000\032\005\050\006\u0136\013" +
    "\057\015\u012e\016\u012c\017\044\025\062\050\055\054\040" +
    "\060\ufecc\064\046\065\063\001\002\000\004\060\ufed8\001" +
    "\002\000\032\005\050\006\u0136\013\057\015\u012e\016\u012c" +
    "\017\044\025\062\050\055\054\040\060\ufecd\064\046\065" +
    "\063\001\002\000\004\060\ufece\001\002\000\004\060\ufed2" +
    "\001\002\000\004\060\ufed7\001\002\000\004\060\ufed6\001" +
    "\002\000\004\060\ufecf\001\002\000\004\060\ufed1\001\002" +
    "\000\004\060\ufed5\001\002\000\004\060\ufed3\001\002\000" +
    "\004\060\ufed0\001\002\000\024\005\050\006\u014b\013\057" +
    "\017\044\025\062\050\055\054\040\064\046\065\063\001" +
    "\002\000\026\005\050\006\u014b\013\057\017\044\025\062" +
    "\050\055\054\040\060\ufeda\064\046\065\063\001\002\000" +
    "\026\005\050\006\u014b\013\057\017\044\025\062\050\055" +
    "\054\040\060\ufedd\064\046\065\063\001\002\000\026\005" +
    "\050\006\u014b\013\057\017\044\025\062\050\055\054\040" +
    "\060\ufedc\064\046\065\063\001\002\000\026\005\050\006" +
    "\u014b\013\057\017\044\025\062\050\055\054\040\060\ufed9" +
    "\064\046\065\063\001\002\000\026\005\050\006\u014b\013" +
    "\057\017\044\025\062\050\055\054\040\060\ufede\064\046" +
    "\065\063\001\002\000\026\005\050\006\u014b\013\057\017" +
    "\044\025\062\050\055\054\040\060\ufedf\064\046\065\063" +
    "\001\002\000\026\005\050\006\u014b\013\057\017\044\025" +
    "\062\050\055\054\040\060\ufedb\064\046\065\063\001\002" +
    "\000\004\062\u014f\001\002\000\026\005\050\006\u014b\013" +
    "\057\017\044\025\062\050\055\054\040\060\ufee0\064\046" +
    "\065\063\001\002\000\004\060\ufed4\001\002\000\004\060" +
    "\ufeea\001\002\000\026\005\050\006\u014b\013\057\017\044" +
    "\025\062\050\055\054\040\060\ufee1\064\046\065\063\001" +
    "\002\000\004\060\ufee2\001\002\000\004\060\ufee6\001\002" +
    "\000\004\060\ufee9\001\002\000\004\060\ufee8\001\002\000" +
    "\004\060\ufee3\001\002\000\004\060\ufee5\001\002\000\004" +
    "\060\ufee7\001\002\000\004\060\ufee4\001\002\000\004\060" +
    "\ufef8\001\002\000\024\005\050\006\u014b\013\057\017\044" +
    "\025\062\050\055\054\040\064\046\065\063\001\002\000" +
    "\004\060\ufeec\001\002\000\004\062\u015e\001\002\000\004" +
    "\062\u015d\001\002\000\010\003\uffdb\033\uffdb\060\uffdb\001" +
    "\002\000\010\003\uffd9\033\uffd9\060\uffd9\001\002\000\016" +
    "\035\116\036\114\037\112\040\110\041\111\042\115\001" +
    "\002\000\024\035\116\036\114\037\112\040\110\041\111" +
    "\042\115\050\364\064\070\065\063\001\002\000\042\003" +
    "\uff1b\005\uff1b\006\uff1b\013\uff1b\015\uff1b\016\uff1b\017\uff1b" +
    "\021\uff1b\024\uff1b\025\uff1b\050\uff1b\054\uff1b\056\uff1b\060" +
    "\uff1b\064\uff1b\065\uff1b\001\002\000\010\003\u0166\033\026" +
    "\060\u0165\001\002\000\010\003\u0166\033\026\060\u0165\001" +
    "\002\000\020\002\uff45\003\uff45\006\uff45\031\uff45\033\uff45" +
    "\060\uff45\064\uff45\001\002\000\006\003\u0290\034\u0291\001" +
    "\002\000\014\030\u016a\031\u016c\032\u016e\034\u016d\062\u016b" +
    "\001\002\000\010\003\u0166\033\026\060\u0165\001\002\000" +
    "\020\002\uffd0\003\uffd0\006\uffd0\031\uffd0\033\uffd0\060\uffd0" +
    "\064\uffd0\001\002\000\020\002\uffd2\003\uffd2\006\uffd2\031" +
    "\uffd2\033\uffd2\060\uffd2\064\uffd2\001\002\000\004\064\u01c7" +
    "\001\002\000\010\003\u0166\033\026\060\u0165\001\002\000" +
    "\004\064\u01c1\001\002\000\004\062\u01c0\001\002\000\004" +
    "\064\u016f\001\002\000\004\062\u0170\001\002\000\014\003" +
    "\u0174\006\011\033\u0177\060\u0176\064\u0173\001\002\000\014" +
    "\003\u0174\006\011\033\u0177\060\u0176\064\u0173\001\002\000" +
    "\012\003\ufff1\031\ufff1\033\ufff1\060\ufff1\001\002\000\004" +
    "\055\u01b0\001\002\000\010\031\u016c\032\u01ad\062\u01ac\001" +
    "\002\000\014\003\u0174\006\011\033\u0177\060\u0176\064\u0173" +
    "\001\002\000\006\003\u01a7\032\u01a8\001\002\000\006\003" +
    "\u017b\031\u017c\001\002\000\014\003\u0174\006\011\033\u0177" +
    "\060\u0176\064\u0173\001\002\000\012\003\uffcb\031\uffcb\033" +
    "\uffcb\060\uffcb\001\002\000\012\003\uffcd\031\uffcd\033\uffcd" +
    "\060\uffcd\001\002\000\004\064\u01a2\001\002\000\006\003" +
    "\u017e\064\u017d\001\002\000\006\003\u019a\050\u019b\001\002" +
    "\000\004\050\u017f\001\002\000\012\012\u0182\051\u0181\052" +
    "\u0183\064\u0180\001\002\000\004\055\u0197\001\002\000\010" +
    "\003\uff3f\055\uff3f\062\uff3f\001\002\000\004\064\u0193\001" +
    "\002\000\006\012\u0188\064\u0187\001\002\000\004\062\u0185" +
    "\001\002\000\030\003\061\005\050\006\011\013\057\017" +
    "\044\025\062\050\055\054\040\060\056\064\046\065\063" +
    "\001\002\000\016\003\uffeb\006\uffeb\031\uffeb\033\uffeb\060" +
    "\uffeb\064\uffeb\001\002\000\004\055\u0190\001\002\000\004" +
    "\064\u0189\001\002\000\004\055\u018a\001\002\000\010\007" +
    "\u018b\010\u018e\011\u018c\001\002\000\016\012\uff2c\047\uff2c" +
    "\051\uff2c\052\uff2c\062\uff2c\064\uff2c\001\002\000\016\012" +
    "\uff2d\047\uff2d\051\uff2d\052\uff2d\062\uff2d\064\uff2d\001\002" +
    "\000\012\012\u0182\051\u0181\052\u0183\064\u0180\001\002\000" +
    "\016\012\uff2b\047\uff2b\051\uff2b\052\uff2b\062\uff2b\064\uff2b" +
    "\001\002\000\010\003\uff41\055\uff41\062\uff41\001\002\000" +
    "\010\007\u018b\010\u018e\011\u018c\001\002\000\012\012\u0182" +
    "\051\u0181\052\u0183\064\u0180\001\002\000\010\003\uff40\055" +
    "\uff40\062\uff40\001\002\000\004\055\u0194\001\002\000\010" +
    "\007\u018b\010\u018e\011\u018c\001\002\000\012\012\u0182\051" +
    "\u0181\052\u0183\064\u0180\001\002\000\010\003\uff43\055\uff43" +
    "\062\uff43\001\002\000\010\007\u018b\010\u018e\011\u018c\001" +
    "\002\000\012\012\u0182\051\u0181\052\u0183\064\u0180\001\002" +
    "\000\010\003\uff42\055\uff42\062\uff42\001\002\000\012\012" +
    "\u0182\051\u0181\052\u0183\064\u0180\001\002\000\012\012\u0182" +
    "\051\u0181\052\u0183\064\u0180\001\002\000\004\062\u019d\001" +
    "\002\000\030\003\061\005\050\006\011\013\057\017\044" +
    "\025\062\050\055\054\040\060\056\064\046\065\063\001" +
    "\002\000\016\003\uffee\006\uffee\031\uffee\033\uffee\060\uffee" +
    "\064\uffee\001\002\000\004\062\u01a0\001\002\000\030\003" +
    "\061\005\050\006\011\013\057\017\044\025\062\050\055" +
    "\054\040\060\056\064\046\065\063\001\002\000\016\003" +
    "\uffea\006\uffea\031\uffea\033\uffea\060\uffea\064\uffea\001\002" +
    "\000\004\050\u01a3\001\002\000\012\012\u0182\051\u0181\052" +
    "\u0183\064\u0180\001\002\000\004\062\u01a5\001\002\000\030" +
    "\003\061\005\050\006\011\013\057\017\044\025\062\050" +
    "\055\054\040\060\056\064\046\065\063\001\002\000\016" +
    "\003\uffec\006\uffec\031\uffec\033\uffec\060\uffec\064\uffec\001" +
    "\002\000\004\062\u01aa\001\002\000\004\062\u01a9\001\002" +
    "\000\012\003\uffde\031\uffde\033\uffde\060\uffde\001\002\000" +
    "\012\003\uffdc\031\uffdc\033\uffdc\060\uffdc\001\002\000\012" +
    "\003\uffcc\031\uffcc\033\uffcc\060\uffcc\001\002\000\014\003" +
    "\u0174\006\011\033\u0177\060\u0176\064\u0173\001\002\000\004" +
    "\062\u01ae\001\002\000\012\003\uffdd\031\uffdd\033\uffdd\060" +
    "\uffdd\001\002\000\012\003\uffca\031\uffca\033\uffca\060\uffca" +
    "\001\002\000\010\007\u01b1\010\u01b4\011\u01b2\001\002\000" +
    "\006\047\u01bc\062\uff2c\001\002\000\006\047\u01b9\062\uff2d" +
    "\001\002\000\004\062\u01b8\001\002\000\006\047\u01b5\062" +
    "\uff2b\001\002\000\006\026\067\027\073\001\002\000\004" +
    "\062\u01b7\001\002\000\014\003\uffc8\006\uffc8\033\uffc8\060" +
    "\uffc8\064\uffc8\001\002\000\014\003\uffc9\006\uffc9\033\uffc9" +
    "\060\uffc9\064\uffc9\001\002\000\004\063\u01ba\001\002\000" +
    "\004\062\u01bb\001\002\000\014\003\uffc7\006\uffc7\033\uffc7" +
    "\060\uffc7\064\uffc7\001\002\000\004\065\u01bd\001\002\000" +
    "\004\062\u01be\001\002\000\014\003\uffc6\006\uffc6\033\uffc6" +
    "\060\uffc6\064\uffc6\001\002\000\012\003\uffce\031\uffce\033" +
    "\uffce\060\uffce\001\002\000\020\002\uffe3\003\uffe3\006\uffe3" +
    "\031\uffe3\033\uffe3\060\uffe3\064\uffe3\001\002\000\004\050" +
    "\u01c2\001\002\000\012\012\u0182\051\u0181\052\u0183\064\u0180" +
    "\001\002\000\004\062\u01c4\001\002\000\030\003\061\005" +
    "\050\006\011\013\057\017\044\025\062\050\055\054\040" +
    "\060\056\064\046\065\063\001\002\000\016\003\uffed\006" +
    "\uffed\031\uffed\033\uffed\060\uffed\064\uffed\001\002\000\020" +
    "\002\uffcf\003\uffcf\006\uffcf\031\uffcf\033\uffcf\060\uffcf\064" +
    "\uffcf\001\002\000\004\050\u01c8\001\002\000\012\012\u0182" +
    "\051\u0181\052\u0183\064\u0180\001\002\000\004\055\u01ca\001" +
    "\002\000\010\007\u018b\010\u018e\011\u018c\001\002\000\004" +
    "\062\u01cc\001\002\000\030\003\u01d9\005\050\006\011\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046" +
    "\065\063\001\002\000\030\003\u01d9\005\050\006\011\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046" +
    "\065\063\001\002\000\030\003\u01d9\005\050\006\011\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046" +
    "\065\063\001\002\000\030\003\u01d9\005\050\006\011\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046" +
    "\065\063\001\002\000\004\064\u0262\001\002\000\030\003" +
    "\u01d9\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055" +
    "\054\040\060\u01d7\064\046\065\063\001\002\000\030\003" +
    "\u01d9\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055" +
    "\054\040\060\u01d7\064\046\065\063\001\002\000\030\003" +
    "\u01d9\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055" +
    "\054\040\060\u01d7\064\046\065\063\001\002\000\030\003" +
    "\u01d9\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055" +
    "\054\040\060\u01d7\064\046\065\063\001\002\000\012\003" +
    "\ufff7\031\ufff7\033\ufff7\060\ufff7\001\002\000\012\003\uffbc" +
    "\031\uffbc\033\uffbc\060\uffbc\001\002\000\006\003\u025b\030" +
    "\u025a\001\002\000\012\026\067\027\073\064\070\065\063" +
    "\001\002\000\006\030\u01ff\062\u0200\001\002\000\004\022" +
    "\u01df\001\002\000\030\003\u01d9\005\050\006\011\013\u01d8" +
    "\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046\065" +
    "\063\001\002\000\030\003\u01d9\005\050\006\011\013\u01d8" +
    "\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046\065" +
    "\063\001\002\000\012\003\uffc5\031\uffc5\033\uffc5\060\uffc5" +
    "\001\002\000\012\003\uffbd\031\uffbd\033\uffbd\060\uffbd\001" +
    "\002\000\012\026\067\027\073\064\070\065\063\001\002" +
    "\000\004\062\u01e1\001\002\000\026\005\050\006\u01e9\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff6c\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff6f\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff6b\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff69\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff6d\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff6e\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\030\005\050\006\u01e9\013\u01d8\017" +
    "\u01d0\021\uff6a\025\u01da\050\055\054\040\056\u01ec\064\046" +
    "\065\063\001\002\000\004\062\u01f6\001\002\000\004\021" +
    "\u01f4\001\002\000\030\005\050\006\u01e9\013\u01d8\017\u01d0" +
    "\021\uff70\025\u01da\050\055\054\040\056\u01ec\064\046\065" +
    "\063\001\002\000\010\017\u01ef\025\u01ee\030\u01ed\001\002" +
    "\000\004\062\u01f2\001\002\000\004\062\u01f1\001\002\000" +
    "\004\062\u01f0\001\002\000\004\021\uff66\001\002\000\004" +
    "\021\uff68\001\002\000\004\021\uff67\001\002\000\004\021" +
    "\uff7a\001\002\000\004\062\u01f5\001\002\000\042\003\uff7b" +
    "\005\uff7b\006\uff7b\013\uff7b\015\uff7b\016\uff7b\017\uff7b\021" +
    "\uff7b\024\uff7b\025\uff7b\050\uff7b\054\uff7b\056\uff7b\060\uff7b" +
    "\064\uff7b\065\uff7b\001\002\000\030\005\050\006\u01e9\013" +
    "\u01d8\017\u01d0\021\uff71\025\u01da\050\055\054\040\056\u01ec" +
    "\064\046\065\063\001\002\000\004\021\uff72\001\002\000" +
    "\004\021\uff74\001\002\000\004\021\uff78\001\002\000\004" +
    "\021\uff77\001\002\000\004\021\uff73\001\002\000\004\021" +
    "\uff75\001\002\000\004\021\uff79\001\002\000\004\021\uff76" +
    "\001\002\000\004\062\u0202\001\002\000\030\003\u01d9\005" +
    "\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\060\u01d7\064\046\065\063\001\002\000\012\003\uffbb\031" +
    "\uffbb\033\uffbb\060\uffbb\001\002\000\012\003\uffe0\031\uffe0" +
    "\033\uffe0\060\uffe0\001\002\000\004\014\u0204\001\002\000" +
    "\004\062\u0205\001\002\000\032\005\050\006\u0210\013\u01d8" +
    "\015\u0207\016\u0206\017\u01d0\025\u01da\050\055\054\040\056" +
    "\u0212\064\046\065\063\001\002\000\004\062\u0258\001\002" +
    "\000\012\026\067\027\073\064\070\065\063\001\002\000" +
    "\034\005\050\006\u0210\013\u01d8\015\u0207\016\u0206\017\u01d0" +
    "\025\u01da\050\055\054\040\056\u0212\060\uffab\064\046\065" +
    "\063\001\002\000\034\005\050\006\u0210\013\u01d8\015\u0207" +
    "\016\u0206\017\u01d0\025\u01da\050\055\054\040\056\u0212\060" +
    "\uffae\064\046\065\063\001\002\000\034\005\050\006\u0210" +
    "\013\u01d8\015\u0207\016\u0206\017\u01d0\025\u01da\050\055\054" +
    "\040\056\u0212\060\uffaa\064\046\065\063\001\002\000\034" +
    "\005\050\006\u0210\013\u01d8\015\u0207\016\u0206\017\u01d0\025" +
    "\u01da\050\055\054\040\056\u0212\060\uffa7\064\046\065\063" +
    "\001\002\000\034\005\050\006\u0210\013\u01d8\015\u0207\016" +
    "\u0206\017\u01d0\025\u01da\050\055\054\040\056\u0212\060\uffac" +
    "\064\046\065\063\001\002\000\034\005\050\006\u0210\013" +
    "\u01d8\015\u0207\016\u0206\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u0212\060\uffad\064\046\065\063\001\002\000\034\005" +
    "\050\006\u0210\013\u01d8\015\u0207\016\u0206\017\u01d0\025\u01da" +
    "\050\055\054\040\056\u0212\060\uffa9\064\046\065\063\001" +
    "\002\000\004\060\u0218\001\002\000\004\062\u0216\001\002" +
    "\000\034\005\050\006\u0210\013\u01d8\015\u0207\016\u0206\017" +
    "\u01d0\025\u01da\050\055\054\040\056\u0212\060\uffa8\064\046" +
    "\065\063\001\002\000\004\030\u0213\001\002\000\004\062" +
    "\u0214\001\002\000\004\060\uffa6\001\002\000\004\060\uffb2" +
    "\001\002\000\034\005\050\006\u0210\013\u01d8\015\u0207\016" +
    "\u0206\017\u01d0\025\u01da\050\055\054\040\056\u0212\060\uffaf" +
    "\064\046\065\063\001\002\000\004\060\uffb0\001\002\000" +
    "\004\013\u0219\001\002\000\004\062\u021a\001\002\000\042" +
    "\003\uffba\005\uffba\006\uffba\013\uffba\015\uffba\016\uffba\017" +
    "\uffba\021\uffba\024\uffba\025\uffba\050\uffba\054\uffba\056\uffba" +
    "\060\uffba\064\uffba\065\uffba\001\002\000\004\060\uffb4\001" +
    "\002\000\004\060\uffb7\001\002\000\004\060\uffb6\001\002" +
    "\000\004\060\uffb1\001\002\000\004\060\uffb3\001\002\000" +
    "\004\060\uffb8\001\002\000\004\060\uffb5\001\002\000\004" +
    "\014\u0224\001\002\000\004\060\uffa4\001\002\000\004\062" +
    "\u0225\001\002\000\032\005\050\006\u0230\013\u01d8\015\u0227" +
    "\016\u0226\017\u01d0\025\u01da\050\055\054\040\056\u0232\064" +
    "\046\065\063\001\002\000\004\062\u0240\001\002\000\012" +
    "\026\067\027\073\064\070\065\063\001\002\000\034\005" +
    "\050\006\u0230\013\u01d8\015\u0227\016\u0226\017\u01d0\025\u01da" +
    "\050\055\054\040\056\u0232\060\uff81\064\046\065\063\001" +
    "\002\000\034\005\050\006\u0230\013\u01d8\015\u0227\016\u0226" +
    "\017\u01d0\025\u01da\050\055\054\040\056\u0232\060\uff84\064" +
    "\046\065\063\001\002\000\034\005\050\006\u0230\013\u01d8" +
    "\015\u0227\016\u0226\017\u01d0\025\u01da\050\055\054\040\056" +
    "\u0232\060\uff80\064\046\065\063\001\002\000\034\005\050" +
    "\006\u0230\013\u01d8\015\u0227\016\u0226\017\u01d0\025\u01da\050" +
    "\055\054\040\056\u0232\060\uff7d\064\046\065\063\001\002" +
    "\000\034\005\050\006\u0230\013\u01d8\015\u0227\016\u0226\017" +
    "\u01d0\025\u01da\050\055\054\040\056\u0232\060\uff82\064\046" +
    "\065\063\001\002\000\034\005\050\006\u0230\013\u01d8\015" +
    "\u0227\016\u0226\017\u01d0\025\u01da\050\055\054\040\056\u0232" +
    "\060\uff83\064\046\065\063\001\002\000\034\005\050\006" +
    "\u0230\013\u01d8\015\u0227\016\u0226\017\u01d0\025\u01da\050\055" +
    "\054\040\056\u0232\060\uff7f\064\046\065\063\001\002\000" +
    "\004\060\uffb9\001\002\000\004\062\u0236\001\002\000\034" +
    "\005\050\006\u0230\013\u01d8\015\u0227\016\u0226\017\u01d0\025" +
    "\u01da\050\055\054\040\056\u0232\060\uff7e\064\046\065\063" +
    "\001\002\000\004\030\u0233\001\002\000\004\062\u0234\001" +
    "\002\000\004\060\uff7c\001\002\000\004\060\uff88\001\002" +
    "\000\034\005\050\006\u0230\013\u01d8\015\u0227\016\u0226\017" +
    "\u01d0\025\u01da\050\055\054\040\056\u0232\060\uff85\064\046" +
    "\065\063\001\002\000\004\060\uff86\001\002\000\004\060" +
    "\uff8a\001\002\000\004\060\uff8f\001\002\000\004\060\uff8e" +
    "\001\002\000\004\060\uff87\001\002\000\004\060\uff89\001" +
    "\002\000\004\060\uff90\001\002\000\004\060\uff8d\001\002" +
    "\000\004\060\uff8b\001\002\000\026\005\050\006\u0249\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\056\u024b\064\046" +
    "\065\063\001\002\000\004\060\uff8c\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff96\064\046\065\063\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff99\064\046\065\063\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff95\064\046\065\063\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff92\064\046\065\063\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff97\064\046\065\063\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff98\064\046\065\063\001\002\000\030\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\060\uff94\064\046\065\063\001\002\000\004\062" +
    "\u024f\001\002\000\030\005\050\006\u0249\013\u01d8\017\u01d0" +
    "\025\u01da\050\055\054\040\056\u024b\060\uff93\064\046\065" +
    "\063\001\002\000\004\030\u024c\001\002\000\004\062\u024d" +
    "\001\002\000\004\060\uff91\001\002\000\004\060\uff9d\001" +
    "\002\000\030\005\050\006\u0249\013\u01d8\017\u01d0\025\u01da" +
    "\050\055\054\040\056\u024b\060\uff9a\064\046\065\063\001" +
    "\002\000\004\060\uff9b\001\002\000\004\060\uff9f\001\002" +
    "\000\004\060\uffa2\001\002\000\004\060\uffa1\001\002\000" +
    "\004\060\uff9c\001\002\000\004\060\uff9e\001\002\000\004" +
    "\060\uffa3\001\002\000\004\060\uffa0\001\002\000\026\005" +
    "\050\006\u0249\013\u01d8\017\u01d0\025\u01da\050\055\054\040" +
    "\056\u024b\064\046\065\063\001\002\000\004\060\uffa5\001" +
    "\002\000\004\062\u025d\001\002\000\004\062\u025c\001\002" +
    "\000\012\003\uffdf\031\uffdf\033\uffdf\060\uffdf\001\002\000" +
    "\012\003\uffe1\031\uffe1\033\uffe1\060\uffe1\001\002\000\012" +
    "\003\uffbe\031\uffbe\033\uffbe\060\uffbe\001\002\000\012\003" +
    "\uffc2\031\uffc2\033\uffc2\060\uffc2\001\002\000\012\003\uffc1" +
    "\031\uffc1\033\uffc1\060\uffc1\001\002\000\012\003\uffc4\031" +
    "\uffc4\033\uffc4\060\uffc4\001\002\000\004\047\u0263\001\002" +
    "\000\006\064\070\065\063\001\002\000\004\020\u0265\001" +
    "\002\000\010\050\055\064\070\065\063\001\002\000\026" +
    "\005\050\006\u0272\013\u01d8\017\u01d0\025\u01da\050\055\054" +
    "\040\056\u0275\064\046\065\063\001\002\000\020\023\u0268" +
    "\035\116\036\114\037\112\040\110\041\111\042\115\001" +
    "\002\000\006\036\322\065\321\001\002\000\004\062\u026a" +
    "\001\002\000\026\005\050\006\u0272\013\u01d8\017\u01d0\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff54\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff57\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff53\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff59\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff55\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff56\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff52\025" +
    "\u01da\050\055\054\040\056\u0275\064\046\065\063\001\002" +
    "\000\004\062\u0280\001\002\000\004\024\u027d\001\002\000" +
    "\030\005\050\006\u0272\013\u01d8\017\u01d0\024\uff58\025\u01da" +
    "\050\055\054\040\056\u0275\064\046\065\063\001\002\000" +
    "\010\017\u0278\025\u0277\030\u0276\001\002\000\004\062\u027b" +
    "\001\002\000\004\062\u027a\001\002\000\004\062\u0279\001" +
    "\002\000\004\024\uff4f\001\002\000\004\024\uff51\001\002" +
    "\000\004\024\uff50\001\002\000\004\024\uff62\001\002\000" +
    "\004\064\u027e\001\002\000\004\062\u027f\001\002\000\042" +
    "\003\uff65\005\uff65\006\uff65\013\uff65\015\uff65\016\uff65\017" +
    "\uff65\021\uff65\024\uff65\025\uff65\050\uff65\054\uff65\056\uff65" +
    "\060\uff65\064\uff65\065\uff65\001\002\000\030\005\050\006" +
    "\u0272\013\u01d8\017\u01d0\024\uff5a\025\u01da\050\055\054\040" +
    "\056\u0275\064\046\065\063\001\002\000\004\024\uff5b\001" +
    "\002\000\004\024\uff5c\001\002\000\004\024\uff60\001\002" +
    "\000\004\024\uff5f\001\002\000\004\024\uff63\001\002\000" +
    "\004\024\uff5d\001\002\000\004\024\uff61\001\002\000\004" +
    "\024\uff5e\001\002\000\004\024\u028a\001\002\000\004\064" +
    "\u028b\001\002\000\004\062\u028c\001\002\000\042\003\uff64" +
    "\005\uff64\006\uff64\013\uff64\015\uff64\016\uff64\017\uff64\021" +
    "\uff64\024\uff64\025\uff64\050\uff64\054\uff64\056\uff64\060\uff64" +
    "\064\uff64\065\uff64\001\002\000\012\003\uffbf\031\uffbf\033" +
    "\uffbf\060\uffbf\001\002\000\012\003\uffc0\031\uffc0\033\uffc0" +
    "\060\uffc0\001\002\000\012\003\uffc3\031\uffc3\033\uffc3\060" +
    "\uffc3\001\002\000\004\062\u0293\001\002\000\004\062\u0292" +
    "\001\002\000\020\002\uffe4\003\uffe4\006\uffe4\031\uffe4\033" +
    "\uffe4\060\uffe4\064\uffe4\001\002\000\020\002\uffe2\003\uffe2" +
    "\006\uffe2\031\uffe2\033\uffe2\060\uffe2\064\uffe2\001\002\000" +
    "\020\002\uffd1\003\uffd1\006\uffd1\031\uffd1\033\uffd1\060\uffd1" +
    "\064\uffd1\001\002\000\020\002\uffd3\003\uffd3\006\uffd3\031" +
    "\uffd3\033\uffd3\060\uffd3\064\uffd3\001\002\000\020\002\uff4c" +
    "\003\uff4c\006\uff4c\031\uff4c\033\uff4c\060\uff4c\064\uff4c\001" +
    "\002\000\020\002\uff48\003\uff48\006\uff48\031\uff48\033\uff48" +
    "\060\uff48\064\uff48\001\002\000\006\004\u029a\057\u0299\001" +
    "\002\000\004\050\u02a2\001\002\000\004\050\u029b\001\002" +
    "\000\006\063\u029d\064\u029c\001\002\000\004\051\u02a0\001" +
    "\002\000\004\051\u029e\001\002\000\004\062\u029f\001\002" +
    "\000\042\003\uff02\005\uff02\006\uff02\013\uff02\015\uff02\016" +
    "\uff02\017\uff02\021\uff02\024\uff02\025\uff02\050\uff02\054\uff02" +
    "\056\uff02\060\uff02\064\uff02\065\uff02\001\002\000\004\062" +
    "\u02a1\001\002\000\042\003\uff01\005\uff01\006\uff01\013\uff01" +
    "\015\uff01\016\uff01\017\uff01\021\uff01\024\uff01\025\uff01\050" +
    "\uff01\054\uff01\056\uff01\060\uff01\064\uff01\065\uff01\001\002" +
    "\000\004\051\u02a3\001\002\000\004\062\u02a4\001\002\000" +
    "\042\003\uff31\005\uff31\006\uff31\013\uff31\015\uff31\016\uff31" +
    "\017\uff31\021\uff31\024\uff31\025\uff31\050\uff31\054\uff31\056" +
    "\uff31\060\uff31\064\uff31\065\uff31\001\002\000\020\002\uff4b" +
    "\003\uff4b\006\uff4b\031\uff4b\033\uff4b\060\uff4b\064\uff4b\001" +
    "\002\000\004\064\u02c8\001\002\000\012\050\u02bf\051\u02be" +
    "\064\070\065\063\001\002\000\006\052\u02b9\062\u02b8\001" +
    "\002\000\020\005\u02ac\026\067\027\073\050\055\063\u02b0" +
    "\064\u02ad\065\063\001\002\000\004\062\u02b7\001\002\000" +
    "\020\035\116\036\114\037\112\040\110\041\111\042\115" +
    "\062\uff3d\001\002\000\004\053\u02b2\001\002\000\026\035" +
    "\uff25\036\uff25\037\uff25\040\uff25\041\uff25\042\uff25\050\u02a7" +
    "\062\uff25\064\070\065\063\001\002\000\042\003\uff33\005" +
    "\uff33\006\uff33\013\uff33\015\uff33\016\uff33\017\uff33\021\uff33" +
    "\024\uff33\025\uff33\050\uff33\054\uff33\056\uff33\060\uff33\064" +
    "\uff33\065\uff33\001\002\000\042\003\uff34\005\uff34\006\uff34" +
    "\013\uff34\015\uff34\016\uff34\017\uff34\021\uff34\024\uff34\025" +
    "\uff34\050\uff34\054\uff34\056\uff34\060\uff34\064\uff34\065\uff34" +
    "\001\002\000\004\062\uff3c\001\002\000\004\062\uff3e\001" +
    "\002\000\004\057\u02b3\001\002\000\004\050\u02b4\001\002" +
    "\000\004\051\u02b5\001\002\000\004\062\u02b6\001\002\000" +
    "\042\003\uff32\005\uff32\006\uff32\013\uff32\015\uff32\016\uff32" +
    "\017\uff32\021\uff32\024\uff32\025\uff32\050\uff32\054\uff32\056" +
    "\uff32\060\uff32\064\uff32\065\uff32\001\002\000\042\003\uff35" +
    "\005\uff35\006\uff35\013\uff35\015\uff35\016\uff35\017\uff35\021" +
    "\uff35\024\uff35\025\uff35\050\uff35\054\uff35\056\uff35\060\uff35" +
    "\064\uff35\065\uff35\001\002\000\042\003\uff05\005\uff05\006" +
    "\uff05\013\uff05\015\uff05\016\uff05\017\uff05\021\uff05\024\uff05" +
    "\025\uff05\050\uff05\054\uff05\056\uff05\060\uff05\064\uff05\065" +
    "\uff05\001\002\000\006\064\070\065\063\001\002\000\004" +
    "\062\u02bb\001\002\000\042\003\uff06\005\uff06\006\uff06\013" +
    "\uff06\015\uff06\016\uff06\017\uff06\021\uff06\024\uff06\025\uff06" +
    "\050\uff06\054\uff06\056\uff06\060\uff06\064\uff06\065\uff06\001" +
    "\002\000\006\052\u02b9\062\uff09\001\002\000\004\062\uff0a" +
    "\001\002\000\004\062\u02c7\001\002\000\006\064\070\065" +
    "\063\001\002\000\006\052\u02b9\062\u02c1\001\002\000\042" +
    "\003\uff08\005\uff08\006\uff08\013\uff08\015\uff08\016\uff08\017" +
    "\uff08\021\uff08\024\uff08\025\uff08\050\uff08\054\uff08\056\uff08" +
    "\060\uff08\064\uff08\065\uff08\001\002\000\004\062\u02c3\001" +
    "\002\000\042\003\uff03\005\uff03\006\uff03\013\uff03\015\uff03" +
    "\016\uff03\017\uff03\021\uff03\024\uff03\025\uff03\050\uff03\054" +
    "\uff03\056\uff03\060\uff03\064\uff03\065\uff03\001\002\000\004" +
    "\051\u02c5\001\002\000\004\062\u02c6\001\002\000\042\003" +
    "\uff04\005\uff04\006\uff04\013\uff04\015\uff04\016\uff04\017\uff04" +
    "\021\uff04\024\uff04\025\uff04\050\uff04\054\uff04\056\uff04\060" +
    "\uff04\064\uff04\065\uff04\001\002\000\042\003\uff07\005\uff07" +
    "\006\uff07\013\uff07\015\uff07\016\uff07\017\uff07\021\uff07\024" +
    "\uff07\025\uff07\050\uff07\054\uff07\056\uff07\060\uff07\064\uff07" +
    "\065\uff07\001\002\000\004\047\u02c9\001\002\000\016\005" +
    "\u02cc\026\067\027\073\063\u02b0\064\070\065\063\001\002" +
    "\000\004\062\u02d2\001\002\000\004\062\uff3d\001\002\000" +
    "\004\053\u02cd\001\002\000\004\057\u02ce\001\002\000\004" +
    "\050\u02cf\001\002\000\004\051\u02d0\001\002\000\004\062" +
    "\u02d1\001\002\000\042\003\uff30\005\uff30\006\uff30\013\uff30" +
    "\015\uff30\016\uff30\017\uff30\021\uff30\024\uff30\025\uff30\050" +
    "\uff30\054\uff30\056\uff30\060\uff30\064\uff30\065\uff30\001\002" +
    "\000\042\003\uff36\005\uff36\006\uff36\013\uff36\015\uff36\016" +
    "\uff36\017\uff36\021\uff36\024\uff36\025\uff36\050\uff36\054\uff36" +
    "\056\uff36\060\uff36\064\uff36\065\uff36\001\002\000\004\047" +
    "\u02d4\001\002\000\006\064\070\065\063\001\002\000\004" +
    "\020\u02d6\001\002\000\010\050\055\064\070\065\063\001" +
    "\002\000\026\005\050\006\u02e3\013\u02e5\017\044\025\u02e6" +
    "\050\055\054\040\056\u02e8\064\046\065\063\001\002\000" +
    "\020\023\u02d9\035\116\036\114\037\112\040\110\041\111" +
    "\042\115\001\002\000\006\036\322\065\321\001\002\000" +
    "\004\062\u02db\001\002\000\026\005\050\006\u02e3\013\u02e5" +
    "\017\044\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044" +
    "\024\ufeb8\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044" +
    "\024\ufeb4\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044" +
    "\024\ufeb3\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044" +
    "\024\ufeb5\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044" +
    "\024\ufeb6\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044" +
    "\024\ufeb2\025\u02e6\050\055\054\040\056\u02e8\064\046\065" +
    "\063\001\002\000\004\024\u0364\001\002\000\004\062\u0362" +
    "\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044\024" +
    "\ufeb1\025\u02e6\050\055\054\040\056\u02e8\064\046\065\063" +
    "\001\002\000\012\026\067\027\073\064\070\065\063\001" +
    "\002\000\004\022\u02ec\001\002\000\030\005\050\006\u02e3" +
    "\013\u02e5\017\044\024\ufeb7\025\u02e6\050\055\054\040\056" +
    "\u02e8\064\046\065\063\001\002\000\004\017\u02e9\001\002" +
    "\000\004\062\u02ea\001\002\000\004\024\ufeb0\001\002\000" +
    "\004\024\ufec1\001\002\000\012\026\067\027\073\064\070" +
    "\065\063\001\002\000\004\062\u02ee\001\002\000\026\005" +
    "\050\006\u02f5\013\u02e5\017\044\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\030\005\050\006" +
    "\u02f5\013\u02e5\017\044\021\ufe65\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\030\005\050\006" +
    "\u02f5\013\u02e5\017\044\021\ufe62\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\030\005\050\006" +
    "\u02f5\013\u02e5\017\044\021\ufe61\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\030\005\050\006" +
    "\u02f5\013\u02e5\017\044\021\ufe63\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\030\005\050\006" +
    "\u02f5\013\u02e5\017\044\021\ufe64\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\030\005\050\006" +
    "\u02f5\013\u02e5\017\044\021\ufe60\025\u02e6\050\055\054\040" +
    "\056\u02f9\064\046\065\063\001\002\000\004\062\u0302\001" +
    "\002\000\004\021\u0300\001\002\000\030\005\050\006\u02f5" +
    "\013\u02e5\017\044\021\ufe5e\025\u02e6\050\055\054\040\056" +
    "\u02f9\064\046\065\063\001\002\000\030\005\050\006\u02f5" +
    "\013\u02e5\017\044\021\ufe5f\025\u02e6\050\055\054\040\056" +
    "\u02f9\064\046\065\063\001\002\000\006\017\u02fb\025\u02fa" +
    "\001\002\000\004\062\u02fd\001\002\000\004\062\u02fc\001" +
    "\002\000\004\021\ufe5c\001\002\000\004\021\ufe5d\001\002" +
    "\000\004\021\ufe68\001\002\000\004\021\ufe69\001\002\000" +
    "\004\062\u0301\001\002\000\040\005\ufe70\006\ufe70\013\ufe70" +
    "\015\ufe70\016\ufe70\017\ufe70\021\ufe70\024\ufe70\025\ufe70\050" +
    "\ufe70\054\ufe70\056\ufe70\060\ufe70\064\ufe70\065\ufe70\001\002" +
    "\000\030\005\050\006\u02f5\013\u02e5\017\044\021\ufe66\025" +
    "\u02e6\050\055\054\040\056\u02f9\064\046\065\063\001\002" +
    "\000\004\021\ufe67\001\002\000\004\021\ufe6a\001\002\000" +
    "\004\021\ufe6e\001\002\000\004\021\ufe6d\001\002\000\004" +
    "\021\ufe6b\001\002\000\004\021\ufe6c\001\002\000\004\021" +
    "\ufe6f\001\002\000\004\014\u030b\001\002\000\004\062\u030c" +
    "\001\002\000\032\005\050\006\u0316\013\u02e5\015\u030f\016" +
    "\u030d\017\044\025\u02e6\050\055\054\040\056\u0319\064\046" +
    "\065\063\001\002\000\004\062\u035f\001\002\000\034\005" +
    "\050\006\u0316\013\u02e5\015\u030f\016\u030d\017\044\025\u02e6" +
    "\050\055\054\040\056\u0319\060\ufe9d\064\046\065\063\001" +
    "\002\000\012\026\067\027\073\064\070\065\063\001\002" +
    "\000\034\005\050\006\u0316\013\u02e5\015\u030f\016\u030d\017" +
    "\044\025\u02e6\050\055\054\040\056\u0319\060\ufea0\064\046" +
    "\065\063\001\002\000\034\005\050\006\u0316\013\u02e5\015" +
    "\u030f\016\u030d\017\044\025\u02e6\050\055\054\040\056\u0319" +
    "\060\ufe9f\064\046\065\063\001\002\000\034\005\050\006" +
    "\u0316\013\u02e5\015\u030f\016\u030d\017\044\025\u02e6\050\055" +
    "\054\040\056\u0319\060\ufea1\064\046\065\063\001\002\000" +
    "\034\005\050\006\u0316\013\u02e5\015\u030f\016\u030d\017\044" +
    "\025\u02e6\050\055\054\040\056\u0319\060\ufea2\064\046\065" +
    "\063\001\002\000\034\005\050\006\u0316\013\u02e5\015\u030f" +
    "\016\u030d\017\044\025\u02e6\050\055\054\040\056\u0319\060" +
    "\ufe9e\064\046\065\063\001\002\000\004\060\u0320\001\002" +
    "\000\004\062\u031e\001\002\000\034\005\050\006\u0316\013" +
    "\u02e5\015\u030f\016\u030d\017\044\025\u02e6\050\055\054\040" +
    "\056\u0319\060\ufe9c\064\046\065\063\001\002\000\034\005" +
    "\050\006\u0316\013\u02e5\015\u030f\016\u030d\017\044\025\u02e6" +
    "\050\055\054\040\056\u0319\060\ufea3\064\046\065\063\001" +
    "\002\000\004\017\u031a\001\002\000\004\062\u031b\001\002" +
    "\000\004\060\ufe9b\001\002\000\004\060\ufead\001\002\000" +
    "\004\060\ufea6\001\002\000\034\005\050\006\u0316\013\u02e5" +
    "\015\u030f\016\u030d\017\044\025\u02e6\050\055\054\040\056" +
    "\u0319\060\ufea4\064\046\065\063\001\002\000\004\060\ufea5" +
    "\001\002\000\004\013\u0321\001\002\000\004\062\u0322\001" +
    "\002\000\040\005\ufeaf\006\ufeaf\013\ufeaf\015\ufeaf\016\ufeaf" +
    "\017\ufeaf\021\ufeaf\024\ufeaf\025\ufeaf\050\ufeaf\054\ufeaf\056" +
    "\ufeaf\060\ufeaf\064\ufeaf\065\ufeaf\001\002\000\004\060\ufea9" +
    "\001\002\000\004\060\ufeac\001\002\000\004\060\ufeab\001" +
    "\002\000\004\060\ufea8\001\002\000\004\060\ufeaa\001\002" +
    "\000\004\014\u032a\001\002\000\004\060\ufe99\001\002\000" +
    "\004\062\u032b\001\002\000\032\005\050\006\u0334\013\u02e5" +
    "\015\u032e\016\u032c\017\044\025\u02e6\050\055\054\040\056" +
    "\u0338\064\046\065\063\001\002\000\004\062\u0346\001\002" +
    "\000\034\005\050\006\u0334\013\u02e5\015\u032e\016\u032c\017" +
    "\044\025\u02e6\050\055\054\040\056\u0338\060\ufe86\064\046" +
    "\065\063\001\002\000\012\026\067\027\073\064\070\065" +
    "\063\001\002\000\034\005\050\006\u0334\013\u02e5\015\u032e" +
    "\016\u032c\017\044\025\u02e6\050\055\054\040\056\u0338\060" +
    "\ufe89\064\046\065\063\001\002\000\034\005\050\006\u0334" +
    "\013\u02e5\015\u032e\016\u032c\017\044\025\u02e6\050\055\054" +
    "\040\056\u0338\060\ufe88\064\046\065\063\001\002\000\034" +
    "\005\050\006\u0334\013\u02e5\015\u032e\016\u032c\017\044\025" +
    "\u02e6\050\055\054\040\056\u0338\060\ufe8a\064\046\065\063" +
    "\001\002\000\034\005\050\006\u0334\013\u02e5\015\u032e\016" +
    "\u032c\017\044\025\u02e6\050\055\054\040\056\u0338\060\ufe8b" +
    "\064\046\065\063\001\002\000\034\005\050\006\u0334\013" +
    "\u02e5\015\u032e\016\u032c\017\044\025\u02e6\050\055\054\040" +
    "\056\u0338\060\ufe87\064\046\065\063\001\002\000\004\062" +
    "\u033d\001\002\000\034\005\050\006\u0334\013\u02e5\015\u032e" +
    "\016\u032c\017\044\025\u02e6\050\055\054\040\056\u0338\060" +
    "\ufe85\064\046\065\063\001\002\000\004\060\ufeae\001\002" +
    "\000\034\005\050\006\u0334\013\u02e5\015\u032e\016\u032c\017" +
    "\044\025\u02e6\050\055\054\040\056\u0338\060\ufe8c\064\046" +
    "\065\063\001\002\000\004\017\u0339\001\002\000\004\062" +
    "\u033a\001\002\000\004\060\ufe84\001\002\000\004\060\ufe98" +
    "\001\002\000\004\060\ufe8f\001\002\000\034\005\050\006" +
    "\u0334\013\u02e5\015\u032e\016\u032c\017\044\025\u02e6\050\055" +
    "\054\040\056\u0338\060\ufe8d\064\046\065\063\001\002\000" +
    "\004\060\ufe8e\001\002\000\004\060\ufe92\001\002\000\004" +
    "\060\ufe97\001\002\000\004\060\ufe96\001\002\000\004\060" +
    "\ufe91\001\002\000\004\060\ufe95\001\002\000\004\060\ufe93" +
    "\001\002\000\004\060\ufe90\001\002\000\026\005\050\006" +
    "\u034d\013\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351" +
    "\064\046\065\063\001\002\000\030\005\050\006\u034d\013" +
    "\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe73" +
    "\064\046\065\063\001\002\000\030\005\050\006\u034d\013" +
    "\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe76" +
    "\064\046\065\063\001\002\000\030\005\050\006\u034d\013" +
    "\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe75" +
    "\064\046\065\063\001\002\000\030\005\050\006\u034d\013" +
    "\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe77" +
    "\064\046\065\063\001\002\000\030\005\050\006\u034d\013" +
    "\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe78" +
    "\064\046\065\063\001\002\000\030\005\050\006\u034d\013" +
    "\u02e5\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe74" +
    "\064\046\065\063\001\002\000\004\062\u0356\001\002\000" +
    "\004\060\ufe94\001\002\000\030\005\050\006\u034d\013\u02e5" +
    "\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe72\064" +
    "\046\065\063\001\002\000\030\005\050\006\u034d\013\u02e5" +
    "\017\044\025\u02e6\050\055\054\040\056\u0351\060\ufe79\064" +
    "\046\065\063\001\002\000\004\017\u0352\001\002\000\004" +
    "\062\u0353\001\002\000\004\060\ufe71\001\002\000\004\060" +
    "\ufe83\001\002\000\004\060\ufe7c\001\002\000\030\005\050" +
    "\006\u034d\013\u02e5\017\044\025\u02e6\050\055\054\040\056" +
    "\u0351\060\ufe7a\064\046\065\063\001\002\000\004\060\ufe7b" +
    "\001\002\000\004\060\ufe7f\001\002\000\004\060\ufe82\001" +
    "\002\000\004\060\ufe81\001\002\000\004\060\ufe7e\001\002" +
    "\000\004\060\ufe80\001\002\000\004\060\ufe7d\001\002\000" +
    "\004\060\ufea7\001\002\000\026\005\050\006\u034d\013\u02e5" +
    "\017\044\025\u02e6\050\055\054\040\056\u0351\064\046\065" +
    "\063\001\002\000\004\060\ufe9a\001\002\000\004\024\ufebb" +
    "\001\002\000\030\005\050\006\u02e3\013\u02e5\017\044\024" +
    "\ufeb9\025\u02e6\050\055\054\040\056\u02e8\064\046\065\063" +
    "\001\002\000\004\024\ufeba\001\002\000\004\064\u0365\001" +
    "\002\000\004\062\u0366\001\002\000\042\003\ufec4\005\ufec4" +
    "\006\ufec4\013\ufec4\015\ufec4\016\ufec4\017\ufec4\021\ufec4\024" +
    "\ufec4\025\ufec4\050\ufec4\054\ufec4\056\ufec4\060\ufec4\064\ufec4" +
    "\065\ufec4\001\002\000\004\024\ufebc\001\002\000\004\024" +
    "\ufec0\001\002\000\004\024\ufebf\001\002\000\004\024\ufebd" +
    "\001\002\000\004\024\ufebe\001\002\000\004\024\ufec2\001" +
    "\002\000\004\024\u036e\001\002\000\004\064\u036f\001\002" +
    "\000\004\062\u0370\001\002\000\042\003\ufec3\005\ufec3\006" +
    "\ufec3\013\ufec3\015\ufec3\016\ufec3\017\ufec3\021\ufec3\024\ufec3" +
    "\025\ufec3\050\ufec3\054\ufec3\056\ufec3\060\ufec3\064\ufec3\065" +
    "\ufec3\001\002\000\020\002\uff47\003\uff47\006\uff47\031\uff47" +
    "\033\uff47\060\uff47\064\uff47\001\002\000\020\002\uff49\003" +
    "\uff49\006\uff49\031\uff49\033\uff49\060\uff49\064\uff49\001\002" +
    "\000\020\002\uff4a\003\uff4a\006\uff4a\031\uff4a\033\uff4a\060" +
    "\uff4a\064\uff4a\001\002\000\006\047\u0376\055\u0375\001\002" +
    "\000\010\007\u018b\010\u018e\011\u018c\001\002\000\016\026" +
    "\067\027\073\050\055\063\u02b0\064\070\065\063\001\002" +
    "\000\004\062\u0379\001\002\000\042\003\uff37\005\uff37\006" +
    "\uff37\013\uff37\015\uff37\016\uff37\017\uff37\021\uff37\024\uff37" +
    "\025\uff37\050\uff37\054\uff37\056\uff37\060\uff37\064\uff37\065" +
    "\uff37\001\002\000\042\003\uff38\005\uff38\006\uff38\013\uff38" +
    "\015\uff38\016\uff38\017\uff38\021\uff38\024\uff38\025\uff38\050" +
    "\uff38\054\uff38\056\uff38\060\uff38\064\uff38\065\uff38\001\002" +
    "\000\006\047\u037c\062\u037b\001\002\000\042\003\uff3b\005" +
    "\uff3b\006\uff3b\013\uff3b\015\uff3b\016\uff3b\017\uff3b\021\uff3b" +
    "\024\uff3b\025\uff3b\050\uff3b\054\uff3b\056\uff3b\060\uff3b\064" +
    "\uff3b\065\uff3b\001\002\000\014\026\067\027\073\063\u02b0" +
    "\064\u02ad\065\063\001\002\000\004\062\u037f\001\002\000" +
    "\042\003\uff39\005\uff39\006\uff39\013\uff39\015\uff39\016\uff39" +
    "\017\uff39\021\uff39\024\uff39\025\uff39\050\uff39\054\uff39\056" +
    "\uff39\060\uff39\064\uff39\065\uff39\001\002\000\042\003\uff3a" +
    "\005\uff3a\006\uff3a\013\uff3a\015\uff3a\016\uff3a\017\uff3a\021" +
    "\uff3a\024\uff3a\025\uff3a\050\uff3a\054\uff3a\056\uff3a\060\uff3a" +
    "\064\uff3a\065\uff3a\001\002\000\020\002\uff4e\003\uff4e\006" +
    "\uff4e\031\uff4e\033\uff4e\060\uff4e\064\uff4e\001\002\000\004" +
    "\051\u0389\001\002\000\006\003\u0384\051\u0383\001\002\000" +
    "\004\062\u0387\001\002\000\004\062\u0385\001\002\000\030" +
    "\003\061\005\050\006\011\013\057\017\044\025\062\050" +
    "\055\054\040\060\056\064\046\065\063\001\002\000\004" +
    "\002\uffe5\001\002\000\030\003\061\005\050\006\011\013" +
    "\057\017\044\025\062\050\055\054\040\060\056\064\046" +
    "\065\063\001\002\000\004\002\uffe9\001\002\000\004\062" +
    "\u038a\001\002\000\030\003\061\005\050\006\011\013\057" +
    "\017\044\025\062\050\055\054\040\060\056\064\046\065" +
    "\063\001\002\000\004\002\uffe6\001\002\000\006\003\u039f" +
    "\064\u039e\001\002\000\004\064\u0395\001\002\000\006\003" +
    "\u0390\064\u038f\001\002\000\004\062\u0393\001\002\000\004" +
    "\062\u0391\001\002\000\014\003\u0174\006\011\033\u0177\060" +
    "\u0176\064\u0173\001\002\000\012\003\uffef\031\uffef\033\uffef" +
    "\060\uffef\001\002\000\014\003\u0174\006\011\033\u0177\060" +
    "\u0176\064\u0173\001\002\000\012\003\ufff2\031\ufff2\033\ufff2" +
    "\060\ufff2\001\002\000\006\050\u0397\062\u0396\001\002\000" +
    "\014\003\u0174\006\011\033\u0177\060\u0176\064\u0173\001\002" +
    "\000\012\012\u0182\051\u0181\052\u0183\064\u0180\001\002\000" +
    "\006\055\u0399\062\u01a5\001\002\000\010\007\u018b\010\u018e" +
    "\011\u018c\001\002\000\004\062\u039b\001\002\000\030\003" +
    "\u01d9\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055" +
    "\054\040\060\u01d7\064\046\065\063\001\002\000\012\003" +
    "\ufff6\031\ufff6\033\ufff6\060\ufff6\001\002\000\012\003\ufff0" +
    "\031\ufff0\033\ufff0\060\ufff0\001\002\000\006\003\u03a6\050" +
    "\u03a7\001\002\000\004\050\u03a0\001\002\000\012\012\u0182" +
    "\051\u0181\052\u0183\064\u0180\001\002\000\004\055\u03a2\001" +
    "\002\000\010\007\u018b\010\u018e\011\u018c\001\002\000\004" +
    "\062\u03a4\001\002\000\030\003\u01d9\005\050\006\011\013" +
    "\u01d8\017\u01d0\025\u01da\050\055\054\040\060\u01d7\064\046" +
    "\065\063\001\002\000\012\003\ufff5\031\ufff5\033\ufff5\060" +
    "\ufff5\001\002\000\012\012\u0182\051\u0181\052\u0183\064\u0180" +
    "\001\002\000\012\012\u0182\051\u0181\052\u0183\064\u0180\001" +
    "\002\000\006\003\u03a9\055\u03aa\001\002\000\010\007\u018b" +
    "\010\u018e\011\u018c\001\002\000\010\007\u018b\010\u018e\011" +
    "\u018c\001\002\000\004\062\u03ac\001\002\000\030\003\u01d9" +
    "\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055\054" +
    "\040\060\u01d7\064\046\065\063\001\002\000\012\003\ufff8" +
    "\031\ufff8\033\ufff8\060\ufff8\001\002\000\004\062\u03af\001" +
    "\002\000\030\003\u01d9\005\050\006\011\013\u01d8\017\u01d0" +
    "\025\u01da\050\055\054\040\060\u01d7\064\046\065\063\001" +
    "\002\000\012\003\ufff3\031\ufff3\033\ufff3\060\ufff3\001\002" +
    "\000\004\055\u03b2\001\002\000\010\007\u018b\010\u018e\011" +
    "\u018c\001\002\000\004\062\u03b4\001\002\000\030\003\u01d9" +
    "\005\050\006\011\013\u01d8\017\u01d0\025\u01da\050\055\054" +
    "\040\060\u01d7\064\046\065\063\001\002\000\012\003\ufff4" +
    "\031\ufff4\033\ufff4\060\ufff4\001\002\000\004\050\u03b9\001" +
    "\002\000\010\003\023\031\027\033\026\001\002\000\004" +
    "\002\uffd4\001\002\000\004\051\u03ba\001\002\000\004\062" +
    "\u03bb\001\002\000\030\003\061\005\050\006\011\013\057" +
    "\017\044\025\062\050\055\054\040\060\056\064\046\065" +
    "\063\001\002\000\004\002\uffe8\001\002\000\004\002\uffd6" +
    "\001\002\000\004\002\uffd8\001\002\000\010\003\023\031" +
    "\027\033\026\001\002\000\004\002\uffff\001\002\000\004" +
    "\062\u03c2\001\002\000\010\003\023\031\027\033\026\001" +
    "\002\000\004\002\ufffd\001\002\000\004\002\ufffb\001\002" +
    "\000\010\003\023\031\027\033\026\001\002\000\004\064" +
    "\u03c7\001\002\000\004\062\u03c8\001\002\000\010\003\023" +
    "\031\027\033\026\001\002\000\004\002\ufffe\001\002\000" +
    "\004\002\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u03c8\000\010\002\007\051\003\061\005\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\003\u03c3\043\024" +
    "\071\020\072\027\073\021\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\003\023\043\024\071\020" +
    "\072\027\073\021\001\001\000\014\003\u03bd\043\024\071" +
    "\020\072\027\073\021\001\001\000\014\003\u03bc\043\024" +
    "\071\020\072\027\073\021\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\003\030\043\024\071\020\072\027\073" +
    "\021\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\005" +
    "\051\006\040\007\041\013\044\015\057\023\036\026\042" +
    "\027\052\032\046\035\050\045\053\061\063\001\001\000" +
    "\032\005\051\006\040\007\041\013\u037f\015\057\023\036" +
    "\026\042\027\052\032\046\035\050\045\053\061\063\001" +
    "\001\000\002\001\001\000\032\005\051\006\040\007\041" +
    "\013\u0372\015\057\023\036\026\042\027\052\032\046\035" +
    "\050\045\053\061\063\001\001\000\032\005\051\006\040" +
    "\007\041\013\u0371\015\057\023\036\026\042\027\052\032" +
    "\046\035\050\045\053\061\063\001\001\000\032\005\051" +
    "\006\040\007\041\013\u0370\015\057\023\036\026\042\027" +
    "\052\032\046\035\050\045\053\061\063\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\u02a7\001\001\000" +
    "\032\005\051\006\040\007\041\013\u02a4\015\057\023\036" +
    "\026\042\027\052\032\046\035\050\045\053\061\063\001" +
    "\001\000\002\001\001\000\032\005\051\006\040\007\041" +
    "\013\u0296\015\057\023\036\026\042\027\052\032\046\035" +
    "\050\045\053\061\063\001\001\000\032\005\051\006\040" +
    "\007\041\013\u0295\015\057\023\036\026\042\027\052\032" +
    "\046\035\050\045\053\061\063\001\001\000\004\036\315" +
    "\001\001\000\014\044\u0167\050\u0163\071\u0161\072\u0166\073" +
    "\u0162\001\001\000\004\027\u015e\001\001\000\002\001\001" +
    "\000\010\011\071\022\u010c\027\073\001\001\000\032\005" +
    "\051\006\040\007\041\013\u010b\015\057\023\036\026\042" +
    "\027\052\032\046\035\050\045\053\061\063\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\032" +
    "\005\051\006\040\007\041\013\064\015\057\023\036\026" +
    "\042\027\052\032\046\035\050\045\053\061\063\001\001" +
    "\000\002\001\001\000\010\011\071\022\070\027\073\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\024\074\001" +
    "\001\000\006\011\103\027\105\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\106\001\001\000\002\001\001\000\004\036\112\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\027\116\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\027\122\033\121\001\001\000\002\001\001\000" +
    "\004\034\124\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\027\122\033\126\001\001\000\002\001\001\000" +
    "\026\005\135\006\130\007\131\026\132\027\052\032\134" +
    "\035\136\041\143\052\141\060\137\001\001\000\026\005" +
    "\135\006\130\007\131\026\132\027\052\032\134\035\136" +
    "\041\u0106\052\141\060\137\001\001\000\026\005\135\006" +
    "\130\007\131\026\132\027\052\032\134\035\136\041\u0105" +
    "\052\141\060\137\001\001\000\026\005\135\006\130\007" +
    "\131\026\132\027\052\032\134\035\136\041\u0104\052\141" +
    "\060\137\001\001\000\002\001\001\000\026\005\135\006" +
    "\130\007\131\026\132\027\052\032\134\035\136\041\306" +
    "\052\141\060\137\001\001\000\026\005\135\006\130\007" +
    "\131\026\132\027\052\032\134\035\136\041\305\052\141" +
    "\060\137\001\001\000\026\005\135\006\130\007\131\026" +
    "\132\027\052\032\134\035\136\041\304\052\141\060\137" +
    "\001\001\000\026\005\135\006\130\007\131\026\132\027" +
    "\052\032\134\035\136\041\303\052\141\060\137\001\001" +
    "\000\002\001\001\000\026\005\135\006\130\007\131\026" +
    "\132\027\052\032\134\035\136\041\300\052\141\060\137" +
    "\001\001\000\010\011\071\022\151\027\073\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\162\006\156\007\157" +
    "\026\160\027\052\032\161\035\163\052\167\053\166\060" +
    "\164\001\001\000\002\001\001\000\012\011\071\022\211" +
    "\027\073\056\210\001\001\000\026\005\162\006\156\007" +
    "\157\026\160\027\052\032\161\035\163\052\167\053\207" +
    "\060\164\001\001\000\026\005\162\006\156\007\157\026" +
    "\160\027\052\032\161\035\163\052\167\053\206\060\164" +
    "\001\001\000\026\005\162\006\156\007\157\026\160\027" +
    "\052\032\161\035\163\052\167\053\205\060\164\001\001" +
    "\000\026\005\162\006\156\007\157\026\160\027\052\032" +
    "\161\035\163\052\167\053\204\060\164\001\001\000\026" +
    "\005\162\006\156\007\157\026\160\027\052\032\161\035" +
    "\163\052\167\053\203\060\164\001\001\000\026\005\162" +
    "\006\156\007\157\026\160\027\052\032\161\035\163\052" +
    "\167\053\202\060\164\001\001\000\026\005\162\006\156" +
    "\007\157\026\160\027\052\032\161\035\163\052\167\053" +
    "\201\060\164\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\162\006\156\007\157\026\160\027\052\032" +
    "\161\035\163\052\167\053\173\060\164\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\162\006\156\007\157\026\160\027\052\032" +
    "\161\035\163\052\167\053\200\060\164\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\223\006\216\007\217\026\220" +
    "\027\052\032\222\035\224\052\227\055\221\060\225\001" +
    "\001\000\002\001\001\000\012\011\071\022\211\027\073" +
    "\056\245\001\001\000\026\005\223\006\216\007\217\026" +
    "\220\027\052\032\222\035\224\052\227\055\244\060\225" +
    "\001\001\000\026\005\223\006\216\007\217\026\220\027" +
    "\052\032\222\035\224\052\227\055\243\060\225\001\001" +
    "\000\026\005\223\006\216\007\217\026\220\027\052\032" +
    "\222\035\224\052\227\055\242\060\225\001\001\000\002" +
    "\001\001\000\026\005\223\006\216\007\217\026\220\027" +
    "\052\032\222\035\224\052\227\055\241\060\225\001\001" +
    "\000\026\005\223\006\216\007\217\026\220\027\052\032" +
    "\222\035\224\052\227\055\240\060\225\001\001\000\026" +
    "\005\223\006\216\007\217\026\220\027\052\032\222\035" +
    "\224\052\227\055\237\060\225\001\001\000\026\005\223" +
    "\006\216\007\217\026\220\027\052\032\222\035\224\052" +
    "\227\055\236\060\225\001\001\000\002\001\001\000\026" +
    "\005\223\006\216\007\217\026\220\027\052\032\222\035" +
    "\224\052\227\055\233\060\225\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\223\006\216\007\217\026\220\027\052\032\222" +
    "\035\224\052\227\055\235\060\225\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\253\006\247" +
    "\007\250\026\251\027\052\032\252\035\254\052\257\054" +
    "\261\060\255\001\001\000\026\005\253\006\247\007\250" +
    "\026\251\027\052\032\252\035\254\052\257\054\275\060" +
    "\255\001\001\000\026\005\253\006\247\007\250\026\251" +
    "\027\052\032\252\035\254\052\257\054\274\060\255\001" +
    "\001\000\026\005\253\006\247\007\250\026\251\027\052" +
    "\032\252\035\254\052\257\054\273\060\255\001\001\000" +
    "\026\005\253\006\247\007\250\026\251\027\052\032\252" +
    "\035\254\052\257\054\272\060\255\001\001\000\026\005" +
    "\253\006\247\007\250\026\251\027\052\032\252\035\254" +
    "\052\257\054\271\060\255\001\001\000\026\005\253\006" +
    "\247\007\250\026\251\027\052\032\252\035\254\052\257" +
    "\054\270\060\255\001\001\000\026\005\253\006\247\007" +
    "\250\026\251\027\052\032\252\035\254\052\257\054\267" +
    "\060\255\001\001\000\002\001\001\000\026\005\253\006" +
    "\247\007\250\026\251\027\052\032\252\035\254\052\257" +
    "\054\264\060\255\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\253\006\247\007\250\026\251\027\052\032" +
    "\252\035\254\052\257\054\266\060\255\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\253\006\247\007\250\026" +
    "\251\027\052\032\252\035\254\052\257\054\277\060\255" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\135\006\130\007\131\026\132\027\052\032\134\035\136" +
    "\041\302\052\141\060\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\027\311\001\001\000" +
    "\002\001\001\000\006\027\314\035\313\001\001\000\026" +
    "\005\331\006\324\007\325\026\326\027\052\032\327\035" +
    "\332\052\335\057\u0100\060\333\001\001\000\004\036\315" +
    "\001\001\000\010\027\360\036\362\042\361\001\001\000" +
    "\004\025\317\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\331\006" +
    "\324\007\325\026\326\027\052\032\327\035\332\052\335" +
    "\057\330\060\333\001\001\000\026\005\331\006\324\007" +
    "\325\026\326\027\052\032\327\035\332\052\335\057\357" +
    "\060\333\001\001\000\026\005\331\006\324\007\325\026" +
    "\326\027\052\032\327\035\332\052\335\057\356\060\333" +
    "\001\001\000\026\005\331\006\324\007\325\026\326\027" +
    "\052\032\327\035\332\052\335\057\355\060\333\001\001" +
    "\000\026\005\331\006\324\007\325\026\326\027\052\032" +
    "\327\035\332\052\335\057\354\060\333\001\001\000\002" +
    "\001\001\000\026\005\331\006\324\007\325\026\326\027" +
    "\052\032\327\035\332\052\335\057\350\060\333\001\001" +
    "\000\026\005\331\006\324\007\325\026\326\027\052\032" +
    "\327\035\332\052\335\057\347\060\333\001\001\000\026" +
    "\005\331\006\324\007\325\026\326\027\052\032\327\035" +
    "\332\052\335\057\346\060\333\001\001\000\002\001\001" +
    "\000\026\005\331\006\324\007\325\026\326\027\052\032" +
    "\327\035\332\052\335\057\343\060\333\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\331" +
    "\006\324\007\325\026\326\027\052\032\327\035\332\052" +
    "\335\057\345\060\333\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\036\373\001\001\000\002\001\001\000\004\027\367" +
    "\001\001\000\004\027\364\001\001\000\004\036\365\001" +
    "\001\000\010\027\360\036\362\042\366\001\001\000\002" +
    "\001\001\000\010\027\360\036\362\042\370\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\027\360\036\362" +
    "\042\376\001\001\000\010\027\360\036\362\042\375\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\005\051\006\040\007" +
    "\041\013\u010a\015\057\023\036\026\042\027\052\032\046" +
    "\035\050\045\053\061\063\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\u0116\006\u0112\007" +
    "\u0113\015\u011a\016\u0118\023\u0110\026\u0114\027\052\032\u0115" +
    "\035\u0117\001\001\000\002\001\001\000\026\005\u0116\006" +
    "\u0112\007\u0113\015\u011a\016\u0157\023\u0110\026\u0114\027\052" +
    "\032\u0115\035\u0117\001\001\000\012\011\071\021\u0128\022" +
    "\u0127\027\073\001\001\000\026\005\u0116\006\u0112\007\u0113" +
    "\015\u011a\016\u0126\023\u0110\026\u0114\027\052\032\u0115\035" +
    "\u0117\001\001\000\026\005\u0116\006\u0112\007\u0113\015\u011a" +
    "\016\u0125\023\u0110\026\u0114\027\052\032\u0115\035\u0117\001" +
    "\001\000\026\005\u0116\006\u0112\007\u0113\015\u011a\016\u0124" +
    "\023\u0110\026\u0114\027\052\032\u0115\035\u0117\001\001\000" +
    "\026\005\u0116\006\u0112\007\u0113\015\u011a\016\u0123\023\u0110" +
    "\026\u0114\027\052\032\u0115\035\u0117\001\001\000\026\005" +
    "\u0116\006\u0112\007\u0113\015\u011a\016\u0122\023\u0110\026\u0114" +
    "\027\052\032\u0115\035\u0117\001\001\000\026\005\u0116\006" +
    "\u0112\007\u0113\015\u011a\016\u0121\023\u0110\026\u0114\027\052" +
    "\032\u0115\035\u0117\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u0116\006\u0112\007\u0113\015\u011a\016\u011b" +
    "\023\u0110\026\u0114\027\052\032\u0115\035\u0117\001\001\000" +
    "\002\001\001\000\026\005\u0116\006\u0112\007\u0113\015\u011a" +
    "\016\u011d\023\u0110\026\u0114\027\052\032\u0115\035\u0117\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u0132\006\u012e\007\u012f\015\u0136\020\u0134" +
    "\023\u012c\026\u0130\027\052\032\u0131\035\u0133\001\001\000" +
    "\002\001\001\000\026\005\u0132\006\u012e\007\u012f\015\u0136" +
    "\020\u0141\023\u012c\026\u0130\027\052\032\u0131\035\u0133\001" +
    "\001\000\012\011\071\021\u0140\022\u0127\027\073\001\001" +
    "\000\026\005\u0132\006\u012e\007\u012f\015\u0136\020\u013f\023" +
    "\u012c\026\u0130\027\052\032\u0131\035\u0133\001\001\000\026" +
    "\005\u0132\006\u012e\007\u012f\015\u0136\020\u013e\023\u012c\026" +
    "\u0130\027\052\032\u0131\035\u0133\001\001\000\026\005\u0132" +
    "\006\u012e\007\u012f\015\u0136\020\u013d\023\u012c\026\u0130\027" +
    "\052\032\u0131\035\u0133\001\001\000\026\005\u0132\006\u012e" +
    "\007\u012f\015\u0136\020\u013c\023\u012c\026\u0130\027\052\032" +
    "\u0131\035\u0133\001\001\000\026\005\u0132\006\u012e\007\u012f" +
    "\015\u0136\020\u013b\023\u012c\026\u0130\027\052\032\u0131\035" +
    "\u0133\001\001\000\026\005\u0132\006\u012e\007\u012f\015\u0136" +
    "\020\u013a\023\u012c\026\u0130\027\052\032\u0131\035\u0133\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u0132" +
    "\006\u012e\007\u012f\015\u0136\020\u0137\023\u012c\026\u0130\027" +
    "\052\032\u0131\035\u0133\001\001\000\002\001\001\000\026" +
    "\005\u0132\006\u012e\007\u012f\015\u0136\020\u0139\023\u012c\026" +
    "\u0130\027\052\032\u0131\035\u0133\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\u0148\006\u0144\007" +
    "\u0145\015\u014b\017\u014c\023\u0143\026\u0146\027\052\032\u0147" +
    "\035\u0149\001\001\000\026\005\u0148\006\u0144\007\u0145\015" +
    "\u014b\017\u0156\023\u0143\026\u0146\027\052\032\u0147\035\u0149" +
    "\001\001\000\026\005\u0148\006\u0144\007\u0145\015\u014b\017" +
    "\u0155\023\u0143\026\u0146\027\052\032\u0147\035\u0149\001\001" +
    "\000\026\005\u0148\006\u0144\007\u0145\015\u014b\017\u0154\023" +
    "\u0143\026\u0146\027\052\032\u0147\035\u0149\001\001\000\026" +
    "\005\u0148\006\u0144\007\u0145\015\u014b\017\u0153\023\u0143\026" +
    "\u0146\027\052\032\u0147\035\u0149\001\001\000\026\005\u0148" +
    "\006\u0144\007\u0145\015\u014b\017\u0152\023\u0143\026\u0146\027" +
    "\052\032\u0147\035\u0149\001\001\000\026\005\u0148\006\u0144" +
    "\007\u0145\015\u014b\017\u0151\023\u0143\026\u0146\027\052\032" +
    "\u0147\035\u0149\001\001\000\026\005\u0148\006\u0144\007\u0145" +
    "\015\u014b\017\u0150\023\u0143\026\u0146\027\052\032\u0147\035" +
    "\u0149\001\001\000\002\001\001\000\026\005\u0148\006\u0144" +
    "\007\u0145\015\u014b\017\u014d\023\u0143\026\u0146\027\052\032" +
    "\u0147\035\u0149\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u0148\006\u0144\007\u0145\015\u014b\017\u014f\023" +
    "\u0143\026\u0146\027\052\032\u0147\035\u0149\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u0148\006" +
    "\u0144\007\u0145\015\u014b\017\u0159\023\u0143\026\u0146\027\052" +
    "\032\u0147\035\u0149\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\036\u015f\001\001\000\010\027\360\036\362\042" +
    "\u0160\001\001\000\002\001\001\000\014\044\u0167\050\u0294" +
    "\071\u0161\072\u0166\073\u0162\001\001\000\014\044\u0167\050" +
    "\u0293\071\u0161\072\u0166\073\u0162\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\044\u0167\050" +
    "\u0168\071\u0161\072\u0166\073\u0162\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\044\u0167\050" +
    "\u01c5\071\u0161\072\u0166\073\u0162\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\014\u0171\031\u0170\046\u0178\061\u0177\073\u0174\001\001" +
    "\000\014\014\u01be\031\u0170\046\u0178\061\u0177\073\u0174\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\014\u01aa\031\u0170\046\u0178\061\u0177\073\u0174\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\014\u0179" +
    "\031\u0170\046\u0178\061\u0177\073\u0174\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\004\u0183\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\032\005\051\006" +
    "\040\007\041\013\u0185\015\057\023\036\026\042\027\052" +
    "\032\046\035\050\045\053\061\063\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\u018c\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\004\u018e\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\010\u0190\001\001\000\004\004\u0191\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\u0194" +
    "\001\001\000\004\004\u0195\001\001\000\002\001\001\000" +
    "\004\010\u0197\001\001\000\004\004\u0198\001\001\000\002" +
    "\001\001\000\004\004\u019e\001\001\000\004\004\u019b\001" +
    "\001\000\002\001\001\000\032\005\051\006\040\007\041" +
    "\013\u019d\015\057\023\036\026\042\027\052\032\046\035" +
    "\050\045\053\061\063\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\005\051\006\040\007\041\013\u01a0\015" +
    "\057\023\036\026\042\027\052\032\046\035\050\045\053" +
    "\061\063\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\u01a3\001\001\000\002\001\001\000\032\005\051" +
    "\006\040\007\041\013\u01a5\015\057\023\036\026\042\027" +
    "\052\032\046\035\050\045\053\061\063\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\014\u01ae" +
    "\031\u0170\046\u0178\061\u0177\073\u0174\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\u01b2" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u01b5\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\u01c2\001\001" +
    "\000\002\001\001\000\032\005\051\006\040\007\041\013" +
    "\u01c4\015\057\023\036\026\042\027\052\032\046\035\050" +
    "\045\053\061\063\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\004\u01c8\001\001\000\002" +
    "\001\001\000\004\010\u01ca\001\001\000\002\001\001\000" +
    "\032\005\u01d2\006\u01cd\007\u01ce\012\u01d4\027\052\032\u01d1" +
    "\035\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001" +
    "\001\000\032\005\u01d2\006\u01cd\007\u01ce\012\u028e\027\052" +
    "\032\u01d1\035\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104" +
    "\u01db\001\001\000\032\005\u01d2\006\u01cd\007\u01ce\012\u028d" +
    "\027\052\032\u01d1\035\u01d3\047\u01d5\061\u01da\074\u01d0\076" +
    "\u01cc\104\u01db\001\001\000\032\005\u01d2\006\u01cd\007\u01ce" +
    "\012\u028c\027\052\032\u01d1\035\u01d3\047\u01d5\061\u01da\074" +
    "\u01d0\076\u01cc\104\u01db\001\001\000\002\001\001\000\032" +
    "\005\u01d2\006\u01cd\007\u01ce\012\u0260\027\052\032\u01d1\035" +
    "\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001\001" +
    "\000\032\005\u01d2\006\u01cd\007\u01ce\012\u025f\027\052\032" +
    "\u01d1\035\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db" +
    "\001\001\000\032\005\u01d2\006\u01cd\007\u01ce\012\u025e\027" +
    "\052\032\u01d1\035\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc" +
    "\104\u01db\001\001\000\032\005\u01d2\006\u01cd\007\u01ce\012" +
    "\u025d\027\052\032\u01d1\035\u01d3\047\u01d5\061\u01da\074\u01d0" +
    "\076\u01cc\104\u01db\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\011\071\022\u0202\027\073" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\005" +
    "\u01d2\006\u01cd\007\u01ce\012\u01dd\027\052\032\u01d1\035\u01d3" +
    "\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001\001\000" +
    "\032\005\u01d2\006\u01cd\007\u01ce\012\u01dc\027\052\032\u01d1" +
    "\035\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\011\071" +
    "\022\u01df\027\073\001\001\000\002\001\001\000\026\005" +
    "\u01e6\006\u01e1\007\u01e3\027\052\032\u01e5\035\u01e7\074\u01e4" +
    "\075\u01e9\076\u01e2\104\u01ea\001\001\000\026\005\u01e6\006" +
    "\u01e1\007\u01e3\027\052\032\u01e5\035\u01e7\074\u01e4\075\u01fd" +
    "\076\u01e2\104\u01ea\001\001\000\026\005\u01e6\006\u01e1\007" +
    "\u01e3\027\052\032\u01e5\035\u01e7\074\u01e4\075\u01fc\076\u01e2" +
    "\104\u01ea\001\001\000\026\005\u01e6\006\u01e1\007\u01e3\027" +
    "\052\032\u01e5\035\u01e7\074\u01e4\075\u01fb\076\u01e2\104\u01ea" +
    "\001\001\000\026\005\u01e6\006\u01e1\007\u01e3\027\052\032" +
    "\u01e5\035\u01e7\074\u01e4\075\u01fa\076\u01e2\104\u01ea\001\001" +
    "\000\026\005\u01e6\006\u01e1\007\u01e3\027\052\032\u01e5\035" +
    "\u01e7\074\u01e4\075\u01f9\076\u01e2\104\u01ea\001\001\000\026" +
    "\005\u01e6\006\u01e1\007\u01e3\027\052\032\u01e5\035\u01e7\074" +
    "\u01e4\075\u01f8\076\u01e2\104\u01ea\001\001\000\026\005\u01e6" +
    "\006\u01e1\007\u01e3\027\052\032\u01e5\035\u01e7\074\u01e4\075" +
    "\u01f7\076\u01e2\104\u01ea\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u01e6\006\u01e1\007\u01e3\027\052\032" +
    "\u01e5\035\u01e7\074\u01e4\075\u01f2\076\u01e2\104\u01ea\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u01e6\006\u01e1\007\u01e3\027\052\032\u01e5" +
    "\035\u01e7\074\u01e4\075\u01f6\076\u01e2\104\u01ea\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\032\005\u01d2" +
    "\006\u01cd\007\u01ce\012\u0200\027\052\032\u01d1\035\u01d3\047" +
    "\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u020c\006\u0207\007\u0209\027\052\032\u020b" +
    "\035\u020d\074\u020a\076\u0208\100\u020e\104\u0210\001\001\000" +
    "\002\001\001\000\012\011\071\022\u0221\027\073\077\u0222" +
    "\001\001\000\026\005\u020c\006\u0207\007\u0209\027\052\032" +
    "\u020b\035\u020d\074\u020a\076\u0208\100\u0220\104\u0210\001\001" +
    "\000\026\005\u020c\006\u0207\007\u0209\027\052\032\u020b\035" +
    "\u020d\074\u020a\076\u0208\100\u021f\104\u0210\001\001\000\026" +
    "\005\u020c\006\u0207\007\u0209\027\052\032\u020b\035\u020d\074" +
    "\u020a\076\u0208\100\u021e\104\u0210\001\001\000\026\005\u020c" +
    "\006\u0207\007\u0209\027\052\032\u020b\035\u020d\074\u020a\076" +
    "\u0208\100\u021d\104\u0210\001\001\000\026\005\u020c\006\u0207" +
    "\007\u0209\027\052\032\u020b\035\u020d\074\u020a\076\u0208\100" +
    "\u021c\104\u0210\001\001\000\026\005\u020c\006\u0207\007\u0209" +
    "\027\052\032\u020b\035\u020d\074\u020a\076\u0208\100\u021b\104" +
    "\u0210\001\001\000\026\005\u020c\006\u0207\007\u0209\027\052" +
    "\032\u020b\035\u020d\074\u020a\076\u0208\100\u021a\104\u0210\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u020c" +
    "\006\u0207\007\u0209\027\052\032\u020b\035\u020d\074\u020a\076" +
    "\u0208\100\u0214\104\u0210\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u020c\006\u0207\007\u0209\027\052\032\u020b\035\u020d\074\u020a" +
    "\076\u0208\100\u0216\104\u0210\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u022c\006\u0227\007\u0229\027\052\032\u022b\035\u022d" +
    "\074\u022a\076\u0228\101\u022e\104\u0230\001\001\000\002\001" +
    "\001\000\012\011\071\022\u0221\027\073\077\u023e\001\001" +
    "\000\026\005\u022c\006\u0227\007\u0229\027\052\032\u022b\035" +
    "\u022d\074\u022a\076\u0228\101\u023d\104\u0230\001\001\000\026" +
    "\005\u022c\006\u0227\007\u0229\027\052\032\u022b\035\u022d\074" +
    "\u022a\076\u0228\101\u023c\104\u0230\001\001\000\026\005\u022c" +
    "\006\u0227\007\u0229\027\052\032\u022b\035\u022d\074\u022a\076" +
    "\u0228\101\u023b\104\u0230\001\001\000\026\005\u022c\006\u0227" +
    "\007\u0229\027\052\032\u022b\035\u022d\074\u022a\076\u0228\101" +
    "\u023a\104\u0230\001\001\000\026\005\u022c\006\u0227\007\u0229" +
    "\027\052\032\u022b\035\u022d\074\u022a\076\u0228\101\u0239\104" +
    "\u0230\001\001\000\026\005\u022c\006\u0227\007\u0229\027\052" +
    "\032\u022b\035\u022d\074\u022a\076\u0228\101\u0238\104\u0230\001" +
    "\001\000\026\005\u022c\006\u0227\007\u0229\027\052\032\u022b" +
    "\035\u022d\074\u022a\076\u0228\101\u0237\104\u0230\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u022c\006\u0227" +
    "\007\u0229\027\052\032\u022b\035\u022d\074\u022a\076\u0228\101" +
    "\u0234\104\u0230\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u022c\006" +
    "\u0227\007\u0229\027\052\032\u022b\035\u022d\074\u022a\076\u0228" +
    "\101\u0236\104\u0230\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u0246\006\u0241\007\u0243\027\052" +
    "\032\u0245\035\u0247\074\u0244\076\u0242\102\u0240\104\u0249\001" +
    "\001\000\002\001\001\000\026\005\u0246\006\u0241\007\u0243" +
    "\027\052\032\u0245\035\u0247\074\u0244\076\u0242\102\u0256\104" +
    "\u0249\001\001\000\026\005\u0246\006\u0241\007\u0243\027\052" +
    "\032\u0245\035\u0247\074\u0244\076\u0242\102\u0255\104\u0249\001" +
    "\001\000\026\005\u0246\006\u0241\007\u0243\027\052\032\u0245" +
    "\035\u0247\074\u0244\076\u0242\102\u0254\104\u0249\001\001\000" +
    "\026\005\u0246\006\u0241\007\u0243\027\052\032\u0245\035\u0247" +
    "\074\u0244\076\u0242\102\u0253\104\u0249\001\001\000\026\005" +
    "\u0246\006\u0241\007\u0243\027\052\032\u0245\035\u0247\074\u0244" +
    "\076\u0242\102\u0252\104\u0249\001\001\000\026\005\u0246\006" +
    "\u0241\007\u0243\027\052\032\u0245\035\u0247\074\u0244\076\u0242" +
    "\102\u0251\104\u0249\001\001\000\026\005\u0246\006\u0241\007" +
    "\u0243\027\052\032\u0245\035\u0247\074\u0244\076\u0242\102\u0250" +
    "\104\u0249\001\001\000\002\001\001\000\026\005\u0246\006" +
    "\u0241\007\u0243\027\052\032\u0245\035\u0247\074\u0244\076\u0242" +
    "\102\u024d\104\u0249\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u0246" +
    "\006\u0241\007\u0243\027\052\032\u0245\035\u0247\074\u0244\076" +
    "\u0242\102\u024f\104\u0249\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u0246\006\u0241\007\u0243\027\052\032\u0245\035" +
    "\u0247\074\u0244\076\u0242\102\u0258\104\u0249\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\u0263\001\001\000\002\001\001\000\006\027\u0266" +
    "\035\u0265\001\001\000\026\005\u026f\006\u026a\007\u026c\027" +
    "\052\032\u026e\035\u0270\074\u026d\076\u026b\103\u0288\104\u0273" +
    "\001\001\000\004\036\315\001\001\000\004\025\u0268\001" +
    "\001\000\002\001\001\000\026\005\u026f\006\u026a\007\u026c" +
    "\027\052\032\u026e\035\u0270\074\u026d\076\u026b\103\u0272\104" +
    "\u0273\001\001\000\026\005\u026f\006\u026a\007\u026c\027\052" +
    "\032\u026e\035\u0270\074\u026d\076\u026b\103\u0287\104\u0273\001" +
    "\001\000\026\005\u026f\006\u026a\007\u026c\027\052\032\u026e" +
    "\035\u0270\074\u026d\076\u026b\103\u0286\104\u0273\001\001\000" +
    "\026\005\u026f\006\u026a\007\u026c\027\052\032\u026e\035\u0270" +
    "\074\u026d\076\u026b\103\u0285\104\u0273\001\001\000\026\005" +
    "\u026f\006\u026a\007\u026c\027\052\032\u026e\035\u0270\074\u026d" +
    "\076\u026b\103\u0284\104\u0273\001\001\000\026\005\u026f\006" +
    "\u026a\007\u026c\027\052\032\u026e\035\u0270\074\u026d\076\u026b" +
    "\103\u0283\104\u0273\001\001\000\026\005\u026f\006\u026a\007" +
    "\u026c\027\052\032\u026e\035\u0270\074\u026d\076\u026b\103\u0282" +
    "\104\u0273\001\001\000\026\005\u026f\006\u026a\007\u026c\027" +
    "\052\032\u026e\035\u0270\074\u026d\076\u026b\103\u0281\104\u0273" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u026f\006\u026a\007\u026c\027\052\032\u026e\035\u0270\074\u026d" +
    "\076\u026b\103\u027b\104\u0273\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u026f\006\u026a\007\u026c\027\052\032\u026e\035" +
    "\u0270\074\u026d\076\u026b\103\u0280\104\u0273\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\027\122\033\u02bf" +
    "\001\001\000\004\037\u02b9\001\001\000\014\011\u02b0\027" +
    "\u02aa\030\u02a9\032\u02ad\035\u02ae\001\001\000\002\001\001" +
    "\000\004\036\315\001\001\000\002\001\001\000\004\027" +
    "\u02a7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\027\u02bb\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\037\u02bc" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\027" +
    "\122\033\u02c3\001\001\000\004\037\u02c1\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\011\u02b0\027\u02ca\030\u02c9\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\027\u02d4\001\001\000\002\001\001\000" +
    "\006\027\u02d7\035\u02d6\001\001\000\026\005\u02df\006\u02dc" +
    "\007\u02dd\023\u02db\027\052\032\u02de\035\u02e0\040\u036c\062" +
    "\u02e3\064\u02e6\001\001\000\004\036\315\001\001\000\004" +
    "\025\u02d9\001\001\000\002\001\001\000\026\005\u02df\006" +
    "\u02dc\007\u02dd\023\u02db\027\052\032\u02de\035\u02e0\040\u02e1" +
    "\062\u02e3\064\u02e6\001\001\000\026\005\u02df\006\u02dc\007" +
    "\u02dd\023\u02db\027\052\032\u02de\035\u02e0\040\u036b\062\u02e3" +
    "\064\u02e6\001\001\000\026\005\u02df\006\u02dc\007\u02dd\023" +
    "\u02db\027\052\032\u02de\035\u02e0\040\u036a\062\u02e3\064\u02e6" +
    "\001\001\000\026\005\u02df\006\u02dc\007\u02dd\023\u02db\027" +
    "\052\032\u02de\035\u02e0\040\u0369\062\u02e3\064\u02e6\001\001" +
    "\000\026\005\u02df\006\u02dc\007\u02dd\023\u02db\027\052\032" +
    "\u02de\035\u02e0\040\u0368\062\u02e3\064\u02e6\001\001\000\026" +
    "\005\u02df\006\u02dc\007\u02dd\023\u02db\027\052\032\u02de\035" +
    "\u02e0\040\u0367\062\u02e3\064\u02e6\001\001\000\026\005\u02df" +
    "\006\u02dc\007\u02dd\023\u02db\027\052\032\u02de\035\u02e0\040" +
    "\u0366\062\u02e3\064\u02e6\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u02df\006\u02dc\007\u02dd\023\u02db\027" +
    "\052\032\u02de\035\u02e0\040\u0360\062\u02e3\064\u02e6\001\001" +
    "\000\010\011\071\022\u0309\027\073\001\001\000\002\001" +
    "\001\000\026\005\u02df\006\u02dc\007\u02dd\023\u02db\027\052" +
    "\032\u02de\035\u02e0\040\u02ea\062\u02e3\064\u02e6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\011\071\022\u02ec\027\073\001\001\000" +
    "\002\001\001\000\026\005\u02f2\006\u02ef\007\u02f0\023\u02ee" +
    "\027\052\032\u02f1\035\u02f3\062\u02f6\063\u02f5\064\u02f7\001" +
    "\001\000\026\005\u02f2\006\u02ef\007\u02f0\023\u02ee\027\052" +
    "\032\u02f1\035\u02f3\062\u02f6\063\u0308\064\u02f7\001\001\000" +
    "\026\005\u02f2\006\u02ef\007\u02f0\023\u02ee\027\052\032\u02f1" +
    "\035\u02f3\062\u02f6\063\u0307\064\u02f7\001\001\000\026\005" +
    "\u02f2\006\u02ef\007\u02f0\023\u02ee\027\052\032\u02f1\035\u02f3" +
    "\062\u02f6\063\u0306\064\u02f7\001\001\000\026\005\u02f2\006" +
    "\u02ef\007\u02f0\023\u02ee\027\052\032\u02f1\035\u02f3\062\u02f6" +
    "\063\u0305\064\u02f7\001\001\000\026\005\u02f2\006\u02ef\007" +
    "\u02f0\023\u02ee\027\052\032\u02f1\035\u02f3\062\u02f6\063\u0304" +
    "\064\u02f7\001\001\000\026\005\u02f2\006\u02ef\007\u02f0\023" +
    "\u02ee\027\052\032\u02f1\035\u02f3\062\u02f6\063\u0303\064\u02f7" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u02f2\006\u02ef\007\u02f0\023\u02ee\027\052\032\u02f1\035\u02f3" +
    "\062\u02f6\063\u02fe\064\u02f7\001\001\000\026\005\u02f2\006" +
    "\u02ef\007\u02f0\023\u02ee\027\052\032\u02f1\035\u02f3\062\u02f6" +
    "\063\u02fd\064\u02f7\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u02f2\006\u02ef\007\u02f0\023\u02ee" +
    "\027\052\032\u02f1\035\u02f3\062\u02f6\063\u0302\064\u02f7\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u0312\006\u030f\007\u0310\023\u030d\027\052\032\u0311\035" +
    "\u0313\062\u0316\064\u0317\066\u0314\001\001\000\002\001\001" +
    "\000\026\005\u0312\006\u030f\007\u0310\023\u030d\027\052\032" +
    "\u0311\035\u0313\062\u0316\064\u0317\066\u035d\001\001\000\012" +
    "\011\071\022\u0327\027\073\065\u0328\001\001\000\026\005" +
    "\u0312\006\u030f\007\u0310\023\u030d\027\052\032\u0311\035\u0313" +
    "\062\u0316\064\u0317\066\u0326\001\001\000\026\005\u0312\006" +
    "\u030f\007\u0310\023\u030d\027\052\032\u0311\035\u0313\062\u0316" +
    "\064\u0317\066\u0325\001\001\000\026\005\u0312\006\u030f\007" +
    "\u0310\023\u030d\027\052\032\u0311\035\u0313\062\u0316\064\u0317" +
    "\066\u0324\001\001\000\026\005\u0312\006\u030f\007\u0310\023" +
    "\u030d\027\052\032\u0311\035\u0313\062\u0316\064\u0317\066\u0323" +
    "\001\001\000\026\005\u0312\006\u030f\007\u0310\023\u030d\027" +
    "\052\032\u0311\035\u0313\062\u0316\064\u0317\066\u0322\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u0312\006" +
    "\u030f\007\u0310\023\u030d\027\052\032\u0311\035\u0313\062\u0316" +
    "\064\u0317\066\u031c\001\001\000\026\005\u0312\006\u030f\007" +
    "\u0310\023\u030d\027\052\032\u0311\035\u0313\062\u0316\064\u0317" +
    "\066\u031b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u0312\006\u030f\007\u0310\023\u030d\027\052\032\u0311\035" +
    "\u0313\062\u0316\064\u0317\066\u031e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\u0331\006\u032e\007\u032f" +
    "\023\u032c\027\052\032\u0330\035\u0332\062\u0334\064\u0336\067" +
    "\u0335\001\001\000\002\001\001\000\026\005\u0331\006\u032e" +
    "\007\u032f\023\u032c\027\052\032\u0330\035\u0332\062\u0334\064" +
    "\u0336\067\u0344\001\001\000\012\011\071\022\u0327\027\073" +
    "\065\u0343\001\001\000\026\005\u0331\006\u032e\007\u032f\023" +
    "\u032c\027\052\032\u0330\035\u0332\062\u0334\064\u0336\067\u0342" +
    "\001\001\000\026\005\u0331\006\u032e\007\u032f\023\u032c\027" +
    "\052\032\u0330\035\u0332\062\u0334\064\u0336\067\u0341\001\001" +
    "\000\026\005\u0331\006\u032e\007\u032f\023\u032c\027\052\032" +
    "\u0330\035\u0332\062\u0334\064\u0336\067\u0340\001\001\000\026" +
    "\005\u0331\006\u032e\007\u032f\023\u032c\027\052\032\u0330\035" +
    "\u0332\062\u0334\064\u0336\067\u033f\001\001\000\026\005\u0331" +
    "\006\u032e\007\u032f\023\u032c\027\052\032\u0330\035\u0332\062" +
    "\u0334\064\u0336\067\u033e\001\001\000\002\001\001\000\026" +
    "\005\u0331\006\u032e\007\u032f\023\u032c\027\052\032\u0330\035" +
    "\u0332\062\u0334\064\u0336\067\u033b\001\001\000\002\001\001" +
    "\000\026\005\u0331\006\u032e\007\u032f\023\u032c\027\052\032" +
    "\u0330\035\u0332\062\u0334\064\u0336\067\u033a\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\u0331\006\u032e\007\u032f" +
    "\023\u032c\027\052\032\u0330\035\u0332\062\u0334\064\u0336\067" +
    "\u033d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u034a" +
    "\006\u0347\007\u0348\023\u0346\027\052\032\u0349\035\u034b\062" +
    "\u034e\064\u034f\070\u034d\001\001\000\026\005\u034a\006\u0347" +
    "\007\u0348\023\u0346\027\052\032\u0349\035\u034b\062\u034e\064" +
    "\u034f\070\u035c\001\001\000\026\005\u034a\006\u0347\007\u0348" +
    "\023\u0346\027\052\032\u0349\035\u034b\062\u034e\064\u034f\070" +
    "\u035b\001\001\000\026\005\u034a\006\u0347\007\u0348\023\u0346" +
    "\027\052\032\u0349\035\u034b\062\u034e\064\u034f\070\u035a\001" +
    "\001\000\026\005\u034a\006\u0347\007\u0348\023\u0346\027\052" +
    "\032\u0349\035\u034b\062\u034e\064\u034f\070\u0359\001\001\000" +
    "\026\005\u034a\006\u0347\007\u0348\023\u0346\027\052\032\u0349" +
    "\035\u034b\062\u034e\064\u034f\070\u0358\001\001\000\026\005" +
    "\u034a\006\u0347\007\u0348\023\u0346\027\052\032\u0349\035\u034b" +
    "\062\u034e\064\u034f\070\u0357\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u034a\006\u0347\007\u0348\023\u0346" +
    "\027\052\032\u0349\035\u034b\062\u034e\064\u034f\070\u0354\001" +
    "\001\000\026\005\u034a\006\u0347\007\u0348\023\u0346\027\052" +
    "\032\u0349\035\u034b\062\u034e\064\u034f\070\u0353\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\u034a\006\u0347\007" +
    "\u0348\023\u0346\027\052\032\u0349\035\u034b\062\u034e\064\u034f" +
    "\070\u0356\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u034a\006\u0347\007\u0348\023\u0346\027\052\032\u0349\035\u034b" +
    "\062\u034e\064\u034f\070\u035f\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u02df\006\u02dc\007\u02dd\023\u02db" +
    "\027\052\032\u02de\035\u02e0\040\u0362\062\u02e3\064\u02e6\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\u0379\001" +
    "\001\000\012\011\u02b0\027\u02aa\030\u0376\035\u0377\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\011\u02b0\027\u02ca" +
    "\030\u037c\032\u037d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\032\005\051\006\040\007\041\013\u0385\015\057\023\036" +
    "\026\042\027\052\032\046\035\050\045\053\061\063\001" +
    "\001\000\002\001\001\000\032\005\051\006\040\007\041" +
    "\013\u0387\015\057\023\036\026\042\027\052\032\046\035" +
    "\050\045\053\061\063\001\001\000\002\001\001\000\002" +
    "\001\001\000\032\005\051\006\040\007\041\013\u038a\015" +
    "\057\023\036\026\042\027\052\032\046\035\050\045\053" +
    "\061\063\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\014\u0391\031\u0170\046\u0178\061\u0177\073" +
    "\u0174\001\001\000\002\001\001\000\014\014\u0393\031\u0170" +
    "\046\u0178\061\u0177\073\u0174\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\014\u039c\031\u0170\046\u0178\061\u0177" +
    "\073\u0174\001\001\000\004\004\u0397\001\001\000\002\001" +
    "\001\000\004\010\u0399\001\001\000\002\001\001\000\032" +
    "\005\u01d2\006\u01cd\007\u01ce\012\u039b\027\052\032\u01d1\035" +
    "\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\004\u03a0\001\001\000\002\001\001" +
    "\000\004\010\u03a2\001\001\000\002\001\001\000\032\005" +
    "\u01d2\006\u01cd\007\u01ce\012\u03a4\027\052\032\u01d1\035\u01d3" +
    "\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001\001\000" +
    "\002\001\001\000\004\004\u03b0\001\001\000\004\004\u03a7" +
    "\001\001\000\002\001\001\000\004\010\u03ad\001\001\000" +
    "\004\010\u03aa\001\001\000\002\001\001\000\032\005\u01d2" +
    "\006\u01cd\007\u01ce\012\u03ac\027\052\032\u01d1\035\u01d3\047" +
    "\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\005\u01d2\006\u01cd\007" +
    "\u01ce\012\u03af\027\052\032\u01d1\035\u01d3\047\u01d5\061\u01da" +
    "\074\u01d0\076\u01cc\104\u01db\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\010\u03b2\001\001\000\002\001\001" +
    "\000\032\005\u01d2\006\u01cd\007\u01ce\012\u03b4\027\052\032" +
    "\u01d1\035\u01d3\047\u01d5\061\u01da\074\u01d0\076\u01cc\104\u01db" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\003" +
    "\u03b7\043\024\071\020\072\027\073\021\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\005" +
    "\051\006\040\007\041\013\u03bb\015\057\023\036\026\042" +
    "\027\052\032\046\035\050\045\053\061\063\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\003\u03bf\043\024\071\020\072\027\073\021\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\003\u03c2\043\024" +
    "\071\020\072\027\073\021\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\003\u03c9\043\024\071\020\072\027" +
    "\073\021\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\003\u03c8\043\024\071\020\072\027\073\021\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    private Symbol cur_token;
    String unrecovered = "";
    String errorSintax = "";
    ArrayList<String> listaRecover = new ArrayList<String>();

    @Override
    public void syntax_error(Symbol sym){
       listaRecover.add("\n Error Sintactico en la Linea " + (sym.right+1) +" Columna "+ (sym.left) + ". Palabras/Simbolo " + (sym.value) + " no reconocido \n") ;
    }

    public ArrayList<String> getSintax(){
        return listaRecover;
    }

    @Override
    public void unrecovered_syntax_error(Symbol cur_token){
       unrecovered = "Error Sintactico IRRECUPERABLE en la Linea: " + (cur_token.right+1)+ " Columna "+cur_token.left+". Palabras/Simbolo " + cur_token.value + " no reconocido"; 
    }

    public String getS(){
        return unrecovered;
}




/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= MODULE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // MODULE ::= tk_public tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // MODULE ::= error tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // MODULE ::= tk_public error tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // MODULE ::= tk_public tk_module error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // MODULE ::= COMENTARIO OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // MODULE ::= error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // COMENTARIO ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("COMENTARIO",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // FUNC ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // FUNC ::= error tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // FUNC ::= tk_public error tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // FUNC ::= tk_public tk_function error tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // FUNC ::= tk_public tk_function tk_Identificador error PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // FUNC ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS error TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // STRUCT ::= tk_public tk_structure tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // STRUCT ::= error tk_structure tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // STRUCT ::= tk_public error tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // STRUCT ::= tk_public tk_structure error tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SUBPROCESS ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SUBPROCESS ::= error tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SUBPROCESS ::= tk_public error tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SUBPROCESS ::= tk_public tk_sub error tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SUBPROCESS ::= tk_public tk_sub tk_Identificador error PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // MAIN ::= tk_sub tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // MAIN ::= error tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // MAIN ::= tk_sub error tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // MAIN ::= tk_sub tk_main error tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // MAIN ::= tk_sub tk_main tk_ParentesisA error tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ENDMODULE ::= tk_end tk_module tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ENDMODULE ::= error tk_module tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ENDMODULE ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ENDFUNC ::= tk_end tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ENDFUNC ::= error tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ENDFUNC ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ENDSTRUCT ::= tk_end tk_structure tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ENDSTRUCT ::= error tk_structure tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ENDSTRUCT ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ENDSUB ::= tk_end tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ENDSUB ::= error tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ENDSUB ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // OPCPROCESO ::= FUNC OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OPCPROCESO ::= STRUCT OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // OPCPROCESO ::= SUBPROCESS OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // OPCPROCESO ::= MAIN 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // OPCPROCESO ::= error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // OPCPROCESOAUX ::= FUNC OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // OPCPROCESOAUX ::= STRUCT OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // OPCPROCESOAUX ::= SUBPROCESS OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // OPCPROCESOAUX ::= ENDMODULE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // OPCPROCESOAUX ::= error tk_Linea OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CUERPOSTRUC ::= VARIABLESTRUC CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CUERPOSTRUC ::= COMENTARIO CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CUERPOSTRUC ::= SUBPROCESS CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CUERPOSTRUC ::= ENDSTRUCT 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // CUERPOSTRUC ::= error tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // VARIABLESTRUC ::= tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // VARIABLESTRUC ::= tk_Identificador tk_as tk_boolean tk_Igual OPCBOOL tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // VARIABLESTRUC ::= tk_Identificador tk_as tk_String tk_Igual tk_valorString tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // VARIABLESTRUC ::= tk_Identificador tk_as tk_integer tk_Igual tk_Numero tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CUERPOFUNC ::= SINTAXFOR_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CUERPOFUNC ::= SINTAXWHILE_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CUERPOFUNC ::= SINTAXIF_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CUERPOFUNC ::= VARIABLE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CUERPOFUNC ::= LLAMADAFUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CUERPOFUNC ::= ASIGNACIONVAL CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CUERPOFUNC ::= CONSOLEWRITE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // CUERPOFUNC ::= OPERACIONES CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // CUERPOFUNC ::= COMENTARIO CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // CUERPOFUNC ::= ENDFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // CUERPOFUNC ::= error tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // SINTAXIF_FUNC ::= tk_if CONDICION tk_then tk_Linea INIF_FUNC tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // SINTAXELSEIF_FUNC ::= CONDICION tk_then tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INIF_FUNC ::= SINTAXIF_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // INIF_FUNC ::= VARIABLE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // INIF_FUNC ::= LLAMADAFUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // INIF_FUNC ::= ASIGNACIONVAL INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // INIF_FUNC ::= OPERACIONES INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // INIF_FUNC ::= CONSOLEWRITE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // INIF_FUNC ::= SINTAXFOR_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // INIF_FUNC ::= SINTAXWHILE_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // INIF_FUNC ::= tk_comentario tk_Linea INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // INIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // INIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // INIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // INIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // INIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // INIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // INIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // INIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // INIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // INIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // INIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // INIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // INELSE_FUNC ::= SINTAXIF_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // INELSE_FUNC ::= VARIABLE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // INELSE_FUNC ::= LLAMADAFUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // INELSE_FUNC ::= ASIGNACIONVAL INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // INELSE_FUNC ::= OPERACIONES INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // INELSE_FUNC ::= CONSOLEWRITE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // INELSE_FUNC ::= SINTAXFOR_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // INELSE_FUNC ::= SINTAXWHILE_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // INELSE_FUNC ::= tk_comentario tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // INELSE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // INELSE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // INELSE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // INELSE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // INELSE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // INELSE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // INELSE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // INELSE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // INELSE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // INELSE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // INELSEIF_FUNC ::= SINTAXIF_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // INELSEIF_FUNC ::= VARIABLE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // INELSEIF_FUNC ::= LLAMADAFUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // INELSEIF_FUNC ::= ASIGNACIONVAL INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // INELSEIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // INELSEIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // INELSEIF_FUNC ::= OPERACIONES INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // INELSEIF_FUNC ::= CONSOLEWRITE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // INELSEIF_FUNC ::= SINTAXFOR_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // INELSEIF_FUNC ::= tk_comentario tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // INELSEIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // INELSEIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // INELSEIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // INELSEIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // INELSEIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // INELSEIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // INELSEIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // INELSEIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // INELSEIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // SINTAXWHILE_FUNC ::= tk_do tk_while CONDICION tk_Linea INWHILE_FUNC tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // INWHILE_FUNC ::= SINTAXFOR_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // INWHILE_FUNC ::= SINTAXIF_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // INWHILE_FUNC ::= VARIABLE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // INWHILE_FUNC ::= LLAMADAFUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // INWHILE_FUNC ::= ASIGNACIONVAL INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // INWHILE_FUNC ::= CONSOLEWRITE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // INWHILE_FUNC ::= OPERACIONES INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // INWHILE_FUNC ::= SINTAXWHILE_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // INWHILE_FUNC ::= tk_comentario tk_Linea INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // INWHILE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // INWHILE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // INWHILE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // INWHILE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // INWHILE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // INWHILE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // INWHILE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // INWHILE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // INWHILE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // INWHILE_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // INWHILE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // INWHILE_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // INFOR_FUNC ::= SINTAXWHILE_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // INFOR_FUNC ::= SINTAXFOR_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // INFOR_FUNC ::= SINTAXIF_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // INFOR_FUNC ::= VARIABLE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // INFOR_FUNC ::= LLAMADAFUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // INFOR_FUNC ::= ASIGNACIONVAL INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // INFOR_FUNC ::= CONSOLEWRITE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // INFOR_FUNC ::= OPERACIONES INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // INFOR_FUNC ::= tk_comentario tk_Linea INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // INFOR_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // INFOR_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // INFOR_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // INFOR_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // INFOR_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // INFOR_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // INFOR_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // INFOR_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // INFOR_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // INFOR_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // INFOR_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // INFOR_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // CUERPOPRO ::= SINTAXFOR CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // CUERPOPRO ::= SINTAXIF CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // CUERPOPRO ::= VARIABLE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // CUERPOPRO ::= LLAMADAFUNC CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // CUERPOPRO ::= ASIGNACIONVAL CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // CUERPOPRO ::= CONSOLEWRITE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // CUERPOPRO ::= OPERACIONES CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // CUERPOPRO ::= SINTAXWHILE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // CUERPOPRO ::= COMENTARIO CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // CUERPOPRO ::= ENDSUB OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // CUERPOPRO ::= error tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // PARAMETROS ::= tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // PARAMETROS ::= tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // PARAMETROS ::= tk_Coma tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // PARAMETROS ::= tk_Coma tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // PARAMETROS ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // VALOR ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // VARIABLE ::= tk_dim tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // VARIABLE ::= tk_dim tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // VARIABLE ::= tk_Identificador tk_punto tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // ASIGNACIONVAL ::= tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // ASIGNACIONVAL ::= tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // ASIGNACIONVAL ::= tk_Identificador tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // ASIGNACIONVAL ::= tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // ASIGNACIONVAL ::= tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // ASIGNACIONVAL ::= tk_Identificador tk_punto tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // TIPOD ::= tk_String 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // CONDICION ::= iDNUM OPCRELACIONALES tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // CONDICION ::= iDNUM OPCRELACIONALES tk_ParentesisA iDNUM OPEARITMETICA iDNUM tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // OPERACIONES ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // OPERACIONES ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // OPERACIONAUX ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // OPERACIONAUX ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // OPERACIONAUX ::= OPEARITMETICA iDNUM OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // OPERACIONAUX ::= iDNUM tk_ParentesisC OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // OPERACIONAUX ::= OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // OPERACIONAUX ::= iDNUM tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // OPERACIONAUX ::= iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // OPEARITMETICA ::= tk_Signomod 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // OPEARITMETICA ::= tk_Potencia 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // IDENTIFICADORES ::= iDNUM IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // IDENTIFICADORESPRIMA ::= tk_Coma IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // IDENTIFICADORESPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // IDENTIFICADORESUB ::= tk_Coma iDNUM IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // IDENTIFICADORESUB ::= tk_Coma iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LLAMADAFUNC ::= tk_Identificador iDNUM IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LLAMADAFUNC ::= tk_Identificador iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_valorString tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_Identificador tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // SINTAXIF ::= tk_if CONDICION tk_then tk_Linea INIF tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // SINTAXELSEIF ::= CONDICION tk_then tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // INIF ::= SINTAXIF INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // INIF ::= VARIABLE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // INIF ::= LLAMADAFUNC INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // INIF ::= ASIGNACIONVAL INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // INIF ::= OPERACIONES INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // INIF ::= CONSOLEWRITE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // INIF ::= SINTAXFOR INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // INIF ::= SINTAXWHILE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // INIF ::= tk_comentario tk_Linea INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // INIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // INIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // INIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // INIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // INIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // INIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // INIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // INIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // INIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // INIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // INIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // INELSE ::= SINTAXIF INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // INELSE ::= VARIABLE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // INELSE ::= LLAMADAFUNC INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // INELSE ::= ASIGNACIONVAL INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // INELSE ::= OPERACIONES INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // INELSE ::= CONSOLEWRITE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // INELSE ::= SINTAXFOR INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // INELSE ::= SINTAXWHILE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // INELSE ::= tk_comentario tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // INELSE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // INELSE ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // INELSE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // INELSE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // INELSE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // INELSE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // INELSE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // INELSE ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // INELSE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // INELSEIF ::= SINTAXIF INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // INELSEIF ::= VARIABLE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // INELSEIF ::= LLAMADAFUNC INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000001(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // INELSEIF ::= ASIGNACIONVAL INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // INELSEIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // INELSEIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INELSEIF ::= OPERACIONES INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INELSEIF ::= CONSOLEWRITE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // INELSEIF ::= SINTAXFOR INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // INELSEIF ::= SINTAXWHILE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // INELSEIF ::= tk_comentario tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // INELSEIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // INELSEIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // INELSEIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // INELSEIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // INELSEIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // INELSEIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INELSEIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INELSEIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // INELSEIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INFOR ::= SINTAXFOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INFOR ::= SINTAXIF_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INFOR ::= VARIABLE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INFOR ::= LLAMADAFUNC INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // INFOR ::= ASIGNACIONVAL INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // INFOR ::= CONSOLEWRITE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // INFOR ::= OPERACIONES INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // INFOR ::= SINTAXWHILE_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // INFOR ::= tk_comentario tk_Linea INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // INFOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // INFOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // INFOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // INFOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // INFOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // INFOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // INFOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // INFOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // INFOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // INFOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // SINTAXIF_FOR ::= tk_if CONDICION tk_then tk_Linea INIF_FOR tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // SINTAXELSEIF_FOR ::= CONDICION tk_then tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // INIF_FOR ::= SINTAXIF_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // INIF_FOR ::= VARIABLE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // INIF_FOR ::= LLAMADAFUNC INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // INIF_FOR ::= ASIGNACIONVAL INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // INIF_FOR ::= OPERACIONES INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // INIF_FOR ::= CONSOLEWRITE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // INIF_FOR ::= SINTAXFOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // INIF_FOR ::= SINTAXWHILE_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // INIF_FOR ::= tk_comentario tk_Linea INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // INIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // INIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // INIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // INIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // INIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // INIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // INIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // INIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // INIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // INIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // INIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // INIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // INELSEIF_FOR ::= SINTAXIF_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // INELSEIF_FOR ::= VARIABLE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // INELSEIF_FOR ::= LLAMADAFUNC INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // INELSEIF_FOR ::= ASIGNACIONVAL INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // INELSEIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // INELSEIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // INELSEIF_FOR ::= OPERACIONES INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // INELSEIF_FOR ::= CONSOLEWRITE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // INELSEIF_FOR ::= SINTAXFOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // INELSEIF_FOR ::= SINTAXWHILE_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // INELSEIF_FOR ::= tk_comentario tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // INELSEIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // INELSEIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // INELSEIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // INELSEIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // INELSEIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // INELSEIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // INELSEIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // INELSEIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // INELSEIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // INELSEIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // INELSE_FOR ::= SINTAXIF_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // INELSE_FOR ::= VARIABLE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // INELSE_FOR ::= LLAMADAFUNC INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // INELSE_FOR ::= ASIGNACIONVAL INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // INELSE_FOR ::= OPERACIONES INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // INELSE_FOR ::= CONSOLEWRITE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // INELSE_FOR ::= SINTAXFOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // INELSE_FOR ::= SINTAXWHILE_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // INELSE_FOR ::= tk_comentario tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // INELSE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // INELSE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // INELSE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // INELSE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // INELSE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // INELSE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // INELSE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // INELSE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // INELSE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // INELSE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // SINTAXWHILE_FOR ::= tk_do tk_while CONDICION tk_Linea INWHILE_FOR tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // INWHILE_FOR ::= SINTAXFOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // INWHILE_FOR ::= VARIABLE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // INWHILE_FOR ::= LLAMADAFUNC INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // INWHILE_FOR ::= ASIGNACIONVAL INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // INWHILE_FOR ::= CONSOLEWRITE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // INWHILE_FOR ::= OPERACIONES INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // INWHILE_FOR ::= SINTAXWHILE_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // INWHILE_FOR ::= SINTAXIF_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // INWHILE_FOR ::= tk_comentario tk_Linea INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // INWHILE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // INWHILE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // INWHILE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // INWHILE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // INWHILE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // INWHILE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // INWHILE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // INWHILE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // INWHILE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // INWHILE_FOR ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // INWHILE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // SINTAXIF_WHILE ::= tk_if CONDICION tk_then tk_Linea INIF_WHILE tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // SINTAXELSEIF_WHILE ::= CONDICION tk_then tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INIF_WHILE ::= SINTAXIF_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INIF_WHILE ::= VARIABLE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INIF_WHILE ::= LLAMADAFUNC INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INIF_WHILE ::= ASIGNACIONVAL INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INIF_WHILE ::= OPERACIONES INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INIF_WHILE ::= CONSOLEWRITE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INIF_WHILE ::= SINTAXFOR_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INIF_WHILE ::= SINTAXWHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INIF_WHILE ::= tk_comentario tk_Linea INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // INIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // INIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // INIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // INIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // INIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // INIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // INIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // INIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // INELSEIF_WHILE ::= SINTAXWHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // INELSEIF_WHILE ::= SINTAXIF_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // INELSEIF_WHILE ::= VARIABLE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // INELSEIF_WHILE ::= LLAMADAFUNC INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // INELSEIF_WHILE ::= ASIGNACIONVAL INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // INELSEIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // INELSEIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // INELSEIF_WHILE ::= OPERACIONES INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // INELSEIF_WHILE ::= CONSOLEWRITE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // INELSEIF_WHILE ::= SINTAXFOR_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // INELSEIF_WHILE ::= tk_comentario tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // INELSEIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // INELSEIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // INELSEIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // INELSEIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // INELSEIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // INELSEIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // INELSEIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // INELSEIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // INELSEIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // INELSEIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // INELSE_WHILE ::= SINTAXWHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // INELSE_WHILE ::= SINTAXIF_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // INELSE_WHILE ::= VARIABLE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // INELSE_WHILE ::= LLAMADAFUNC INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // INELSE_WHILE ::= ASIGNACIONVAL INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // INELSE_WHILE ::= OPERACIONES INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // INELSE_WHILE ::= CONSOLEWRITE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // INELSE_WHILE ::= SINTAXFOR_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // INELSE_WHILE ::= tk_comentario tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // INELSE_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // INELSE_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // INELSE_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // INELSE_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // INELSE_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // INELSE_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // INELSE_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // INELSE_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // INELSE_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // INELSE_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // INFOR_WHILE ::= SINTAXWHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // INFOR_WHILE ::= SINTAXFOR_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // INFOR_WHILE ::= SINTAXIF_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // INFOR_WHILE ::= VARIABLE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // INFOR_WHILE ::= LLAMADAFUNC INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // INFOR_WHILE ::= ASIGNACIONVAL INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // INFOR_WHILE ::= CONSOLEWRITE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // INFOR_WHILE ::= OPERACIONES INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // INFOR_WHILE ::= tk_comentario tk_Linea INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // INFOR_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // INFOR_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // INFOR_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // INFOR_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // INFOR_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // INFOR_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // INFOR_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // INFOR_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // INFOR_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // INFOR_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // INFOR_WHILE ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_Linea INWHILE tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // INWHILE ::= SINTAXWHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // INWHILE ::= SINTAXFOR_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // INWHILE ::= SINTAXIF_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // INWHILE ::= VARIABLE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // INWHILE ::= LLAMADAFUNC INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // INWHILE ::= ASIGNACIONVAL INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // INWHILE ::= CONSOLEWRITE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // INWHILE ::= OPERACIONES INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // INWHILE ::= tk_comentario tk_Linea INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // INWHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // INWHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // INWHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // INWHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // INWHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // INWHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // INWHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // INWHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // INWHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // INWHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Gramatica$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Gramatica$do_action_part00000001(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
