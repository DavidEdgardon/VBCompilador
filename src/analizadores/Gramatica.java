
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01ef\000\002\002\004\000\002\002\012\000\002\002" +
    "\005\000\002\002\004\000\002\003\015\000\002\003\017" +
    "\000\002\003\014\000\002\003\013\000\002\003\005\000" +
    "\002\016\005\000\002\016\005\000\002\016\004\000\002" +
    "\040\005\000\002\040\004\000\002\013\004\000\002\013" +
    "\004\000\002\013\004\000\002\013\004\000\002\013\004" +
    "\000\002\013\004\000\002\013\004\000\002\013\004\000" +
    "\002\013\005\000\002\013\004\000\002\013\003\000\002" +
    "\013\003\000\002\013\003\000\002\013\003\000\002\013" +
    "\003\000\002\013\003\000\002\013\003\000\002\013\003" +
    "\000\002\102\012\000\002\103\006\000\002\104\004\000" +
    "\002\104\004\000\002\104\004\000\002\104\004\000\002" +
    "\104\004\000\002\104\004\000\002\104\004\000\002\104" +
    "\004\000\002\104\005\000\002\104\004\000\002\104\003" +
    "\000\002\104\003\000\002\104\003\000\002\104\003\000" +
    "\002\104\003\000\002\104\003\000\002\104\003\000\002" +
    "\104\003\000\002\104\005\000\002\104\005\000\002\104" +
    "\004\000\002\106\004\000\002\106\004\000\002\106\004" +
    "\000\002\106\004\000\002\106\004\000\002\106\004\000" +
    "\002\106\004\000\002\106\004\000\002\106\005\000\002" +
    "\106\004\000\002\106\003\000\002\106\003\000\002\106" +
    "\003\000\002\106\003\000\002\106\003\000\002\106\003" +
    "\000\002\106\003\000\002\106\003\000\002\106\005\000" +
    "\002\105\004\000\002\105\004\000\002\105\004\000\002" +
    "\105\004\000\002\105\005\000\002\105\004\000\002\105" +
    "\004\000\002\105\004\000\002\105\004\000\002\105\004" +
    "\000\002\105\005\000\002\105\004\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\003\000\002\105" +
    "\003\000\002\105\005\000\002\100\011\000\002\101\004" +
    "\000\002\101\004\000\002\101\004\000\002\101\004\000" +
    "\002\101\004\000\002\101\004\000\002\101\004\000\002" +
    "\101\004\000\002\101\005\000\002\101\004\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\101\003" +
    "\000\002\101\003\000\002\101\003\000\002\101\003\000" +
    "\002\101\003\000\002\101\005\000\002\101\005\000\002" +
    "\101\005\000\002\110\017\000\002\110\014\000\002\107" +
    "\004\000\002\107\004\000\002\107\004\000\002\107\004" +
    "\000\002\107\004\000\002\107\004\000\002\107\004\000" +
    "\002\107\004\000\002\107\005\000\002\107\004\000\002" +
    "\107\003\000\002\107\003\000\002\107\003\000\002\107" +
    "\003\000\002\107\003\000\002\107\003\000\002\107\003" +
    "\000\002\107\003\000\002\107\005\000\002\107\005\000" +
    "\002\107\005\000\002\014\004\000\002\014\004\000\002" +
    "\014\004\000\002\014\004\000\002\014\004\000\002\014" +
    "\004\000\002\014\004\000\002\014\004\000\002\014\005" +
    "\000\002\014\004\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\014\003\000\002\014\003\000\002\004" +
    "\007\000\002\004\006\000\002\004\010\000\002\004\007" +
    "\000\002\004\003\000\002\034\003\000\002\034\003\000" +
    "\002\034\003\000\002\005\007\000\002\005\011\000\002" +
    "\005\010\000\002\005\007\000\002\005\006\000\002\005" +
    "\010\000\002\006\006\000\002\006\005\000\002\006\005" +
    "\000\002\006\012\000\002\006\010\000\002\012\003\000" +
    "\002\012\003\000\002\011\003\000\002\011\003\000\002" +
    "\011\003\000\002\017\003\000\002\017\003\000\002\027" +
    "\003\000\002\027\003\000\002\027\003\000\002\027\003" +
    "\000\002\027\003\000\002\033\003\000\002\033\003\000" +
    "\002\025\005\000\002\025\005\000\002\025\007\000\002" +
    "\025\003\000\002\025\011\000\002\030\004\000\002\030" +
    "\003\000\002\047\005\000\002\047\006\000\002\057\005" +
    "\000\002\057\006\000\002\057\005\000\002\057\005\000" +
    "\002\057\005\000\002\057\005\000\002\057\004\000\002" +
    "\050\003\000\002\050\003\000\002\050\003\000\002\050" +
    "\003\000\002\050\003\000\002\050\003\000\002\043\004" +
    "\000\002\044\004\000\002\044\003\000\002\051\005\000" +
    "\002\051\004\000\002\042\006\000\002\042\006\000\002" +
    "\042\006\000\002\042\005\000\002\042\010\000\002\042" +
    "\007\000\002\010\011\000\002\020\012\000\002\024\006" +
    "\000\002\021\004\000\002\021\004\000\002\021\004\000" +
    "\002\021\004\000\002\021\004\000\002\021\004\000\002" +
    "\021\004\000\002\021\004\000\002\021\005\000\002\021" +
    "\004\000\002\021\003\000\002\021\003\000\002\021\003" +
    "\000\002\021\003\000\002\021\003\000\002\021\003\000" +
    "\002\021\003\000\002\021\003\000\002\021\005\000\002" +
    "\021\004\000\002\022\004\000\002\022\004\000\002\022" +
    "\004\000\002\022\004\000\002\022\004\000\002\022\004" +
    "\000\002\022\004\000\002\022\004\000\002\022\005\000" +
    "\002\022\004\000\002\022\003\000\002\022\003\000\002" +
    "\022\003\000\002\022\003\000\002\022\003\000\002\022" +
    "\003\000\002\022\003\000\002\022\003\000\002\023\004" +
    "\000\002\023\004\000\002\023\004\000\002\023\004\000" +
    "\002\023\005\000\002\023\004\000\002\023\004\000\002" +
    "\023\004\000\002\023\004\000\002\023\004\000\002\023" +
    "\005\000\002\023\004\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\003\000\002\023\003\000\002" +
    "\026\017\000\002\026\014\000\002\055\004\000\002\055" +
    "\004\000\002\055\004\000\002\055\004\000\002\055\004" +
    "\000\002\055\004\000\002\055\004\000\002\055\004\000" +
    "\002\055\005\000\002\055\004\000\002\055\003\000\002" +
    "\055\003\000\002\055\003\000\002\055\003\000\002\055" +
    "\003\000\002\055\003\000\002\055\003\000\002\055\003" +
    "\000\002\055\005\000\002\073\012\000\002\074\006\000" +
    "\002\075\004\000\002\075\004\000\002\075\004\000\002" +
    "\075\004\000\002\075\004\000\002\075\004\000\002\075" +
    "\004\000\002\075\004\000\002\075\005\000\002\075\004" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\075\003\000\002\075\005\000\002\075" +
    "\005\000\002\075\004\000\002\076\004\000\002\076\004" +
    "\000\002\076\004\000\002\076\004\000\002\076\005\000" +
    "\002\076\004\000\002\076\004\000\002\076\004\000\002" +
    "\076\004\000\002\076\004\000\002\076\005\000\002\076" +
    "\004\000\002\076\003\000\002\076\003\000\002\076\003" +
    "\000\002\076\003\000\002\076\003\000\002\076\003\000" +
    "\002\076\003\000\002\076\003\000\002\076\005\000\002" +
    "\077\004\000\002\077\004\000\002\077\004\000\002\077" +
    "\004\000\002\077\004\000\002\077\004\000\002\077\004" +
    "\000\002\077\004\000\002\077\005\000\002\077\004\000" +
    "\002\077\003\000\002\077\003\000\002\077\003\000\002" +
    "\077\003\000\002\077\003\000\002\077\003\000\002\077" +
    "\003\000\002\077\003\000\002\077\005\000\002\071\011" +
    "\000\002\072\004\000\002\072\004\000\002\072\004\000" +
    "\002\072\004\000\002\072\004\000\002\072\004\000\002" +
    "\072\004\000\002\072\004\000\002\072\005\000\002\072" +
    "\004\000\002\072\003\000\002\072\003\000\002\072\003" +
    "\000\002\072\003\000\002\072\003\000\002\072\003\000" +
    "\002\072\003\000\002\072\003\000\002\072\005\000\002" +
    "\072\005\000\002\062\012\000\002\066\006\000\002\063" +
    "\004\000\002\063\004\000\002\063\004\000\002\063\004" +
    "\000\002\063\004\000\002\063\004\000\002\063\004\000" +
    "\002\063\004\000\002\063\005\000\002\063\004\000\002" +
    "\063\003\000\002\063\003\000\002\063\003\000\002\063" +
    "\003\000\002\063\003\000\002\063\003\000\002\063\003" +
    "\000\002\063\003\000\002\063\005\000\002\063\005\000" +
    "\002\063\004\000\002\065\004\000\002\065\004\000\002" +
    "\065\004\000\002\065\004\000\002\065\004\000\002\065" +
    "\005\000\002\065\004\000\002\065\004\000\002\065\004" +
    "\000\002\065\004\000\002\065\005\000\002\065\004\000" +
    "\002\065\003\000\002\065\003\000\002\065\003\000\002" +
    "\065\003\000\002\065\003\000\002\065\003\000\002\065" +
    "\003\000\002\065\003\000\002\065\005\000\002\064\004" +
    "\000\002\064\004\000\002\064\004\000\002\064\004\000" +
    "\002\064\004\000\002\064\004\000\002\064\004\000\002" +
    "\064\004\000\002\064\005\000\002\064\004\000\002\064" +
    "\003\000\002\064\003\000\002\064\003\000\002\064\003" +
    "\000\002\064\003\000\002\064\003\000\002\064\003\000" +
    "\002\064\003\000\002\064\005\000\002\070\017\000\002" +
    "\070\014\000\002\067\004\000\002\067\004\000\002\067" +
    "\004\000\002\067\004\000\002\067\004\000\002\067\004" +
    "\000\002\067\004\000\002\067\004\000\002\067\005\000" +
    "\002\067\004\000\002\067\003\000\002\067\003\000\002" +
    "\067\003\000\002\067\003\000\002\067\003\000\002\067" +
    "\003\000\002\067\003\000\002\067\003\000\002\067\005" +
    "\000\002\067\005\000\002\031\011\000\002\056\004\000" +
    "\002\056\004\000\002\056\004\000\002\056\004\000\002" +
    "\056\004\000\002\056\004\000\002\056\004\000\002\056" +
    "\004\000\002\056\005\000\002\056\004\000\002\056\003" +
    "\000\002\056\003\000\002\056\003\000\002\056\003\000" +
    "\002\056\003\000\002\056\003\000\002\056\003\000\002" +
    "\056\003\000\002\056\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u032a\000\006\012\006\040\004\001\002\000\004\041" +
    "\012\001\002\000\004\002\011\001\002\000\004\076\007" +
    "\001\002\000\010\002\ufffe\012\006\040\004\001\002\000" +
    "\004\002\uffff\001\002\000\004\002\001\001\002\000\004" +
    "\101\013\001\002\000\004\076\014\001\002\000\006\012" +
    "\017\040\016\001\002\000\004\074\u032a\001\002\000\010" +
    "\035\022\036\023\037\024\001\002\000\004\076\020\001" +
    "\002\000\006\012\017\040\016\001\002\000\004\074\ufff9" +
    "\001\002\000\004\101\u0267\001\002\000\006\075\050\101" +
    "\051\001\002\000\004\101\025\001\002\000\004\076\026" +
    "\001\002\000\006\012\031\101\027\001\002\000\004\067" +
    "\040\001\002\000\004\074\034\001\002\000\004\076\032" +
    "\001\002\000\010\012\031\074\ufff6\101\027\001\002\000" +
    "\004\074\ufff7\001\002\000\004\037\035\001\002\000\004" +
    "\076\036\001\002\000\006\012\017\040\016\001\002\000" +
    "\004\074\ufffa\001\002\000\010\013\042\014\045\015\043" +
    "\001\002\000\004\074\ufff8\001\002\000\016\016\uff4d\060" +
    "\uff4d\062\uff4d\063\uff4d\076\uff4d\101\uff4d\001\002\000\016" +
    "\016\uff4e\060\uff4e\062\uff4e\063\uff4e\076\uff4e\101\uff4e\001" +
    "\002\000\004\076\046\001\002\000\016\016\uff4c\060\uff4c" +
    "\062\uff4c\063\uff4c\076\uff4c\101\uff4c\001\002\000\010\012" +
    "\031\074\ufff4\101\027\001\002\000\004\074\ufff5\001\002" +
    "\000\004\061\u0260\001\002\000\004\061\052\001\002\000" +
    "\012\016\055\062\054\063\056\101\053\001\002\000\004" +
    "\067\u025d\001\002\000\006\067\uff5f\076\uff5f\001\002\000" +
    "\004\101\u0259\001\002\000\006\016\u0251\101\u0250\001\002" +
    "\000\004\076\060\001\002\000\024\007\072\012\076\017" +
    "\100\023\066\032\102\061\077\066\062\101\070\102\103" +
    "\001\002\000\026\007\072\012\076\017\100\023\066\032" +
    "\102\061\077\066\062\074\uff6b\101\070\102\103\001\002" +
    "\000\004\101\u0243\001\002\000\026\007\072\012\076\017" +
    "\100\023\066\032\102\061\077\066\062\074\uff67\101\070" +
    "\102\103\001\002\000\026\007\072\012\076\017\100\023" +
    "\066\032\102\061\077\066\062\074\uff66\101\070\102\103" +
    "\001\002\000\026\007\072\012\076\017\100\023\066\032" +
    "\102\061\077\066\062\074\uff64\101\070\102\103\001\002" +
    "\000\004\101\u01a2\001\002\000\004\074\u019e\001\002\000" +
    "\030\042\uff44\043\uff44\044\uff44\045\uff44\046\uff44\047\uff44" +
    "\060\u017a\061\u0178\065\u0177\101\106\102\103\001\002\000" +
    "\026\007\072\012\076\017\100\023\066\032\102\061\077" +
    "\066\062\074\uff68\101\070\102\103\001\002\000\004\065" +
    "\u016c\001\002\000\026\007\072\012\076\017\100\023\066" +
    "\032\102\061\077\066\062\074\uff69\101\070\102\103\001" +
    "\002\000\026\007\072\012\076\017\100\023\066\032\102" +
    "\061\077\066\062\074\uff65\101\070\102\103\001\002\000" +
    "\016\042\134\043\132\044\127\045\126\046\130\047\133" +
    "\001\002\000\004\076\u0168\001\002\000\006\101\106\102" +
    "\103\001\002\000\012\033\105\034\111\101\106\102\103" +
    "\001\002\000\026\007\072\012\076\017\100\023\066\032" +
    "\102\061\077\066\062\074\uff6a\101\070\102\103\001\002" +
    "\000\004\026\104\001\002\000\052\020\uff43\024\uff43\027" +
    "\uff43\042\uff43\043\uff43\044\uff43\045\uff43\046\uff43\047\uff43" +
    "\054\uff43\055\uff43\056\uff43\057\uff43\060\uff43\061\uff43\062" +
    "\uff43\063\uff43\076\uff43\101\uff43\102\uff43\001\002\000\012" +
    "\033\105\034\111\101\106\102\103\001\002\000\006\020" +
    "\uff50\076\uff50\001\002\000\050\024\uff44\027\uff44\042\uff44" +
    "\043\uff44\044\uff44\045\uff44\046\uff44\047\uff44\054\uff44\055" +
    "\uff44\056\uff44\057\uff44\060\uff44\061\uff44\062\uff44\063\uff44" +
    "\076\uff44\101\uff44\102\uff44\001\002\000\004\076\146\001" +
    "\002\000\006\020\uff3f\076\uff3f\001\002\000\006\020\uff4f" +
    "\076\uff4f\001\002\000\014\054\117\055\115\056\116\057" +
    "\114\060\120\001\002\000\014\033\105\034\111\061\123" +
    "\101\121\102\103\001\002\000\014\033\uff46\034\uff46\061" +
    "\uff46\101\uff46\102\uff46\001\002\000\014\033\uff48\034\uff48" +
    "\061\uff48\101\uff48\102\uff48\001\002\000\014\033\uff47\034" +
    "\uff47\061\uff47\101\uff47\102\uff47\001\002\000\014\033\uff49" +
    "\034\uff49\061\uff49\101\uff49\102\uff49\001\002\000\014\033" +
    "\uff45\034\uff45\061\uff45\101\uff45\102\uff45\001\002\000\010" +
    "\020\uff44\061\137\076\uff44\001\002\000\006\020\uff41\076" +
    "\uff41\001\002\000\006\101\106\102\103\001\002\000\006" +
    "\020\uff42\076\uff42\001\002\000\016\042\134\043\132\044" +
    "\127\045\126\046\130\047\133\001\002\000\024\042\uff2f" +
    "\043\uff2f\044\uff2f\045\uff2f\046\uff2f\047\uff2f\061\uff2f\101" +
    "\uff2f\102\uff2f\001\002\000\024\042\uff30\043\uff30\044\uff30" +
    "\045\uff30\046\uff30\047\uff30\061\uff30\101\uff30\102\uff30\001" +
    "\002\000\024\042\uff2e\043\uff2e\044\uff2e\045\uff2e\046\uff2e" +
    "\047\uff2e\061\uff2e\101\uff2e\102\uff2e\001\002\000\006\101" +
    "\106\102\103\001\002\000\024\042\uff31\043\uff31\044\uff31" +
    "\045\uff31\046\uff31\047\uff31\061\uff31\101\uff31\102\uff31\001" +
    "\002\000\024\042\uff2d\043\uff2d\044\uff2d\045\uff2d\046\uff2d" +
    "\047\uff2d\061\uff2d\101\uff2d\102\uff2d\001\002\000\024\042" +
    "\uff32\043\uff32\044\uff32\045\uff32\046\uff32\047\uff32\061\uff32" +
    "\101\uff32\102\uff32\001\002\000\004\062\136\001\002\000" +
    "\006\020\uff3e\076\uff3e\001\002\000\006\101\106\102\103" +
    "\001\002\000\006\020\uff40\076\uff40\001\002\000\006\062" +
    "\142\063\144\001\002\000\012\020\uff2a\062\uff2a\063\uff2a" +
    "\076\uff2a\001\002\000\012\020\uff2c\062\uff2c\063\uff2c\076" +
    "\uff2c\001\002\000\006\101\106\102\103\001\002\000\012" +
    "\020\uff2b\062\uff2b\063\uff2b\076\uff2b\001\002\000\026\007" +
    "\072\012\157\017\161\023\152\032\102\061\077\066\062" +
    "\070\163\101\070\102\103\001\002\000\030\007\072\012" +
    "\157\017\161\023\152\025\ufe16\032\102\061\077\066\062" +
    "\070\163\101\070\102\103\001\002\000\030\007\072\012" +
    "\157\017\161\023\152\025\ufe15\032\102\061\077\066\062" +
    "\070\163\101\070\102\103\001\002\000\030\007\072\012" +
    "\157\017\161\023\152\025\ufe1b\032\102\061\077\066\062" +
    "\070\163\101\070\102\103\001\002\000\004\101\326\001" +
    "\002\000\030\007\072\012\157\017\161\023\152\025\ufe17" +
    "\032\102\061\077\066\062\070\163\101\070\102\103\001" +
    "\002\000\030\007\072\012\157\017\161\023\152\025\ufe18" +
    "\032\102\061\077\066\062\070\163\101\070\102\103\001" +
    "\002\000\030\007\072\012\157\017\161\023\152\025\ufe14" +
    "\032\102\061\077\066\062\070\163\101\070\102\103\001" +
    "\002\000\030\007\072\012\157\017\161\023\152\025\ufe1a" +
    "\032\102\061\077\066\062\070\163\101\070\102\103\001" +
    "\002\000\004\076\320\001\002\000\030\007\072\012\157" +
    "\017\161\023\152\025\ufe19\032\102\061\077\066\062\070" +
    "\163\101\070\102\103\001\002\000\012\033\105\034\111" +
    "\101\106\102\103\001\002\000\004\025\166\001\002\000" +
    "\004\032\164\001\002\000\004\076\165\001\002\000\004" +
    "\025\ufe13\001\002\000\004\076\167\001\002\000\040\007" +
    "\ufe26\012\ufe26\017\ufe26\021\ufe26\022\ufe26\023\ufe26\025\ufe26" +
    "\031\ufe26\032\ufe26\061\ufe26\066\ufe26\070\ufe26\074\ufe26\101" +
    "\ufe26\102\ufe26\001\002\000\004\020\171\001\002\000\004" +
    "\076\172\001\002\000\032\007\072\012\204\017\161\021" +
    "\174\022\173\023\152\032\102\061\077\066\062\070\207" +
    "\101\070\102\103\001\002\000\004\076\315\001\002\000" +
    "\012\033\105\034\111\101\106\102\103\001\002\000\034" +
    "\007\072\012\204\017\161\021\174\022\173\023\152\032" +
    "\102\061\077\066\062\070\207\074\ufe6c\101\070\102\103" +
    "\001\002\000\034\007\072\012\204\017\161\021\174\022" +
    "\173\023\152\032\102\061\077\066\062\070\207\074\ufe6b" +
    "\101\070\102\103\001\002\000\034\007\072\012\204\017" +
    "\161\021\174\022\173\023\152\032\102\061\077\066\062" +
    "\070\207\074\ufe68\101\070\102\103\001\002\000\034\007" +
    "\072\012\204\017\161\021\174\022\173\023\152\032\102" +
    "\061\077\066\062\070\207\074\ufe6d\101\070\102\103\001" +
    "\002\000\034\007\072\012\204\017\161\021\174\022\173" +
    "\023\152\032\102\061\077\066\062\070\207\074\ufe6e\101" +
    "\070\102\103\001\002\000\034\007\072\012\204\017\161" +
    "\021\174\022\173\023\152\032\102\061\077\066\062\070" +
    "\207\074\ufe6a\101\070\102\103\001\002\000\034\007\072" +
    "\012\204\017\161\021\174\022\173\023\152\032\102\061" +
    "\077\066\062\070\207\074\ufe69\101\070\102\103\001\002" +
    "\000\004\076\216\001\002\000\004\074\213\001\002\000" +
    "\034\007\072\012\204\017\161\021\174\022\173\023\152" +
    "\032\102\061\077\066\062\070\207\074\ufe6f\101\070\102" +
    "\103\001\002\000\004\032\210\001\002\000\004\076\211" +
    "\001\002\000\004\074\ufe67\001\002\000\004\074\ufe79\001" +
    "\002\000\004\017\214\001\002\000\004\076\215\001\002" +
    "\000\040\007\ufe7b\012\ufe7b\017\ufe7b\021\ufe7b\022\ufe7b\023" +
    "\ufe7b\025\ufe7b\031\ufe7b\032\ufe7b\061\ufe7b\066\ufe7b\070\ufe7b" +
    "\074\ufe7b\101\ufe7b\102\ufe7b\001\002\000\034\007\072\012" +
    "\204\017\161\021\174\022\173\023\152\032\102\061\077" +
    "\066\062\070\207\074\ufe70\101\070\102\103\001\002\000" +
    "\004\074\ufe71\001\002\000\004\074\ufe73\001\002\000\004" +
    "\074\ufe75\001\002\000\004\074\ufe78\001\002\000\004\074" +
    "\ufe77\001\002\000\004\074\ufe72\001\002\000\004\074\ufe74" +
    "\001\002\000\004\074\ufe76\001\002\000\004\074\ufe65\001" +
    "\002\000\004\020\231\001\002\000\004\076\232\001\002" +
    "\000\032\007\072\012\245\017\161\021\234\022\233\023" +
    "\152\032\102\061\077\066\062\070\247\101\070\102\103" +
    "\001\002\000\004\076\265\001\002\000\012\033\105\034" +
    "\111\101\106\102\103\001\002\000\034\007\072\012\245" +
    "\017\161\021\234\022\233\023\152\032\102\061\077\066" +
    "\062\070\247\074\ufe54\101\070\102\103\001\002\000\034" +
    "\007\072\012\245\017\161\021\234\022\233\023\152\032" +
    "\102\061\077\066\062\070\247\074\ufe53\101\070\102\103" +
    "\001\002\000\034\007\072\012\245\017\161\021\234\022" +
    "\233\023\152\032\102\061\077\066\062\070\247\074\ufe58" +
    "\101\070\102\103\001\002\000\004\074\ufe7a\001\002\000" +
    "\034\007\072\012\245\017\161\021\234\022\233\023\152" +
    "\032\102\061\077\066\062\070\247\074\ufe55\101\070\102" +
    "\103\001\002\000\034\007\072\012\245\017\161\021\234" +
    "\022\233\023\152\032\102\061\077\066\062\070\247\074" +
    "\ufe56\101\070\102\103\001\002\000\034\007\072\012\245" +
    "\017\161\021\234\022\233\023\152\032\102\061\077\066" +
    "\062\070\247\074\ufe52\101\070\102\103\001\002\000\034" +
    "\007\072\012\245\017\161\021\234\022\233\023\152\032" +
    "\102\061\077\066\062\070\247\074\ufe51\101\070\102\103" +
    "\001\002\000\004\076\253\001\002\000\034\007\072\012" +
    "\245\017\161\021\234\022\233\023\152\032\102\061\077" +
    "\066\062\070\247\074\ufe57\101\070\102\103\001\002\000" +
    "\004\032\250\001\002\000\004\076\251\001\002\000\004" +
    "\074\ufe50\001\002\000\004\074\ufe63\001\002\000\034\007" +
    "\072\012\245\017\161\021\234\022\233\023\152\032\102" +
    "\061\077\066\062\070\247\074\ufe59\101\070\102\103\001" +
    "\002\000\004\074\ufe5a\001\002\000\004\074\ufe5b\001\002" +
    "\000\004\074\ufe5d\001\002\000\004\074\ufe62\001\002\000" +
    "\004\074\ufe61\001\002\000\004\074\ufe64\001\002\000\004" +
    "\074\ufe5c\001\002\000\004\074\ufe60\001\002\000\004\074" +
    "\ufe5e\001\002\000\026\007\072\012\275\017\161\023\152" +
    "\032\102\061\077\066\062\070\277\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe41\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe40\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe45\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe42\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe43\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe3f\101\070\102\103\001" +
    "\002\000\030\007\072\012\275\017\161\023\152\032\102" +
    "\061\077\066\062\070\277\074\ufe3e\101\070\102\103\001" +
    "\002\000\004\076\304\001\002\000\030\007\072\012\275" +
    "\017\161\023\152\032\102\061\077\066\062\070\277\074" +
    "\ufe44\101\070\102\103\001\002\000\004\032\301\001\002" +
    "\000\004\074\ufe5f\001\002\000\004\076\302\001\002\000" +
    "\004\074\ufe3d\001\002\000\004\074\ufe4e\001\002\000\030" +
    "\007\072\012\275\017\161\023\152\032\102\061\077\066" +
    "\062\070\277\074\ufe46\101\070\102\103\001\002\000\004" +
    "\074\ufe47\001\002\000\004\074\ufe48\001\002\000\004\074" +
    "\ufe4a\001\002\000\004\074\ufe4d\001\002\000\004\074\ufe4c" +
    "\001\002\000\004\074\ufe4f\001\002\000\004\074\ufe49\001" +
    "\002\000\004\074\ufe4b\001\002\000\026\007\072\012\275" +
    "\017\161\023\152\032\102\061\077\066\062\070\277\101" +
    "\070\102\103\001\002\000\004\074\ufe66\001\002\000\004" +
    "\025\ufe23\001\002\000\030\007\072\012\157\017\161\023" +
    "\152\025\ufe1c\032\102\061\077\066\062\070\163\101\070" +
    "\102\103\001\002\000\004\025\ufe1d\001\002\000\004\025" +
    "\ufe24\001\002\000\004\025\ufe1e\001\002\000\004\025\ufe22" +
    "\001\002\000\004\025\ufe21\001\002\000\004\060\327\001" +
    "\002\000\006\101\106\102\103\001\002\000\004\024\331" +
    "\001\002\000\010\061\077\101\106\102\103\001\002\000" +
    "\026\007\072\012\353\017\161\023\152\032\102\061\077" +
    "\066\062\070\355\101\070\102\103\001\002\000\020\027" +
    "\335\042\134\043\132\044\127\045\126\046\130\047\133" +
    "\001\002\000\024\042\134\043\132\044\127\045\126\046" +
    "\130\047\133\061\u0102\101\106\102\103\001\002\000\006" +
    "\043\340\102\337\001\002\000\004\076\342\001\002\000" +
    "\004\076\uff3c\001\002\000\004\102\341\001\002\000\004" +
    "\076\uff3d\001\002\000\026\007\072\012\353\017\161\023" +
    "\152\032\102\061\077\066\062\070\355\101\070\102\103" +
    "\001\002\000\030\007\072\012\353\017\161\023\152\031" +
    "\ufe2b\032\102\061\077\066\062\070\355\101\070\102\103" +
    "\001\002\000\030\007\072\012\353\017\161\023\152\031" +
    "\ufe2a\032\102\061\077\066\062\070\355\101\070\102\103" +
    "\001\002\000\030\007\072\012\353\017\161\023\152\031" +
    "\ufe30\032\102\061\077\066\062\070\355\101\070\102\103" +
    "\001\002\000\030\007\072\012\353\017\161\023\152\031" +
    "\ufe2c\032\102\061\077\066\062\070\355\101\070\102\103" +
    "\001\002\000\004\031\370\001\002\000\030\007\072\012" +
    "\353\017\161\023\152\031\ufe2d\032\102\061\077\066\062" +
    "\070\355\101\070\102\103\001\002\000\030\007\072\012" +
    "\353\017\161\023\152\031\ufe29\032\102\061\077\066\062" +
    "\070\355\101\070\102\103\001\002\000\030\007\072\012" +
    "\353\017\161\023\152\031\ufe2f\032\102\061\077\066\062" +
    "\070\355\101\070\102\103\001\002\000\004\076\363\001" +
    "\002\000\030\007\072\012\353\017\161\023\152\031\ufe2e" +
    "\032\102\061\077\066\062\070\355\101\070\102\103\001" +
    "\002\000\006\023\357\032\356\001\002\000\004\076\361" +
    "\001\002\000\004\076\360\001\002\000\004\031\ufe27\001" +
    "\002\000\004\031\ufe28\001\002\000\004\031\ufe38\001\002" +
    "\000\030\007\072\012\353\017\161\023\152\031\ufe31\032" +
    "\102\061\077\066\062\070\355\101\070\102\103\001\002" +
    "\000\004\031\ufe32\001\002\000\004\031\ufe39\001\002\000" +
    "\004\031\ufe33\001\002\000\004\031\ufe37\001\002\000\004" +
    "\101\371\001\002\000\004\076\372\001\002\000\040\007" +
    "\ufe3c\012\ufe3c\017\ufe3c\021\ufe3c\022\ufe3c\023\ufe3c\025\ufe3c" +
    "\031\ufe3c\032\ufe3c\061\ufe3c\066\ufe3c\070\ufe3c\074\ufe3c\101" +
    "\ufe3c\102\ufe3c\001\002\000\004\031\ufe36\001\002\000\004" +
    "\031\ufe3a\001\002\000\004\031\ufe34\001\002\000\004\031" +
    "\ufe35\001\002\000\022\042\134\043\132\044\127\045\126" +
    "\046\130\047\133\062\u0109\076\u010b\001\002\000\040\007" +
    "\uff3b\012\uff3b\017\uff3b\021\uff3b\022\uff3b\023\uff3b\025\uff3b" +
    "\031\uff3b\032\uff3b\061\uff3b\066\uff3b\070\uff3b\074\uff3b\101" +
    "\uff3b\102\uff3b\001\002\000\006\101\106\102\103\001\002" +
    "\000\006\101\106\102\103\001\002\000\016\042\134\043" +
    "\132\044\127\045\126\046\130\047\133\001\002\000\024" +
    "\042\134\043\132\044\127\045\126\046\130\047\133\061" +
    "\u0102\101\106\102\103\001\002\000\040\007\uff38\012\uff38" +
    "\017\uff38\021\uff38\022\uff38\023\uff38\025\uff38\031\uff38\032" +
    "\uff38\061\uff38\066\uff38\070\uff38\074\uff38\101\uff38\102\uff38" +
    "\001\002\000\026\042\134\043\132\044\127\045\126\046" +
    "\130\047\133\061\u0102\076\u0108\101\106\102\103\001\002" +
    "\000\040\007\uff37\012\uff37\017\uff37\021\uff37\022\uff37\023" +
    "\uff37\025\uff37\031\uff37\032\uff37\061\uff37\066\uff37\070\uff37" +
    "\074\uff37\101\uff37\102\uff37\001\002\000\040\007\uff35\012" +
    "\uff35\017\uff35\021\uff35\022\uff35\023\uff35\025\uff35\031\uff35" +
    "\032\uff35\061\uff35\066\uff35\070\uff35\074\uff35\101\uff35\102" +
    "\uff35\001\002\000\026\042\134\043\132\044\127\045\126" +
    "\046\130\047\133\061\u0102\076\u010e\101\106\102\103\001" +
    "\002\000\024\042\134\043\132\044\127\045\126\046\130" +
    "\047\133\061\u0102\101\106\102\103\001\002\000\040\007" +
    "\uff33\012\uff33\017\uff33\021\uff33\022\uff33\023\uff33\025\uff33" +
    "\031\uff33\032\uff33\061\uff33\066\uff33\070\uff33\074\uff33\101" +
    "\uff33\102\uff33\001\002\000\040\007\uff39\012\uff39\017\uff39" +
    "\021\uff39\022\uff39\023\uff39\025\uff39\031\uff39\032\uff39\061" +
    "\uff39\066\uff39\070\uff39\074\uff39\101\uff39\102\uff39\001\002" +
    "\000\040\007\uff36\012\uff36\017\uff36\021\uff36\022\uff36\023" +
    "\uff36\025\uff36\031\uff36\032\uff36\061\uff36\066\uff36\070\uff36" +
    "\074\uff36\101\uff36\102\uff36\001\002\000\040\007\uff34\012" +
    "\uff34\017\uff34\021\uff34\022\uff34\023\uff34\025\uff34\031\uff34" +
    "\032\uff34\061\uff34\066\uff34\070\uff34\074\uff34\101\uff34\102" +
    "\uff34\001\002\000\004\031\u0110\001\002\000\004\101\u0111" +
    "\001\002\000\004\076\u0112\001\002\000\040\007\ufe3b\012" +
    "\ufe3b\017\ufe3b\021\ufe3b\022\ufe3b\023\ufe3b\025\ufe3b\031\ufe3b" +
    "\032\ufe3b\061\ufe3b\066\ufe3b\070\ufe3b\074\ufe3b\101\ufe3b\102" +
    "\ufe3b\001\002\000\004\025\ufe25\001\002\000\004\025\ufe1f" +
    "\001\002\000\004\025\ufe20\001\002\000\004\074\uff74\001" +
    "\002\000\004\020\u0118\001\002\000\004\076\u0119\001\002" +
    "\000\030\007\072\012\u0124\017\100\021\u011c\022\u011a\023" +
    "\066\032\102\061\077\066\062\101\070\102\103\001\002" +
    "\000\004\076\u0163\001\002\000\032\007\072\012\u0124\017" +
    "\100\021\u011c\022\u011a\023\066\032\102\061\077\066\062" +
    "\074\uff0e\101\070\102\103\001\002\000\012\033\105\034" +
    "\111\101\106\102\103\001\002\000\032\007\072\012\u0124" +
    "\017\100\021\u011c\022\u011a\023\066\032\102\061\077\066" +
    "\062\074\uff11\101\070\102\103\001\002\000\032\007\072" +
    "\012\u0124\017\100\021\u011c\022\u011a\023\066\032\102\061" +
    "\077\066\062\074\uff10\101\070\102\103\001\002\000\032" +
    "\007\072\012\u0124\017\100\021\u011c\022\u011a\023\066\032" +
    "\102\061\077\066\062\074\uff0d\101\070\102\103\001\002" +
    "\000\032\007\072\012\u0124\017\100\021\u011c\022\u011a\023" +
    "\066\032\102\061\077\066\062\074\uff12\101\070\102\103" +
    "\001\002\000\032\007\072\012\u0124\017\100\021\u011c\022" +
    "\u011a\023\066\032\102\061\077\066\062\074\uff13\101\070" +
    "\102\103\001\002\000\032\007\072\012\u0124\017\100\021" +
    "\u011c\022\u011a\023\066\032\102\061\077\066\062\074\uff0f" +
    "\101\070\102\103\001\002\000\004\074\u0129\001\002\000" +
    "\004\076\u0127\001\002\000\032\007\072\012\u0124\017\100" +
    "\021\u011c\022\u011a\023\066\032\102\061\077\066\062\074" +
    "\uff14\101\070\102\103\001\002\000\004\074\uff1e\001\002" +
    "\000\032\007\072\012\u0124\017\100\021\u011c\022\u011a\023" +
    "\066\032\102\061\077\066\062\074\uff15\101\070\102\103" +
    "\001\002\000\004\074\uff16\001\002\000\004\017\u012a\001" +
    "\002\000\004\076\u012b\001\002\000\032\007\uff20\012\uff20" +
    "\017\uff20\021\uff20\022\uff20\023\uff20\032\uff20\061\uff20\066" +
    "\uff20\074\uff20\101\uff20\102\uff20\001\002\000\004\074\uff1a" +
    "\001\002\000\004\074\uff1d\001\002\000\004\074\uff1c\001" +
    "\002\000\004\074\uff17\001\002\000\004\074\uff19\001\002" +
    "\000\004\074\uff1b\001\002\000\004\020\u0134\001\002\000" +
    "\004\074\uff0b\001\002\000\004\076\u0135\001\002\000\030" +
    "\007\072\012\u0140\017\100\021\u0138\022\u0136\023\066\032" +
    "\102\061\077\066\062\101\070\102\103\001\002\000\004" +
    "\076\u014d\001\002\000\032\007\072\012\u0140\017\100\021" +
    "\u0138\022\u0136\023\066\032\102\061\077\066\062\074\ufee6" +
    "\101\070\102\103\001\002\000\012\033\105\034\111\101" +
    "\106\102\103\001\002\000\032\007\072\012\u0140\017\100" +
    "\021\u0138\022\u0136\023\066\032\102\061\077\066\062\074" +
    "\ufee9\101\070\102\103\001\002\000\032\007\072\012\u0140" +
    "\017\100\021\u0138\022\u0136\023\066\032\102\061\077\066" +
    "\062\074\ufee8\101\070\102\103\001\002\000\032\007\072" +
    "\012\u0140\017\100\021\u0138\022\u0136\023\066\032\102\061" +
    "\077\066\062\074\ufee5\101\070\102\103\001\002\000\032" +
    "\007\072\012\u0140\017\100\021\u0138\022\u0136\023\066\032" +
    "\102\061\077\066\062\074\ufeea\101\070\102\103\001\002" +
    "\000\032\007\072\012\u0140\017\100\021\u0138\022\u0136\023" +
    "\066\032\102\061\077\066\062\074\ufeeb\101\070\102\103" +
    "\001\002\000\032\007\072\012\u0140\017\100\021\u0138\022" +
    "\u0136\023\066\032\102\061\077\066\062\074\ufee7\101\070" +
    "\102\103\001\002\000\004\074\uff1f\001\002\000\004\076" +
    "\u0143\001\002\000\032\007\072\012\u0140\017\100\021\u0138" +
    "\022\u0136\023\066\032\102\061\077\066\062\074\ufeec\101" +
    "\070\102\103\001\002\000\004\074\ufef8\001\002\000\032" +
    "\007\072\012\u0140\017\100\021\u0138\022\u0136\023\066\032" +
    "\102\061\077\066\062\074\ufeed\101\070\102\103\001\002" +
    "\000\004\074\ufeee\001\002\000\004\074\ufef2\001\002\000" +
    "\004\074\ufef7\001\002\000\004\074\ufef6\001\002\000\004" +
    "\074\ufeef\001\002\000\004\074\ufef1\001\002\000\004\074" +
    "\ufef5\001\002\000\004\074\ufef3\001\002\000\004\074\ufef0" +
    "\001\002\000\024\007\072\012\u0155\017\100\023\066\032" +
    "\102\061\077\066\062\101\070\102\103\001\002\000\026" +
    "\007\072\012\u0155\017\100\023\066\032\102\061\077\066" +
    "\062\074\ufefa\101\070\102\103\001\002\000\026\007\072" +
    "\012\u0155\017\100\023\066\032\102\061\077\066\062\074" +
    "\ufefd\101\070\102\103\001\002\000\026\007\072\012\u0155" +
    "\017\100\023\066\032\102\061\077\066\062\074\ufefc\101" +
    "\070\102\103\001\002\000\026\007\072\012\u0155\017\100" +
    "\023\066\032\102\061\077\066\062\074\ufef9\101\070\102" +
    "\103\001\002\000\026\007\072\012\u0155\017\100\023\066" +
    "\032\102\061\077\066\062\074\ufefe\101\070\102\103\001" +
    "\002\000\026\007\072\012\u0155\017\100\023\066\032\102" +
    "\061\077\066\062\074\ufeff\101\070\102\103\001\002\000" +
    "\026\007\072\012\u0155\017\100\023\066\032\102\061\077" +
    "\066\062\074\ufefb\101\070\102\103\001\002\000\004\076" +
    "\u0159\001\002\000\026\007\072\012\u0155\017\100\023\066" +
    "\032\102\061\077\066\062\074\uff00\101\070\102\103\001" +
    "\002\000\004\074\ufef4\001\002\000\004\074\uff0a\001\002" +
    "\000\026\007\072\012\u0155\017\100\023\066\032\102\061" +
    "\077\066\062\074\uff01\101\070\102\103\001\002\000\004" +
    "\074\uff02\001\002\000\004\074\uff06\001\002\000\004\074" +
    "\uff09\001\002\000\004\074\uff08\001\002\000\004\074\uff03" +
    "\001\002\000\004\074\uff05\001\002\000\004\074\uff07\001" +
    "\002\000\004\074\uff04\001\002\000\004\074\uff18\001\002" +
    "\000\024\007\072\012\u0155\017\100\023\066\032\102\061" +
    "\077\066\062\101\070\102\103\001\002\000\004\074\uff0c" +
    "\001\002\000\016\042\134\043\132\044\127\045\126\046" +
    "\130\047\133\001\002\000\024\042\134\043\132\044\127" +
    "\045\126\046\130\047\133\061\u0102\101\106\102\103\001" +
    "\002\000\040\007\uff3a\012\uff3a\017\uff3a\021\uff3a\022\uff3a" +
    "\023\uff3a\025\uff3a\031\uff3a\032\uff3a\061\uff3a\066\uff3a\070" +
    "\uff3a\074\uff3a\101\uff3a\102\uff3a\001\002\000\026\007\072" +
    "\012\076\017\100\023\066\032\102\061\077\066\062\074" +
    "\uff6c\101\070\102\103\001\002\000\004\074\uff6d\001\002" +
    "\000\004\074\uff6f\001\002\000\004\074\uff73\001\002\000" +
    "\006\004\u016e\073\u016d\001\002\000\004\061\u0173\001\002" +
    "\000\004\061\u016f\001\002\000\004\100\u0170\001\002\000" +
    "\004\062\u0171\001\002\000\004\076\u0172\001\002\000\040" +
    "\007\uff21\012\uff21\017\uff21\021\uff21\022\uff21\023\uff21\025" +
    "\uff21\031\uff21\032\uff21\061\uff21\066\uff21\070\uff21\074\uff21" +
    "\101\uff21\102\uff21\001\002\000\004\062\u0174\001\002\000" +
    "\004\076\u0175\001\002\000\040\007\uff51\012\uff51\017\uff51" +
    "\021\uff51\022\uff51\023\uff51\025\uff51\031\uff51\032\uff51\061" +
    "\uff51\066\uff51\070\uff51\074\uff51\101\uff51\102\uff51\001\002" +
    "\000\004\074\uff72\001\002\000\004\101\u0199\001\002\000" +
    "\012\061\u0190\062\u018f\101\106\102\103\001\002\000\006" +
    "\063\u018a\076\u0189\001\002\000\020\007\u017d\033\105\034" +
    "\111\061\077\100\u0181\101\u017e\102\103\001\002\000\004" +
    "\076\u0188\001\002\000\020\042\134\043\132\044\127\045" +
    "\126\046\130\047\133\076\uff5d\001\002\000\004\065\u0183" +
    "\001\002\000\026\042\uff44\043\uff44\044\uff44\045\uff44\046" +
    "\uff44\047\uff44\061\u0178\076\uff44\101\106\102\103\001\002" +
    "\000\040\007\uff53\012\uff53\017\uff53\021\uff53\022\uff53\023" +
    "\uff53\025\uff53\031\uff53\032\uff53\061\uff53\066\uff53\070\uff53" +
    "\074\uff53\101\uff53\102\uff53\001\002\000\040\007\uff54\012" +
    "\uff54\017\uff54\021\uff54\022\uff54\023\uff54\025\uff54\031\uff54" +
    "\032\uff54\061\uff54\066\uff54\070\uff54\074\uff54\101\uff54\102" +
    "\uff54\001\002\000\004\076\uff5c\001\002\000\004\076\uff5e" +
    "\001\002\000\004\073\u0184\001\002\000\004\061\u0185\001" +
    "\002\000\004\062\u0186\001\002\000\004\076\u0187\001\002" +
    "\000\040\007\uff52\012\uff52\017\uff52\021\uff52\022\uff52\023" +
    "\uff52\025\uff52\031\uff52\032\uff52\061\uff52\066\uff52\070\uff52" +
    "\074\uff52\101\uff52\102\uff52\001\002\000\040\007\uff55\012" +
    "\uff55\017\uff55\021\uff55\022\uff55\023\uff55\025\uff55\031\uff55" +
    "\032\uff55\061\uff55\066\uff55\070\uff55\074\uff55\101\uff55\102" +
    "\uff55\001\002\000\040\007\uff24\012\uff24\017\uff24\021\uff24" +
    "\022\uff24\023\uff24\025\uff24\031\uff24\032\uff24\061\uff24\066" +
    "\uff24\070\uff24\074\uff24\101\uff24\102\uff24\001\002\000\006" +
    "\101\106\102\103\001\002\000\004\076\u018c\001\002\000" +
    "\040\007\uff25\012\uff25\017\uff25\021\uff25\022\uff25\023\uff25" +
    "\025\uff25\031\uff25\032\uff25\061\uff25\066\uff25\070\uff25\074" +
    "\uff25\101\uff25\102\uff25\001\002\000\006\063\u018a\076\uff28" +
    "\001\002\000\004\076\uff29\001\002\000\004\076\u0198\001" +
    "\002\000\006\101\106\102\103\001\002\000\006\063\u018a" +
    "\076\u0192\001\002\000\040\007\uff27\012\uff27\017\uff27\021" +
    "\uff27\022\uff27\023\uff27\025\uff27\031\uff27\032\uff27\061\uff27" +
    "\066\uff27\070\uff27\074\uff27\101\uff27\102\uff27\001\002\000" +
    "\004\076\u0194\001\002\000\040\007\uff22\012\uff22\017\uff22" +
    "\021\uff22\022\uff22\023\uff22\025\uff22\031\uff22\032\uff22\061" +
    "\uff22\066\uff22\070\uff22\074\uff22\101\uff22\102\uff22\001\002" +
    "\000\004\062\u0196\001\002\000\004\076\u0197\001\002\000" +
    "\040\007\uff23\012\uff23\017\uff23\021\uff23\022\uff23\023\uff23" +
    "\025\uff23\031\uff23\032\uff23\061\uff23\066\uff23\070\uff23\074" +
    "\uff23\101\uff23\102\uff23\001\002\000\040\007\uff26\012\uff26" +
    "\017\uff26\021\uff26\022\uff26\023\uff26\025\uff26\031\uff26\032" +
    "\uff26\061\uff26\066\uff26\070\uff26\074\uff26\101\uff26\102\uff26" +
    "\001\002\000\004\060\u019a\001\002\000\014\033\105\034" +
    "\111\100\u0181\101\106\102\103\001\002\000\004\076\u019d" +
    "\001\002\000\004\076\uff5d\001\002\000\040\007\uff56\012" +
    "\uff56\017\uff56\021\uff56\022\uff56\023\uff56\025\uff56\031\uff56" +
    "\032\uff56\061\uff56\066\uff56\070\uff56\074\uff56\101\uff56\102" +
    "\uff56\001\002\000\004\036\u019f\001\002\000\004\076\u01a0" +
    "\001\002\000\006\012\017\040\016\001\002\000\004\074" +
    "\ufffd\001\002\000\004\060\u01a3\001\002\000\006\101\106" +
    "\102\103\001\002\000\004\024\u01a5\001\002\000\010\061" +
    "\077\101\106\102\103\001\002\000\026\007\072\012\u01b2" +
    "\017\u01b4\023\066\032\u01b5\061\077\066\062\070\u01b7\101" +
    "\070\102\103\001\002\000\020\027\u01a8\042\134\043\132" +
    "\044\127\045\126\046\130\047\133\001\002\000\006\043" +
    "\340\102\337\001\002\000\004\076\u01aa\001\002\000\026" +
    "\007\072\012\u01b2\017\u01b4\023\066\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\030\007\072" +
    "\012\u01b2\017\u01b4\023\066\031\ufed8\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\030\007\072" +
    "\012\u01b2\017\u01b4\023\066\031\ufed4\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\030\007\072" +
    "\012\u01b2\017\u01b4\023\066\031\ufed3\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\030\007\072" +
    "\012\u01b2\017\u01b4\023\066\031\ufed5\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\030\007\072" +
    "\012\u01b2\017\u01b4\023\066\031\ufed6\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\030\007\072" +
    "\012\u01b2\017\u01b4\023\066\031\ufed2\032\u01b5\061\077\066" +
    "\062\070\u01b7\101\070\102\103\001\002\000\004\031\u0233" +
    "\001\002\000\004\076\u0231\001\002\000\030\007\072\012" +
    "\u01b2\017\u01b4\023\066\031\ufed1\032\u01b5\061\077\066\062" +
    "\070\u01b7\101\070\102\103\001\002\000\012\033\105\034" +
    "\111\101\106\102\103\001\002\000\004\026\u01bb\001\002" +
    "\000\030\007\072\012\u01b2\017\u01b4\023\066\031\ufed7\032" +
    "\u01b5\061\077\066\062\070\u01b7\101\070\102\103\001\002" +
    "\000\004\023\u01b8\001\002\000\004\076\u01b9\001\002\000" +
    "\004\031\ufed0\001\002\000\004\031\ufee1\001\002\000\012" +
    "\033\105\034\111\101\106\102\103\001\002\000\004\076" +
    "\u01bd\001\002\000\026\007\072\012\u01c4\017\u01b4\023\066" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe85" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe82" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe81" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe83" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe84" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe80" +
    "\032\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001" +
    "\002\000\004\076\u01d1\001\002\000\004\025\u01cf\001\002" +
    "\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe7e\032" +
    "\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001\002" +
    "\000\030\007\072\012\u01c4\017\u01b4\023\066\025\ufe7f\032" +
    "\u01b5\061\077\066\062\070\u01c8\101\070\102\103\001\002" +
    "\000\006\023\u01ca\032\u01c9\001\002\000\004\076\u01cc\001" +
    "\002\000\004\076\u01cb\001\002\000\004\025\ufe7c\001\002" +
    "\000\004\025\ufe7d\001\002\000\004\025\ufe88\001\002\000" +
    "\004\025\ufe89\001\002\000\004\076\u01d0\001\002\000\040" +
    "\007\ufe90\012\ufe90\017\ufe90\021\ufe90\022\ufe90\023\ufe90\025" +
    "\ufe90\031\ufe90\032\ufe90\061\ufe90\066\ufe90\070\ufe90\074\ufe90" +
    "\101\ufe90\102\ufe90\001\002\000\030\007\072\012\u01c4\017" +
    "\u01b4\023\066\025\ufe86\032\u01b5\061\077\066\062\070\u01c8" +
    "\101\070\102\103\001\002\000\004\025\ufe87\001\002\000" +
    "\004\025\ufe8a\001\002\000\004\025\ufe8e\001\002\000\004" +
    "\025\ufe8d\001\002\000\004\025\ufe8b\001\002\000\004\025" +
    "\ufe8c\001\002\000\004\025\ufe8f\001\002\000\004\020\u01da" +
    "\001\002\000\004\076\u01db\001\002\000\032\007\072\012" +
    "\u01e5\017\u01b4\021\u01df\022\u01dc\023\066\032\u01b5\061\077" +
    "\066\062\070\u01e8\101\070\102\103\001\002\000\004\076" +
    "\u022e\001\002\000\034\007\072\012\u01e5\017\u01b4\021\u01df" +
    "\022\u01dc\023\066\032\u01b5\061\077\066\062\070\u01e8\074" +
    "\ufebd\101\070\102\103\001\002\000\034\007\072\012\u01e5" +
    "\017\u01b4\021\u01df\022\u01dc\023\066\032\u01b5\061\077\066" +
    "\062\070\u01e8\074\ufec0\101\070\102\103\001\002\000\012" +
    "\033\105\034\111\101\106\102\103\001\002\000\034\007" +
    "\072\012\u01e5\017\u01b4\021\u01df\022\u01dc\023\066\032\u01b5" +
    "\061\077\066\062\070\u01e8\074\ufebf\101\070\102\103\001" +
    "\002\000\034\007\072\012\u01e5\017\u01b4\021\u01df\022\u01dc" +
    "\023\066\032\u01b5\061\077\066\062\070\u01e8\074\ufec1\101" +
    "\070\102\103\001\002\000\034\007\072\012\u01e5\017\u01b4" +
    "\021\u01df\022\u01dc\023\066\032\u01b5\061\077\066\062\070" +
    "\u01e8\074\ufec2\101\070\102\103\001\002\000\034\007\072" +
    "\012\u01e5\017\u01b4\021\u01df\022\u01dc\023\066\032\u01b5\061" +
    "\077\066\062\070\u01e8\074\ufebe\101\070\102\103\001\002" +
    "\000\004\074\u01ef\001\002\000\004\076\u01ed\001\002\000" +
    "\034\007\072\012\u01e5\017\u01b4\021\u01df\022\u01dc\023\066" +
    "\032\u01b5\061\077\066\062\070\u01e8\074\ufebc\101\070\102" +
    "\103\001\002\000\034\007\072\012\u01e5\017\u01b4\021\u01df" +
    "\022\u01dc\023\066\032\u01b5\061\077\066\062\070\u01e8\074" +
    "\ufec3\101\070\102\103\001\002\000\004\023\u01e9\001\002" +
    "\000\004\076\u01ea\001\002\000\004\074\ufebb\001\002\000" +
    "\004\074\ufecd\001\002\000\004\074\ufec6\001\002\000\034" +
    "\007\072\012\u01e5\017\u01b4\021\u01df\022\u01dc\023\066\032" +
    "\u01b5\061\077\066\062\070\u01e8\074\ufec4\101\070\102\103" +
    "\001\002\000\004\074\ufec5\001\002\000\004\017\u01f0\001" +
    "\002\000\004\076\u01f1\001\002\000\040\007\ufecf\012\ufecf" +
    "\017\ufecf\021\ufecf\022\ufecf\023\ufecf\025\ufecf\031\ufecf\032" +
    "\ufecf\061\ufecf\066\ufecf\070\ufecf\074\ufecf\101\ufecf\102\ufecf" +
    "\001\002\000\004\074\ufec9\001\002\000\004\074\ufecc\001" +
    "\002\000\004\074\ufecb\001\002\000\004\074\ufec8\001\002" +
    "\000\004\020\u01f8\001\002\000\004\074\ufeb9\001\002\000" +
    "\004\076\u01f9\001\002\000\032\007\072\012\u0202\017\u01b4" +
    "\021\u01fc\022\u01fa\023\066\032\u01b5\061\077\066\062\070" +
    "\u0206\101\070\102\103\001\002\000\004\076\u0214\001\002" +
    "\000\034\007\072\012\u0202\017\u01b4\021\u01fc\022\u01fa\023" +
    "\066\032\u01b5\061\077\066\062\070\u0206\074\ufea6\101\070" +
    "\102\103\001\002\000\012\033\105\034\111\101\106\102" +
    "\103\001\002\000\034\007\072\012\u0202\017\u01b4\021\u01fc" +
    "\022\u01fa\023\066\032\u01b5\061\077\066\062\070\u0206\074" +
    "\ufea9\101\070\102\103\001\002\000\034\007\072\012\u0202" +
    "\017\u01b4\021\u01fc\022\u01fa\023\066\032\u01b5\061\077\066" +
    "\062\070\u0206\074\ufea8\101\070\102\103\001\002\000\034" +
    "\007\072\012\u0202\017\u01b4\021\u01fc\022\u01fa\023\066\032" +
    "\u01b5\061\077\066\062\070\u0206\074\ufeaa\101\070\102\103" +
    "\001\002\000\034\007\072\012\u0202\017\u01b4\021\u01fc\022" +
    "\u01fa\023\066\032\u01b5\061\077\066\062\070\u0206\074\ufeab" +
    "\101\070\102\103\001\002\000\034\007\072\012\u0202\017" +
    "\u01b4\021\u01fc\022\u01fa\023\066\032\u01b5\061\077\066\062" +
    "\070\u0206\074\ufea7\101\070\102\103\001\002\000\004\076" +
    "\u020b\001\002\000\034\007\072\012\u0202\017\u01b4\021\u01fc" +
    "\022\u01fa\023\066\032\u01b5\061\077\066\062\070\u0206\074" +
    "\ufea5\101\070\102\103\001\002\000\004\074\ufece\001\002" +
    "\000\034\007\072\012\u0202\017\u01b4\021\u01fc\022\u01fa\023" +
    "\066\032\u01b5\061\077\066\062\070\u0206\074\ufeac\101\070" +
    "\102\103\001\002\000\004\023\u0207\001\002\000\004\076" +
    "\u0208\001\002\000\004\074\ufea4\001\002\000\004\074\ufeb8" +
    "\001\002\000\004\074\ufeaf\001\002\000\034\007\072\012" +
    "\u0202\017\u01b4\021\u01fc\022\u01fa\023\066\032\u01b5\061\077" +
    "\066\062\070\u0206\074\ufead\101\070\102\103\001\002\000" +
    "\004\074\ufeae\001\002\000\004\074\ufeb2\001\002\000\004" +
    "\074\ufeb7\001\002\000\004\074\ufeb6\001\002\000\004\074" +
    "\ufeb1\001\002\000\004\074\ufeb5\001\002\000\004\074\ufeb3" +
    "\001\002\000\004\074\ufeb0\001\002\000\026\007\072\012" +
    "\u021b\017\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f" +
    "\101\070\102\103\001\002\000\030\007\072\012\u021b\017" +
    "\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe93" +
    "\101\070\102\103\001\002\000\030\007\072\012\u021b\017" +
    "\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe96" +
    "\101\070\102\103\001\002\000\030\007\072\012\u021b\017" +
    "\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe95" +
    "\101\070\102\103\001\002\000\030\007\072\012\u021b\017" +
    "\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe97" +
    "\101\070\102\103\001\002\000\030\007\072\012\u021b\017" +
    "\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe98" +
    "\101\070\102\103\001\002\000\030\007\072\012\u021b\017" +
    "\u01b4\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe94" +
    "\101\070\102\103\001\002\000\004\076\u0224\001\002\000" +
    "\004\074\ufeb4\001\002\000\030\007\072\012\u021b\017\u01b4" +
    "\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe92\101" +
    "\070\102\103\001\002\000\030\007\072\012\u021b\017\u01b4" +
    "\023\066\032\u01b5\061\077\066\062\070\u021f\074\ufe99\101" +
    "\070\102\103\001\002\000\004\023\u0220\001\002\000\004" +
    "\076\u0221\001\002\000\004\074\ufe91\001\002\000\004\074" +
    "\ufea3\001\002\000\004\074\ufe9c\001\002\000\030\007\072" +
    "\012\u021b\017\u01b4\023\066\032\u01b5\061\077\066\062\070" +
    "\u021f\074\ufe9a\101\070\102\103\001\002\000\004\074\ufe9b" +
    "\001\002\000\004\074\ufe9f\001\002\000\004\074\ufea2\001" +
    "\002\000\004\074\ufea1\001\002\000\004\074\ufe9e\001\002" +
    "\000\004\074\ufea0\001\002\000\004\074\ufe9d\001\002\000" +
    "\004\074\ufeca\001\002\000\004\074\ufec7\001\002\000\026" +
    "\007\072\012\u021b\017\u01b4\023\066\032\u01b5\061\077\066" +
    "\062\070\u021f\101\070\102\103\001\002\000\004\074\ufeba" +
    "\001\002\000\004\031\ufedb\001\002\000\030\007\072\012" +
    "\u01b2\017\u01b4\023\066\031\ufed9\032\u01b5\061\077\066\062" +
    "\070\u01b7\101\070\102\103\001\002\000\004\031\ufeda\001" +
    "\002\000\004\101\u0234\001\002\000\004\076\u0235\001\002" +
    "\000\040\007\ufee4\012\ufee4\017\ufee4\021\ufee4\022\ufee4\023" +
    "\ufee4\025\ufee4\031\ufee4\032\ufee4\061\ufee4\066\ufee4\070\ufee4" +
    "\074\ufee4\101\ufee4\102\ufee4\001\002\000\004\031\ufedc\001" +
    "\002\000\004\031\ufee0\001\002\000\004\031\ufedf\001\002" +
    "\000\004\031\ufedd\001\002\000\004\031\ufede\001\002\000" +
    "\004\031\ufee2\001\002\000\004\031\u023d\001\002\000\004" +
    "\101\u023e\001\002\000\004\076\u023f\001\002\000\040\007" +
    "\ufee3\012\ufee3\017\ufee3\021\ufee3\022\ufee3\023\ufee3\025\ufee3" +
    "\031\ufee3\032\ufee3\061\ufee3\066\ufee3\070\ufee3\074\ufee3\101" +
    "\ufee3\102\ufee3\001\002\000\004\074\uff6e\001\002\000\004" +
    "\074\uff70\001\002\000\004\074\uff71\001\002\000\006\060" +
    "\u0245\067\u0244\001\002\000\010\013\042\014\045\015\043" +
    "\001\002\000\016\033\105\034\111\061\077\100\u0181\101" +
    "\106\102\103\001\002\000\004\076\u0248\001\002\000\040" +
    "\007\uff57\012\uff57\017\uff57\021\uff57\022\uff57\023\uff57\025" +
    "\uff57\031\uff57\032\uff57\061\uff57\066\uff57\070\uff57\074\uff57" +
    "\101\uff57\102\uff57\001\002\000\040\007\uff58\012\uff58\017" +
    "\uff58\021\uff58\022\uff58\023\uff58\025\uff58\031\uff58\032\uff58" +
    "\061\uff58\066\uff58\070\uff58\074\uff58\101\uff58\102\uff58\001" +
    "\002\000\006\060\u024b\076\u024a\001\002\000\040\007\uff5b" +
    "\012\uff5b\017\uff5b\021\uff5b\022\uff5b\023\uff5b\025\uff5b\031" +
    "\uff5b\032\uff5b\061\uff5b\066\uff5b\070\uff5b\074\uff5b\101\uff5b" +
    "\102\uff5b\001\002\000\014\033\105\034\111\100\u0181\101" +
    "\u017e\102\103\001\002\000\004\076\u024e\001\002\000\040" +
    "\007\uff59\012\uff59\017\uff59\021\uff59\022\uff59\023\uff59\025" +
    "\uff59\031\uff59\032\uff59\061\uff59\066\uff59\070\uff59\074\uff59" +
    "\101\uff59\102\uff59\001\002\000\040\007\uff5a\012\uff5a\017" +
    "\uff5a\021\uff5a\022\uff5a\023\uff5a\025\uff5a\031\uff5a\032\uff5a" +
    "\061\uff5a\066\uff5a\070\uff5a\074\uff5a\101\uff5a\102\uff5a\001" +
    "\002\000\004\074\uff75\001\002\000\004\067\u0256\001\002" +
    "\000\004\101\u0252\001\002\000\004\067\u0253\001\002\000" +
    "\010\013\042\014\045\015\043\001\002\000\012\016\055" +
    "\062\054\063\056\101\053\001\002\000\006\067\uff61\076" +
    "\uff61\001\002\000\010\013\042\014\045\015\043\001\002" +
    "\000\012\016\055\062\054\063\056\101\053\001\002\000" +
    "\006\067\uff60\076\uff60\001\002\000\004\067\u025a\001\002" +
    "\000\010\013\042\014\045\015\043\001\002\000\012\016" +
    "\055\062\054\063\056\101\053\001\002\000\006\067\uff63" +
    "\076\uff63\001\002\000\010\013\042\014\045\015\043\001" +
    "\002\000\012\016\055\062\054\063\056\101\053\001\002" +
    "\000\006\067\uff62\076\uff62\001\002\000\004\062\u0261\001" +
    "\002\000\004\076\u0262\001\002\000\024\007\072\012\076" +
    "\017\100\023\066\032\102\061\077\066\062\101\070\102" +
    "\103\001\002\000\004\074\u0264\001\002\000\004\036\u0265" +
    "\001\002\000\004\076\u0266\001\002\000\004\074\ufffb\001" +
    "\002\000\004\061\u0268\001\002\000\012\016\055\062\054" +
    "\063\056\101\053\001\002\000\004\067\u026a\001\002\000" +
    "\010\013\042\014\045\015\043\001\002\000\004\076\u026c" +
    "\001\002\000\024\007\072\012\u0276\017\u0277\023\u0270\032" +
    "\u0278\061\077\066\062\101\070\102\103\001\002\000\026" +
    "\007\072\012\u0276\017\u0277\023\u0270\032\u0278\061\077\066" +
    "\062\074\uffe4\101\070\102\103\001\002\000\026\007\072" +
    "\012\u0276\017\u0277\023\u0270\032\u0278\061\077\066\062\074" +
    "\uffe7\101\070\102\103\001\002\000\026\007\072\012\u0276" +
    "\017\u0277\023\u0270\032\u0278\061\077\066\062\074\uffe3\101" +
    "\070\102\103\001\002\000\004\101\u02fc\001\002\000\026" +
    "\007\072\012\u0276\017\u0277\023\u0270\032\u0278\061\077\066" +
    "\062\074\uffe8\101\070\102\103\001\002\000\026\007\072" +
    "\012\u0276\017\u0277\023\u0270\032\u0278\061\077\066\062\074" +
    "\uffe5\101\070\102\103\001\002\000\026\007\072\012\u0276" +
    "\017\u0277\023\u0270\032\u0278\061\077\066\062\074\uffe6\101" +
    "\070\102\103\001\002\000\026\007\072\012\u0276\017\u0277" +
    "\023\u0270\032\u0278\061\077\066\062\074\uffe2\101\070\102" +
    "\103\001\002\000\004\074\u02f4\001\002\000\004\076\u02f2" +
    "\001\002\000\012\033\105\034\111\101\106\102\103\001" +
    "\002\000\004\026\u027b\001\002\000\026\007\072\012\u0276" +
    "\017\u0277\023\u0270\032\u0278\061\077\066\062\074\uffe9\101" +
    "\070\102\103\001\002\000\004\074\ufff3\001\002\000\012" +
    "\033\105\034\111\101\106\102\103\001\002\000\004\076" +
    "\u027d\001\002\000\026\007\072\012\u0285\017\u0277\023\u0270" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff93" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff96" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff92" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff90" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff94" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff95" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff91" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\004\076\u0292\001\002\000\004\025\u0290\001\002" +
    "\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff97\032" +
    "\u0278\061\077\066\062\070\u0288\101\070\102\103\001\002" +
    "\000\010\023\u028b\032\u028a\035\u0289\001\002\000\004\076" +
    "\u028e\001\002\000\004\076\u028d\001\002\000\004\076\u028c" +
    "\001\002\000\004\025\uff8d\001\002\000\004\025\uff8f\001" +
    "\002\000\004\025\uff8e\001\002\000\004\025\uffa1\001\002" +
    "\000\004\076\u0291\001\002\000\040\007\uffa2\012\uffa2\017" +
    "\uffa2\021\uffa2\022\uffa2\023\uffa2\025\uffa2\031\uffa2\032\uffa2" +
    "\061\uffa2\066\uffa2\070\uffa2\074\uffa2\101\uffa2\102\uffa2\001" +
    "\002\000\030\007\072\012\u0285\017\u0277\023\u0270\025\uff98" +
    "\032\u0278\061\077\066\062\070\u0288\101\070\102\103\001" +
    "\002\000\004\025\uff99\001\002\000\004\025\uff9b\001\002" +
    "\000\004\025\uff9f\001\002\000\004\025\uff9e\001\002\000" +
    "\004\025\uff9a\001\002\000\004\025\uff9c\001\002\000\004" +
    "\025\uffa0\001\002\000\004\025\uff9d\001\002\000\004\020" +
    "\u029c\001\002\000\004\076\u029d\001\002\000\032\007\072" +
    "\012\u02a8\017\u0277\021\u029f\022\u029e\023\u0270\032\u0278\061" +
    "\077\066\062\070\u02aa\101\070\102\103\001\002\000\004" +
    "\076\u02f0\001\002\000\012\033\105\034\111\101\106\102" +
    "\103\001\002\000\034\007\072\012\u02a8\017\u0277\021\u029f" +
    "\022\u029e\023\u0270\032\u0278\061\077\066\062\070\u02aa\074" +
    "\uffd2\101\070\102\103\001\002\000\034\007\072\012\u02a8" +
    "\017\u0277\021\u029f\022\u029e\023\u0270\032\u0278\061\077\066" +
    "\062\070\u02aa\074\uffd5\101\070\102\103\001\002\000\034" +
    "\007\072\012\u02a8\017\u0277\021\u029f\022\u029e\023\u0270\032" +
    "\u0278\061\077\066\062\070\u02aa\074\uffd1\101\070\102\103" +
    "\001\002\000\034\007\072\012\u02a8\017\u0277\021\u029f\022" +
    "\u029e\023\u0270\032\u0278\061\077\066\062\070\u02aa\074\uffce" +
    "\101\070\102\103\001\002\000\034\007\072\012\u02a8\017" +
    "\u0277\021\u029f\022\u029e\023\u0270\032\u0278\061\077\066\062" +
    "\070\u02aa\074\uffd3\101\070\102\103\001\002\000\034\007" +
    "\072\012\u02a8\017\u0277\021\u029f\022\u029e\023\u0270\032\u0278" +
    "\061\077\066\062\070\u02aa\074\uffd4\101\070\102\103\001" +
    "\002\000\034\007\072\012\u02a8\017\u0277\021\u029f\022\u029e" +
    "\023\u0270\032\u0278\061\077\066\062\070\u02aa\074\uffd0\101" +
    "\070\102\103\001\002\000\004\074\u02b0\001\002\000\004" +
    "\076\u02ae\001\002\000\034\007\072\012\u02a8\017\u0277\021" +
    "\u029f\022\u029e\023\u0270\032\u0278\061\077\066\062\070\u02aa" +
    "\074\uffcf\101\070\102\103\001\002\000\004\035\u02ab\001" +
    "\002\000\004\076\u02ac\001\002\000\004\074\uffcd\001\002" +
    "\000\004\074\uffd9\001\002\000\034\007\072\012\u02a8\017" +
    "\u0277\021\u029f\022\u029e\023\u0270\032\u0278\061\077\066\062" +
    "\070\u02aa\074\uffd6\101\070\102\103\001\002\000\004\074" +
    "\uffd7\001\002\000\004\017\u02b1\001\002\000\004\076\u02b2" +
    "\001\002\000\040\007\uffe1\012\uffe1\017\uffe1\021\uffe1\022" +
    "\uffe1\023\uffe1\025\uffe1\031\uffe1\032\uffe1\061\uffe1\066\uffe1" +
    "\070\uffe1\074\uffe1\101\uffe1\102\uffe1\001\002\000\004\074" +
    "\uffdb\001\002\000\004\074\uffde\001\002\000\004\074\uffdd" +
    "\001\002\000\004\074\uffd8\001\002\000\004\074\uffda\001" +
    "\002\000\004\074\uffdf\001\002\000\004\074\uffdc\001\002" +
    "\000\004\020\u02bc\001\002\000\004\074\uffcb\001\002\000" +
    "\004\076\u02bd\001\002\000\032\007\072\012\u02c8\017\u0277" +
    "\021\u02bf\022\u02be\023\u0270\032\u0278\061\077\066\062\070" +
    "\u02ca\101\070\102\103\001\002\000\004\076\u02d8\001\002" +
    "\000\012\033\105\034\111\101\106\102\103\001\002\000" +
    "\034\007\072\012\u02c8\017\u0277\021\u02bf\022\u02be\023\u0270" +
    "\032\u0278\061\077\066\062\070\u02ca\074\uffa8\101\070\102" +
    "\103\001\002\000\034\007\072\012\u02c8\017\u0277\021\u02bf" +
    "\022\u02be\023\u0270\032\u0278\061\077\066\062\070\u02ca\074" +
    "\uffab\101\070\102\103\001\002\000\034\007\072\012\u02c8" +
    "\017\u0277\021\u02bf\022\u02be\023\u0270\032\u0278\061\077\066" +
    "\062\070\u02ca\074\uffa7\101\070\102\103\001\002\000\034" +
    "\007\072\012\u02c8\017\u0277\021\u02bf\022\u02be\023\u0270\032" +
    "\u0278\061\077\066\062\070\u02ca\074\uffa4\101\070\102\103" +
    "\001\002\000\034\007\072\012\u02c8\017\u0277\021\u02bf\022" +
    "\u02be\023\u0270\032\u0278\061\077\066\062\070\u02ca\074\uffa9" +
    "\101\070\102\103\001\002\000\034\007\072\012\u02c8\017" +
    "\u0277\021\u02bf\022\u02be\023\u0270\032\u0278\061\077\066\062" +
    "\070\u02ca\074\uffaa\101\070\102\103\001\002\000\034\007" +
    "\072\012\u02c8\017\u0277\021\u02bf\022\u02be\023\u0270\032\u0278" +
    "\061\077\066\062\070\u02ca\074\uffa6\101\070\102\103\001" +
    "\002\000\004\074\uffe0\001\002\000\004\076\u02ce\001\002" +
    "\000\034\007\072\012\u02c8\017\u0277\021\u02bf\022\u02be\023" +
    "\u0270\032\u0278\061\077\066\062\070\u02ca\074\uffa5\101\070" +
    "\102\103\001\002\000\004\035\u02cb\001\002\000\004\076" +
    "\u02cc\001\002\000\004\074\uffa3\001\002\000\004\074\uffaf" +
    "\001\002\000\034\007\072\012\u02c8\017\u0277\021\u02bf\022" +
    "\u02be\023\u0270\032\u0278\061\077\066\062\070\u02ca\074\uffac" +
    "\101\070\102\103\001\002\000\004\074\uffad\001\002\000" +
    "\004\074\uffb1\001\002\000\004\074\uffb6\001\002\000\004" +
    "\074\uffb5\001\002\000\004\074\uffae\001\002\000\004\074" +
    "\uffb0\001\002\000\004\074\uffb7\001\002\000\004\074\uffb4" +
    "\001\002\000\004\074\uffb2\001\002\000\026\007\072\012" +
    "\u02e1\017\u0277\023\u0270\032\u0278\061\077\066\062\070\u02e3" +
    "\101\070\102\103\001\002\000\004\074\uffb3\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffbd\101\070\102\103\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffc0\101\070\102\103\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffbc\101\070\102\103\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffb9\101\070\102\103\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffbe\101\070\102\103\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffbf\101\070\102\103\001\002\000" +
    "\030\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\074\uffbb\101\070\102\103\001\002\000" +
    "\004\076\u02e7\001\002\000\030\007\072\012\u02e1\017\u0277" +
    "\023\u0270\032\u0278\061\077\066\062\070\u02e3\074\uffba\101" +
    "\070\102\103\001\002\000\004\035\u02e4\001\002\000\004" +
    "\076\u02e5\001\002\000\004\074\uffb8\001\002\000\004\074" +
    "\uffc4\001\002\000\030\007\072\012\u02e1\017\u0277\023\u0270" +
    "\032\u0278\061\077\066\062\070\u02e3\074\uffc1\101\070\102" +
    "\103\001\002\000\004\074\uffc2\001\002\000\004\074\uffc6" +
    "\001\002\000\004\074\uffc9\001\002\000\004\074\uffc8\001" +
    "\002\000\004\074\uffc3\001\002\000\004\074\uffc5\001\002" +
    "\000\004\074\uffca\001\002\000\004\074\uffc7\001\002\000" +
    "\026\007\072\012\u02e1\017\u0277\023\u0270\032\u0278\061\077" +
    "\066\062\070\u02e3\101\070\102\103\001\002\000\004\074" +
    "\uffcc\001\002\000\026\007\072\012\u0276\017\u0277\023\u0270" +
    "\032\u0278\061\077\066\062\074\uffea\101\070\102\103\001" +
    "\002\000\004\074\uffeb\001\002\000\004\035\u02f5\001\002" +
    "\000\004\076\u02f6\001\002\000\006\012\017\040\016\001" +
    "\002\000\004\074\ufffc\001\002\000\004\074\uffec\001\002" +
    "\000\004\074\ufff0\001\002\000\004\074\uffef\001\002\000" +
    "\004\074\ufff2\001\002\000\004\060\u02fd\001\002\000\006" +
    "\101\106\102\103\001\002\000\004\024\u02ff\001\002\000" +
    "\010\061\077\101\106\102\103\001\002\000\026\007\072" +
    "\012\u030c\017\u0277\023\u0270\032\u0278\061\077\066\062\070" +
    "\u030f\101\070\102\103\001\002\000\020\027\u0302\042\134" +
    "\043\132\044\127\045\126\046\130\047\133\001\002\000" +
    "\006\043\340\102\337\001\002\000\004\076\u0304\001\002" +
    "\000\026\007\072\012\u030c\017\u0277\023\u0270\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff7b\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff7e\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff7a\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff80\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff7c\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff7d\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\030" +
    "\007\072\012\u030c\017\u0277\023\u0270\031\uff79\032\u0278\061" +
    "\077\066\062\070\u030f\101\070\102\103\001\002\000\004" +
    "\076\u031a\001\002\000\004\031\u0317\001\002\000\030\007" +
    "\072\012\u030c\017\u0277\023\u0270\031\uff7f\032\u0278\061\077" +
    "\066\062\070\u030f\101\070\102\103\001\002\000\010\023" +
    "\u0312\032\u0311\035\u0310\001\002\000\004\076\u0315\001\002" +
    "\000\004\076\u0314\001\002\000\004\076\u0313\001\002\000" +
    "\004\031\uff76\001\002\000\004\031\uff78\001\002\000\004" +
    "\031\uff77\001\002\000\004\031\uff89\001\002\000\004\101" +
    "\u0318\001\002\000\004\076\u0319\001\002\000\040\007\uff8c" +
    "\012\uff8c\017\uff8c\021\uff8c\022\uff8c\023\uff8c\025\uff8c\031" +
    "\uff8c\032\uff8c\061\uff8c\066\uff8c\070\uff8c\074\uff8c\101\uff8c" +
    "\102\uff8c\001\002\000\030\007\072\012\u030c\017\u0277\023" +
    "\u0270\031\uff81\032\u0278\061\077\066\062\070\u030f\101\070" +
    "\102\103\001\002\000\004\031\uff82\001\002\000\004\031" +
    "\uff83\001\002\000\004\031\uff87\001\002\000\004\031\uff86" +
    "\001\002\000\004\031\uff8a\001\002\000\004\031\uff84\001" +
    "\002\000\004\031\uff88\001\002\000\004\031\uff85\001\002" +
    "\000\004\031\u0324\001\002\000\004\101\u0325\001\002\000" +
    "\004\076\u0326\001\002\000\040\007\uff8b\012\uff8b\017\uff8b" +
    "\021\uff8b\022\uff8b\023\uff8b\025\uff8b\031\uff8b\032\uff8b\061" +
    "\uff8b\066\uff8b\070\uff8b\074\uff8b\101\uff8b\102\uff8b\001\002" +
    "\000\004\074\uffed\001\002\000\004\074\ufff1\001\002\000" +
    "\004\074\uffee\001\002\000\004\041\u032b\001\002\000\004" +
    "\076\u032c\001\002\000\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u032a\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\002\007\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\014\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\003\020\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\016\027\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\032\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\036\001\001\000\002" +
    "\001\001\000\006\011\043\040\040\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\016\046\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\004\056" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\072" +
    "\006\062\010\063\014\066\020\100\026\060\031\064\033" +
    "\074\042\070\047\073\001\001\000\026\005\072\006\062" +
    "\010\063\014\u024e\020\100\026\060\031\064\033\074\042" +
    "\070\047\073\001\001\000\002\001\001\000\026\005\072" +
    "\006\062\010\063\014\u0241\020\100\026\060\031\064\033" +
    "\074\042\070\047\073\001\001\000\026\005\072\006\062" +
    "\010\063\014\u0240\020\100\026\060\031\064\033\074\042" +
    "\070\047\073\001\001\000\026\005\072\006\062\010\063" +
    "\014\u023f\020\100\026\060\031\064\033\074\042\070\047" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\033\u0178\001\001\000\026\005\072\006\062\010\063\014" +
    "\u0175\020\100\026\060\031\064\033\074\042\070\047\073" +
    "\001\001\000\002\001\001\000\026\005\072\006\062\010" +
    "\063\014\u016a\020\100\026\060\031\064\033\074\042\070" +
    "\047\073\001\001\000\026\005\072\006\062\010\063\014" +
    "\u0169\020\100\026\060\031\064\033\074\042\070\047\073" +
    "\001\001\000\004\050\333\001\001\000\002\001\001\000" +
    "\004\033\u0164\001\001\000\010\012\107\025\u0116\033\111" +
    "\001\001\000\026\005\072\006\062\010\063\014\u0115\020" +
    "\100\026\060\031\064\033\074\042\070\047\073\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\012\107\025" +
    "\106\033\111\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\027\112\001\001\000\006\012\121\033\123\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\033\124\001\001\000\002\001\001\000" +
    "\004\050\130\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\134\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\033\140\043\137\001\001\000" +
    "\002\001\001\000\004\044\142\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\033\140\043\144\001\001\000" +
    "\002\001\001\000\026\005\153\006\146\010\147\031\150" +
    "\033\074\042\152\047\154\056\161\062\157\070\155\001" +
    "\001\000\026\005\153\006\146\010\147\031\150\033\074" +
    "\042\152\047\154\056\u0114\062\157\070\155\001\001\000" +
    "\026\005\153\006\146\010\147\031\150\033\074\042\152" +
    "\047\154\056\u0113\062\157\070\155\001\001\000\026\005" +
    "\153\006\146\010\147\031\150\033\074\042\152\047\154" +
    "\056\u0112\062\157\070\155\001\001\000\002\001\001\000" +
    "\026\005\153\006\146\010\147\031\150\033\074\042\152" +
    "\047\154\056\324\062\157\070\155\001\001\000\026\005" +
    "\153\006\146\010\147\031\150\033\074\042\152\047\154" +
    "\056\323\062\157\070\155\001\001\000\026\005\153\006" +
    "\146\010\147\031\150\033\074\042\152\047\154\056\322" +
    "\062\157\070\155\001\001\000\026\005\153\006\146\010" +
    "\147\031\150\033\074\042\152\047\154\056\321\062\157" +
    "\070\155\001\001\000\002\001\001\000\026\005\153\006" +
    "\146\010\147\031\150\033\074\042\152\047\154\056\316" +
    "\062\157\070\155\001\001\000\010\012\107\025\167\033" +
    "\111\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\200" +
    "\006\174\010\175\031\176\033\074\042\177\047\201\062" +
    "\205\063\204\070\202\001\001\000\002\001\001\000\012" +
    "\012\107\025\227\033\111\066\226\001\001\000\026\005" +
    "\200\006\174\010\175\031\176\033\074\042\177\047\201" +
    "\062\205\063\225\070\202\001\001\000\026\005\200\006" +
    "\174\010\175\031\176\033\074\042\177\047\201\062\205" +
    "\063\224\070\202\001\001\000\026\005\200\006\174\010" +
    "\175\031\176\033\074\042\177\047\201\062\205\063\223" +
    "\070\202\001\001\000\026\005\200\006\174\010\175\031" +
    "\176\033\074\042\177\047\201\062\205\063\222\070\202" +
    "\001\001\000\026\005\200\006\174\010\175\031\176\033" +
    "\074\042\177\047\201\062\205\063\221\070\202\001\001" +
    "\000\026\005\200\006\174\010\175\031\176\033\074\042" +
    "\177\047\201\062\205\063\220\070\202\001\001\000\026" +
    "\005\200\006\174\010\175\031\176\033\074\042\177\047" +
    "\201\062\205\063\217\070\202\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\200\006\174\010\175\031" +
    "\176\033\074\042\177\047\201\062\205\063\211\070\202" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\200\006\174\010\175\031" +
    "\176\033\074\042\177\047\201\062\205\063\216\070\202" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\241\006\234" +
    "\010\235\031\236\033\074\042\240\047\242\062\245\065" +
    "\237\070\243\001\001\000\002\001\001\000\012\012\107" +
    "\025\227\033\111\066\263\001\001\000\026\005\241\006" +
    "\234\010\235\031\236\033\074\042\240\047\242\062\245" +
    "\065\262\070\243\001\001\000\026\005\241\006\234\010" +
    "\235\031\236\033\074\042\240\047\242\062\245\065\261" +
    "\070\243\001\001\000\026\005\241\006\234\010\235\031" +
    "\236\033\074\042\240\047\242\062\245\065\260\070\243" +
    "\001\001\000\002\001\001\000\026\005\241\006\234\010" +
    "\235\031\236\033\074\042\240\047\242\062\245\065\257" +
    "\070\243\001\001\000\026\005\241\006\234\010\235\031" +
    "\236\033\074\042\240\047\242\062\245\065\256\070\243" +
    "\001\001\000\026\005\241\006\234\010\235\031\236\033" +
    "\074\042\240\047\242\062\245\065\255\070\243\001\001" +
    "\000\026\005\241\006\234\010\235\031\236\033\074\042" +
    "\240\047\242\062\245\065\254\070\243\001\001\000\002" +
    "\001\001\000\026\005\241\006\234\010\235\031\236\033" +
    "\074\042\240\047\242\062\245\065\251\070\243\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\241\006\234\010\235\031\236" +
    "\033\074\042\240\047\242\062\245\065\253\070\243\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\271\006\265\010\266\031\267\033\074\042\270\047" +
    "\272\062\275\064\277\070\273\001\001\000\026\005\271" +
    "\006\265\010\266\031\267\033\074\042\270\047\272\062" +
    "\275\064\313\070\273\001\001\000\026\005\271\006\265" +
    "\010\266\031\267\033\074\042\270\047\272\062\275\064" +
    "\312\070\273\001\001\000\026\005\271\006\265\010\266" +
    "\031\267\033\074\042\270\047\272\062\275\064\311\070" +
    "\273\001\001\000\026\005\271\006\265\010\266\031\267" +
    "\033\074\042\270\047\272\062\275\064\310\070\273\001" +
    "\001\000\026\005\271\006\265\010\266\031\267\033\074" +
    "\042\270\047\272\062\275\064\307\070\273\001\001\000" +
    "\026\005\271\006\265\010\266\031\267\033\074\042\270" +
    "\047\272\062\275\064\306\070\273\001\001\000\026\005" +
    "\271\006\265\010\266\031\267\033\074\042\270\047\272" +
    "\062\275\064\305\070\273\001\001\000\002\001\001\000" +
    "\026\005\271\006\265\010\266\031\267\033\074\042\270" +
    "\047\272\062\275\064\302\070\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\271\006\265\010\266\031" +
    "\267\033\074\042\270\047\272\062\275\064\304\070\273" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\271\006" +
    "\265\010\266\031\267\033\074\042\270\047\272\062\275" +
    "\064\315\070\273\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\153\006\146\010\147\031\150\033\074" +
    "\042\152\047\154\056\320\062\157\070\155\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\327\001\001\000\002\001\001\000\006\033\332\047\331" +
    "\001\001\000\026\005\347\006\342\010\343\031\344\033" +
    "\074\042\345\047\350\062\353\067\u010e\070\351\001\001" +
    "\000\004\050\333\001\001\000\010\033\376\050\u0100\057" +
    "\377\001\001\000\004\030\335\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\347\006\342\010\343\031\344\033\074\042\345" +
    "\047\350\062\353\067\346\070\351\001\001\000\026\005" +
    "\347\006\342\010\343\031\344\033\074\042\345\047\350" +
    "\062\353\067\375\070\351\001\001\000\026\005\347\006" +
    "\342\010\343\031\344\033\074\042\345\047\350\062\353" +
    "\067\374\070\351\001\001\000\026\005\347\006\342\010" +
    "\343\031\344\033\074\042\345\047\350\062\353\067\373" +
    "\070\351\001\001\000\026\005\347\006\342\010\343\031" +
    "\344\033\074\042\345\047\350\062\353\067\372\070\351" +
    "\001\001\000\002\001\001\000\026\005\347\006\342\010" +
    "\343\031\344\033\074\042\345\047\350\062\353\067\366" +
    "\070\351\001\001\000\026\005\347\006\342\010\343\031" +
    "\344\033\074\042\345\047\350\062\353\067\365\070\351" +
    "\001\001\000\026\005\347\006\342\010\343\031\344\033" +
    "\074\042\345\047\350\062\353\067\364\070\351\001\001" +
    "\000\002\001\001\000\026\005\347\006\342\010\343\031" +
    "\344\033\074\042\345\047\350\062\353\067\361\070\351" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\347\006\342\010\343\031\344\033\074\042" +
    "\345\047\350\062\353\067\363\070\351\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\050\u0109\001\001\000\002\001\001" +
    "\000\004\033\u0105\001\001\000\004\033\u0102\001\001\000" +
    "\004\050\u0103\001\001\000\010\033\376\050\u0100\057\u0104" +
    "\001\001\000\002\001\001\000\010\033\376\050\u0100\057" +
    "\u0106\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\033\376\050\u0100\057\u010c\001\001\000\010\033\376\050" +
    "\u0100\057\u010b\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u0120" +
    "\006\u011c\010\u011d\020\u0124\021\u0122\026\u011a\031\u011e\033" +
    "\074\042\u011f\047\u0121\001\001\000\002\001\001\000\026" +
    "\005\u0120\006\u011c\010\u011d\020\u0124\021\u0161\026\u011a\031" +
    "\u011e\033\074\042\u011f\047\u0121\001\001\000\012\012\107" +
    "\024\u0132\025\u0131\033\111\001\001\000\026\005\u0120\006" +
    "\u011c\010\u011d\020\u0124\021\u0130\026\u011a\031\u011e\033\074" +
    "\042\u011f\047\u0121\001\001\000\026\005\u0120\006\u011c\010" +
    "\u011d\020\u0124\021\u012f\026\u011a\031\u011e\033\074\042\u011f" +
    "\047\u0121\001\001\000\026\005\u0120\006\u011c\010\u011d\020" +
    "\u0124\021\u012e\026\u011a\031\u011e\033\074\042\u011f\047\u0121" +
    "\001\001\000\026\005\u0120\006\u011c\010\u011d\020\u0124\021" +
    "\u012d\026\u011a\031\u011e\033\074\042\u011f\047\u0121\001\001" +
    "\000\026\005\u0120\006\u011c\010\u011d\020\u0124\021\u012c\026" +
    "\u011a\031\u011e\033\074\042\u011f\047\u0121\001\001\000\026" +
    "\005\u0120\006\u011c\010\u011d\020\u0124\021\u012b\026\u011a\031" +
    "\u011e\033\074\042\u011f\047\u0121\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u0120\006\u011c\010\u011d\020" +
    "\u0124\021\u0125\026\u011a\031\u011e\033\074\042\u011f\047\u0121" +
    "\001\001\000\002\001\001\000\026\005\u0120\006\u011c\010" +
    "\u011d\020\u0124\021\u0127\026\u011a\031\u011e\033\074\042\u011f" +
    "\047\u0121\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u013c\006\u0138\010\u0139\020" +
    "\u0140\023\u013e\026\u0136\031\u013a\033\074\042\u013b\047\u013d" +
    "\001\001\000\002\001\001\000\026\005\u013c\006\u0138\010" +
    "\u0139\020\u0140\023\u014b\026\u0136\031\u013a\033\074\042\u013b" +
    "\047\u013d\001\001\000\012\012\107\024\u014a\025\u0131\033" +
    "\111\001\001\000\026\005\u013c\006\u0138\010\u0139\020\u0140" +
    "\023\u0149\026\u0136\031\u013a\033\074\042\u013b\047\u013d\001" +
    "\001\000\026\005\u013c\006\u0138\010\u0139\020\u0140\023\u0148" +
    "\026\u0136\031\u013a\033\074\042\u013b\047\u013d\001\001\000" +
    "\026\005\u013c\006\u0138\010\u0139\020\u0140\023\u0147\026\u0136" +
    "\031\u013a\033\074\042\u013b\047\u013d\001\001\000\026\005" +
    "\u013c\006\u0138\010\u0139\020\u0140\023\u0146\026\u0136\031\u013a" +
    "\033\074\042\u013b\047\u013d\001\001\000\026\005\u013c\006" +
    "\u0138\010\u0139\020\u0140\023\u0145\026\u0136\031\u013a\033\074" +
    "\042\u013b\047\u013d\001\001\000\026\005\u013c\006\u0138\010" +
    "\u0139\020\u0140\023\u0144\026\u0136\031\u013a\033\074\042\u013b" +
    "\047\u013d\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u013c\006\u0138\010\u0139\020\u0140\023\u0141\026\u0136" +
    "\031\u013a\033\074\042\u013b\047\u013d\001\001\000\002\001" +
    "\001\000\026\005\u013c\006\u0138\010\u0139\020\u0140\023\u0143" +
    "\026\u0136\031\u013a\033\074\042\u013b\047\u013d\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u0152" +
    "\006\u014e\010\u014f\020\u0155\022\u0156\026\u014d\031\u0150\033" +
    "\074\042\u0151\047\u0153\001\001\000\026\005\u0152\006\u014e" +
    "\010\u014f\020\u0155\022\u0160\026\u014d\031\u0150\033\074\042" +
    "\u0151\047\u0153\001\001\000\026\005\u0152\006\u014e\010\u014f" +
    "\020\u0155\022\u015f\026\u014d\031\u0150\033\074\042\u0151\047" +
    "\u0153\001\001\000\026\005\u0152\006\u014e\010\u014f\020\u0155" +
    "\022\u015e\026\u014d\031\u0150\033\074\042\u0151\047\u0153\001" +
    "\001\000\026\005\u0152\006\u014e\010\u014f\020\u0155\022\u015d" +
    "\026\u014d\031\u0150\033\074\042\u0151\047\u0153\001\001\000" +
    "\026\005\u0152\006\u014e\010\u014f\020\u0155\022\u015c\026\u014d" +
    "\031\u0150\033\074\042\u0151\047\u0153\001\001\000\026\005" +
    "\u0152\006\u014e\010\u014f\020\u0155\022\u015b\026\u014d\031\u0150" +
    "\033\074\042\u0151\047\u0153\001\001\000\026\005\u0152\006" +
    "\u014e\010\u014f\020\u0155\022\u015a\026\u014d\031\u0150\033\074" +
    "\042\u0151\047\u0153\001\001\000\002\001\001\000\026\005" +
    "\u0152\006\u014e\010\u014f\020\u0155\022\u0157\026\u014d\031\u0150" +
    "\033\074\042\u0151\047\u0153\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u0152\006\u014e\010\u014f\020\u0155" +
    "\022\u0159\026\u014d\031\u0150\033\074\042\u0151\047\u0153\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u0152\006\u014e\010\u014f\020\u0155\022\u0163\026\u014d\031" +
    "\u0150\033\074\042\u0151\047\u0153\001\001\000\002\001\001" +
    "\000\004\050\u0165\001\001\000\010\033\376\050\u0100\057" +
    "\u0166\001\001\000\002\001\001\000\026\005\072\006\062" +
    "\010\063\014\u0168\020\100\026\060\031\064\033\074\042" +
    "\070\047\073\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\033\140\043\u0190\001\001\000\004\051\u018a\001" +
    "\001\000\014\012\u0181\033\u017b\034\u017a\042\u017e\047\u017f" +
    "\001\001\000\002\001\001\000\004\050\333\001\001\000" +
    "\002\001\001\000\004\033\u0178\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\u018c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\051\u018d\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\033\140\043\u0194\001\001\000\004" +
    "\051\u0192\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\012" +
    "\u0181\033\u019b\034\u019a\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u01a0\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\033\u01a3\001\001\000\002\001\001\000" +
    "\006\033\u01a6\047\u01a5\001\001\000\026\005\u01ae\006\u01ab" +
    "\010\u01ac\026\u01aa\033\074\042\u01ad\047\u01af\055\u023b\071" +
    "\u01b2\073\u01b5\001\001\000\004\050\333\001\001\000\004" +
    "\030\u01a8\001\001\000\002\001\001\000\026\005\u01ae\006" +
    "\u01ab\010\u01ac\026\u01aa\033\074\042\u01ad\047\u01af\055\u01b0" +
    "\071\u01b2\073\u01b5\001\001\000\026\005\u01ae\006\u01ab\010" +
    "\u01ac\026\u01aa\033\074\042\u01ad\047\u01af\055\u023a\071\u01b2" +
    "\073\u01b5\001\001\000\026\005\u01ae\006\u01ab\010\u01ac\026" +
    "\u01aa\033\074\042\u01ad\047\u01af\055\u0239\071\u01b2\073\u01b5" +
    "\001\001\000\026\005\u01ae\006\u01ab\010\u01ac\026\u01aa\033" +
    "\074\042\u01ad\047\u01af\055\u0238\071\u01b2\073\u01b5\001\001" +
    "\000\026\005\u01ae\006\u01ab\010\u01ac\026\u01aa\033\074\042" +
    "\u01ad\047\u01af\055\u0237\071\u01b2\073\u01b5\001\001\000\026" +
    "\005\u01ae\006\u01ab\010\u01ac\026\u01aa\033\074\042\u01ad\047" +
    "\u01af\055\u0236\071\u01b2\073\u01b5\001\001\000\026\005\u01ae" +
    "\006\u01ab\010\u01ac\026\u01aa\033\074\042\u01ad\047\u01af\055" +
    "\u0235\071\u01b2\073\u01b5\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u01ae\006\u01ab\010\u01ac\026\u01aa\033" +
    "\074\042\u01ad\047\u01af\055\u022f\071\u01b2\073\u01b5\001\001" +
    "\000\010\012\107\025\u01d8\033\111\001\001\000\002\001" +
    "\001\000\026\005\u01ae\006\u01ab\010\u01ac\026\u01aa\033\074" +
    "\042\u01ad\047\u01af\055\u01b9\071\u01b2\073\u01b5\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\012\107\025\u01bb\033\111\001\001\000" +
    "\002\001\001\000\026\005\u01c1\006\u01be\010\u01bf\026\u01bd" +
    "\033\074\042\u01c0\047\u01c2\071\u01c5\072\u01c4\073\u01c6\001" +
    "\001\000\026\005\u01c1\006\u01be\010\u01bf\026\u01bd\033\074" +
    "\042\u01c0\047\u01c2\071\u01c5\072\u01d7\073\u01c6\001\001\000" +
    "\026\005\u01c1\006\u01be\010\u01bf\026\u01bd\033\074\042\u01c0" +
    "\047\u01c2\071\u01c5\072\u01d6\073\u01c6\001\001\000\026\005" +
    "\u01c1\006\u01be\010\u01bf\026\u01bd\033\074\042\u01c0\047\u01c2" +
    "\071\u01c5\072\u01d5\073\u01c6\001\001\000\026\005\u01c1\006" +
    "\u01be\010\u01bf\026\u01bd\033\074\042\u01c0\047\u01c2\071\u01c5" +
    "\072\u01d4\073\u01c6\001\001\000\026\005\u01c1\006\u01be\010" +
    "\u01bf\026\u01bd\033\074\042\u01c0\047\u01c2\071\u01c5\072\u01d3" +
    "\073\u01c6\001\001\000\026\005\u01c1\006\u01be\010\u01bf\026" +
    "\u01bd\033\074\042\u01c0\047\u01c2\071\u01c5\072\u01d2\073\u01c6" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u01c1\006\u01be\010\u01bf\026\u01bd\033\074\042\u01c0\047\u01c2" +
    "\071\u01c5\072\u01cd\073\u01c6\001\001\000\026\005\u01c1\006" +
    "\u01be\010\u01bf\026\u01bd\033\074\042\u01c0\047\u01c2\071\u01c5" +
    "\072\u01cc\073\u01c6\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u01c1\006\u01be\010\u01bf\026\u01bd" +
    "\033\074\042\u01c0\047\u01c2\071\u01c5\072\u01d1\073\u01c6\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u01e1\006\u01dd\010\u01df\026\u01dc\033\074\042\u01e0\047" +
    "\u01e2\071\u01e5\073\u01e6\075\u01e3\001\001\000\002\001\001" +
    "\000\026\005\u01e1\006\u01dd\010\u01df\026\u01dc\033\074\042" +
    "\u01e0\047\u01e2\071\u01e5\073\u01e6\075\u022c\001\001\000\026" +
    "\005\u01e1\006\u01dd\010\u01df\026\u01dc\033\074\042\u01e0\047" +
    "\u01e2\071\u01e5\073\u01e6\075\u022b\001\001\000\012\012\107" +
    "\025\u01f5\033\111\074\u01f6\001\001\000\026\005\u01e1\006" +
    "\u01dd\010\u01df\026\u01dc\033\074\042\u01e0\047\u01e2\071\u01e5" +
    "\073\u01e6\075\u01f4\001\001\000\026\005\u01e1\006\u01dd\010" +
    "\u01df\026\u01dc\033\074\042\u01e0\047\u01e2\071\u01e5\073\u01e6" +
    "\075\u01f3\001\001\000\026\005\u01e1\006\u01dd\010\u01df\026" +
    "\u01dc\033\074\042\u01e0\047\u01e2\071\u01e5\073\u01e6\075\u01f2" +
    "\001\001\000\026\005\u01e1\006\u01dd\010\u01df\026\u01dc\033" +
    "\074\042\u01e0\047\u01e2\071\u01e5\073\u01e6\075\u01f1\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u01e1\006" +
    "\u01dd\010\u01df\026\u01dc\033\074\042\u01e0\047\u01e2\071\u01e5" +
    "\073\u01e6\075\u01eb\001\001\000\026\005\u01e1\006\u01dd\010" +
    "\u01df\026\u01dc\033\074\042\u01e0\047\u01e2\071\u01e5\073\u01e6" +
    "\075\u01ea\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u01e1\006\u01dd\010\u01df\026\u01dc\033\074\042\u01e0\047" +
    "\u01e2\071\u01e5\073\u01e6\075\u01ed\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u01ff\006\u01fc\010\u01fd\026\u01fa\033\074" +
    "\042\u01fe\047\u0200\071\u0202\073\u0204\076\u0203\001\001\000" +
    "\002\001\001\000\026\005\u01ff\006\u01fc\010\u01fd\026\u01fa" +
    "\033\074\042\u01fe\047\u0200\071\u0202\073\u0204\076\u0212\001" +
    "\001\000\012\012\107\025\u01f5\033\111\074\u0211\001\001" +
    "\000\026\005\u01ff\006\u01fc\010\u01fd\026\u01fa\033\074\042" +
    "\u01fe\047\u0200\071\u0202\073\u0204\076\u0210\001\001\000\026" +
    "\005\u01ff\006\u01fc\010\u01fd\026\u01fa\033\074\042\u01fe\047" +
    "\u0200\071\u0202\073\u0204\076\u020f\001\001\000\026\005\u01ff" +
    "\006\u01fc\010\u01fd\026\u01fa\033\074\042\u01fe\047\u0200\071" +
    "\u0202\073\u0204\076\u020e\001\001\000\026\005\u01ff\006\u01fc" +
    "\010\u01fd\026\u01fa\033\074\042\u01fe\047\u0200\071\u0202\073" +
    "\u0204\076\u020d\001\001\000\026\005\u01ff\006\u01fc\010\u01fd" +
    "\026\u01fa\033\074\042\u01fe\047\u0200\071\u0202\073\u0204\076" +
    "\u020c\001\001\000\002\001\001\000\026\005\u01ff\006\u01fc" +
    "\010\u01fd\026\u01fa\033\074\042\u01fe\047\u0200\071\u0202\073" +
    "\u0204\076\u0209\001\001\000\002\001\001\000\026\005\u01ff" +
    "\006\u01fc\010\u01fd\026\u01fa\033\074\042\u01fe\047\u0200\071" +
    "\u0202\073\u0204\076\u0208\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u01ff\006\u01fc\010\u01fd\026\u01fa\033\074" +
    "\042\u01fe\047\u0200\071\u0202\073\u0204\076\u020b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\u0218\006\u0215\010\u0216" +
    "\026\u0214\033\074\042\u0217\047\u0219\071\u021c\073\u021d\077" +
    "\u021b\001\001\000\026\005\u0218\006\u0215\010\u0216\026\u0214" +
    "\033\074\042\u0217\047\u0219\071\u021c\073\u021d\077\u022a\001" +
    "\001\000\026\005\u0218\006\u0215\010\u0216\026\u0214\033\074" +
    "\042\u0217\047\u0219\071\u021c\073\u021d\077\u0229\001\001\000" +
    "\026\005\u0218\006\u0215\010\u0216\026\u0214\033\074\042\u0217" +
    "\047\u0219\071\u021c\073\u021d\077\u0228\001\001\000\026\005" +
    "\u0218\006\u0215\010\u0216\026\u0214\033\074\042\u0217\047\u0219" +
    "\071\u021c\073\u021d\077\u0227\001\001\000\026\005\u0218\006" +
    "\u0215\010\u0216\026\u0214\033\074\042\u0217\047\u0219\071\u021c" +
    "\073\u021d\077\u0226\001\001\000\026\005\u0218\006\u0215\010" +
    "\u0216\026\u0214\033\074\042\u0217\047\u0219\071\u021c\073\u021d" +
    "\077\u0225\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u0218\006\u0215\010\u0216\026\u0214\033\074\042\u0217" +
    "\047\u0219\071\u021c\073\u021d\077\u0222\001\001\000\026\005" +
    "\u0218\006\u0215\010\u0216\026\u0214\033\074\042\u0217\047\u0219" +
    "\071\u021c\073\u021d\077\u0221\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u0218\006\u0215\010\u0216\026\u0214\033" +
    "\074\042\u0217\047\u0219\071\u021c\073\u021d\077\u0224\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u0218\006\u0215\010\u0216\026\u0214\033\074\042\u0217\047\u0219" +
    "\071\u021c\073\u021d\077\u022e\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u01ae\006\u01ab\010\u01ac\026\u01aa" +
    "\033\074\042\u01ad\047\u01af\055\u0231\071\u01b2\073\u01b5\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u0248\001" +
    "\001\000\012\012\u0181\033\u017b\034\u0245\047\u0246\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\u0181\033\u019b" +
    "\034\u024b\042\u024c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\011\u0253\001" +
    "\001\000\004\004\u0254\001\001\000\002\001\001\000\004" +
    "\011\u0256\001\001\000\004\004\u0257\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u025a\001\001\000\004" +
    "\004\u025b\001\001\000\002\001\001\000\004\011\u025d\001" +
    "\001\000\004\004\u025e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\072\006\062\010" +
    "\063\014\u0262\020\100\026\060\031\064\033\074\042\070" +
    "\047\073\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\u0268\001\001\000\002\001\001\000\004\011\u026a\001" +
    "\001\000\002\001\001\000\026\005\u0272\006\u026c\010\u026e" +
    "\013\u0274\033\074\042\u0271\047\u0273\100\u0270\102\u026d\110" +
    "\u0278\001\001\000\026\005\u0272\006\u026c\010\u026e\013\u0328" +
    "\033\074\042\u0271\047\u0273\100\u0270\102\u026d\110\u0278\001" +
    "\001\000\026\005\u0272\006\u026c\010\u026e\013\u0327\033\074" +
    "\042\u0271\047\u0273\100\u0270\102\u026d\110\u0278\001\001\000" +
    "\026\005\u0272\006\u026c\010\u026e\013\u0326\033\074\042\u0271" +
    "\047\u0273\100\u0270\102\u026d\110\u0278\001\001\000\002\001" +
    "\001\000\026\005\u0272\006\u026c\010\u026e\013\u02fa\033\074" +
    "\042\u0271\047\u0273\100\u0270\102\u026d\110\u0278\001\001\000" +
    "\026\005\u0272\006\u026c\010\u026e\013\u02f9\033\074\042\u0271" +
    "\047\u0273\100\u0270\102\u026d\110\u0278\001\001\000\026\005" +
    "\u0272\006\u026c\010\u026e\013\u02f8\033\074\042\u0271\047\u0273" +
    "\100\u0270\102\u026d\110\u0278\001\001\000\026\005\u0272\006" +
    "\u026c\010\u026e\013\u02f7\033\074\042\u0271\047\u0273\100\u0270" +
    "\102\u026d\110\u0278\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\012\107\025\u029a\033\111\001\001\000\002" +
    "\001\001\000\026\005\u0272\006\u026c\010\u026e\013\u0279\033" +
    "\074\042\u0271\047\u0273\100\u0270\102\u026d\110\u0278\001\001" +
    "\000\002\001\001\000\010\012\107\025\u027b\033\111\001" +
    "\001\000\002\001\001\000\026\005\u0282\006\u027d\010\u027f" +
    "\033\074\042\u0281\047\u0283\100\u0280\101\u0285\102\u027e\110" +
    "\u0286\001\001\000\026\005\u0282\006\u027d\010\u027f\033\074" +
    "\042\u0281\047\u0283\100\u0280\101\u0299\102\u027e\110\u0286\001" +
    "\001\000\026\005\u0282\006\u027d\010\u027f\033\074\042\u0281" +
    "\047\u0283\100\u0280\101\u0298\102\u027e\110\u0286\001\001\000" +
    "\026\005\u0282\006\u027d\010\u027f\033\074\042\u0281\047\u0283" +
    "\100\u0280\101\u0297\102\u027e\110\u0286\001\001\000\026\005" +
    "\u0282\006\u027d\010\u027f\033\074\042\u0281\047\u0283\100\u0280" +
    "\101\u0296\102\u027e\110\u0286\001\001\000\026\005\u0282\006" +
    "\u027d\010\u027f\033\074\042\u0281\047\u0283\100\u0280\101\u0295" +
    "\102\u027e\110\u0286\001\001\000\026\005\u0282\006\u027d\010" +
    "\u027f\033\074\042\u0281\047\u0283\100\u0280\101\u0294\102\u027e" +
    "\110\u0286\001\001\000\026\005\u0282\006\u027d\010\u027f\033" +
    "\074\042\u0281\047\u0283\100\u0280\101\u0293\102\u027e\110\u0286" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u0282\006\u027d\010\u027f\033\074\042\u0281\047\u0283\100\u0280" +
    "\101\u028e\102\u027e\110\u0286\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u0282" +
    "\006\u027d\010\u027f\033\074\042\u0281\047\u0283\100\u0280\101" +
    "\u0292\102\u027e\110\u0286\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u02a4\006" +
    "\u029f\010\u02a1\033\074\042\u02a3\047\u02a5\100\u02a2\102\u02a0" +
    "\104\u02a6\110\u02a8\001\001\000\002\001\001\000\012\012" +
    "\107\025\u02b9\033\111\103\u02ba\001\001\000\026\005\u02a4" +
    "\006\u029f\010\u02a1\033\074\042\u02a3\047\u02a5\100\u02a2\102" +
    "\u02a0\104\u02b8\110\u02a8\001\001\000\026\005\u02a4\006\u029f" +
    "\010\u02a1\033\074\042\u02a3\047\u02a5\100\u02a2\102\u02a0\104" +
    "\u02b7\110\u02a8\001\001\000\026\005\u02a4\006\u029f\010\u02a1" +
    "\033\074\042\u02a3\047\u02a5\100\u02a2\102\u02a0\104\u02b6\110" +
    "\u02a8\001\001\000\026\005\u02a4\006\u029f\010\u02a1\033\074" +
    "\042\u02a3\047\u02a5\100\u02a2\102\u02a0\104\u02b5\110\u02a8\001" +
    "\001\000\026\005\u02a4\006\u029f\010\u02a1\033\074\042\u02a3" +
    "\047\u02a5\100\u02a2\102\u02a0\104\u02b4\110\u02a8\001\001\000" +
    "\026\005\u02a4\006\u029f\010\u02a1\033\074\042\u02a3\047\u02a5" +
    "\100\u02a2\102\u02a0\104\u02b3\110\u02a8\001\001\000\026\005" +
    "\u02a4\006\u029f\010\u02a1\033\074\042\u02a3\047\u02a5\100\u02a2" +
    "\102\u02a0\104\u02b2\110\u02a8\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u02a4\006\u029f\010\u02a1\033\074" +
    "\042\u02a3\047\u02a5\100\u02a2\102\u02a0\104\u02ac\110\u02a8\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u02a4\006\u029f\010\u02a1\033" +
    "\074\042\u02a3\047\u02a5\100\u02a2\102\u02a0\104\u02ae\110\u02a8" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\u02c4\006\u02bf\010" +
    "\u02c1\033\074\042\u02c3\047\u02c5\100\u02c2\102\u02c0\105\u02c6" +
    "\110\u02c8\001\001\000\002\001\001\000\012\012\107\025" +
    "\u02b9\033\111\103\u02d6\001\001\000\026\005\u02c4\006\u02bf" +
    "\010\u02c1\033\074\042\u02c3\047\u02c5\100\u02c2\102\u02c0\105" +
    "\u02d5\110\u02c8\001\001\000\026\005\u02c4\006\u02bf\010\u02c1" +
    "\033\074\042\u02c3\047\u02c5\100\u02c2\102\u02c0\105\u02d4\110" +
    "\u02c8\001\001\000\026\005\u02c4\006\u02bf\010\u02c1\033\074" +
    "\042\u02c3\047\u02c5\100\u02c2\102\u02c0\105\u02d3\110\u02c8\001" +
    "\001\000\026\005\u02c4\006\u02bf\010\u02c1\033\074\042\u02c3" +
    "\047\u02c5\100\u02c2\102\u02c0\105\u02d2\110\u02c8\001\001\000" +
    "\026\005\u02c4\006\u02bf\010\u02c1\033\074\042\u02c3\047\u02c5" +
    "\100\u02c2\102\u02c0\105\u02d1\110\u02c8\001\001\000\026\005" +
    "\u02c4\006\u02bf\010\u02c1\033\074\042\u02c3\047\u02c5\100\u02c2" +
    "\102\u02c0\105\u02d0\110\u02c8\001\001\000\026\005\u02c4\006" +
    "\u02bf\010\u02c1\033\074\042\u02c3\047\u02c5\100\u02c2\102\u02c0" +
    "\105\u02cf\110\u02c8\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u02c4\006\u02bf\010\u02c1\033\074\042\u02c3" +
    "\047\u02c5\100\u02c2\102\u02c0\105\u02cc\110\u02c8\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u02c4\006\u02bf\010\u02c1\033\074\042" +
    "\u02c3\047\u02c5\100\u02c2\102\u02c0\105\u02ce\110\u02c8\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u02de\006\u02d9\010\u02db\033\074\042\u02dd\047\u02df\100\u02dc" +
    "\102\u02da\106\u02d8\110\u02e1\001\001\000\002\001\001\000" +
    "\026\005\u02de\006\u02d9\010\u02db\033\074\042\u02dd\047\u02df" +
    "\100\u02dc\102\u02da\106\u02ee\110\u02e1\001\001\000\026\005" +
    "\u02de\006\u02d9\010\u02db\033\074\042\u02dd\047\u02df\100\u02dc" +
    "\102\u02da\106\u02ed\110\u02e1\001\001\000\026\005\u02de\006" +
    "\u02d9\010\u02db\033\074\042\u02dd\047\u02df\100\u02dc\102\u02da" +
    "\106\u02ec\110\u02e1\001\001\000\026\005\u02de\006\u02d9\010" +
    "\u02db\033\074\042\u02dd\047\u02df\100\u02dc\102\u02da\106\u02eb" +
    "\110\u02e1\001\001\000\026\005\u02de\006\u02d9\010\u02db\033" +
    "\074\042\u02dd\047\u02df\100\u02dc\102\u02da\106\u02ea\110\u02e1" +
    "\001\001\000\026\005\u02de\006\u02d9\010\u02db\033\074\042" +
    "\u02dd\047\u02df\100\u02dc\102\u02da\106\u02e9\110\u02e1\001\001" +
    "\000\026\005\u02de\006\u02d9\010\u02db\033\074\042\u02dd\047" +
    "\u02df\100\u02dc\102\u02da\106\u02e8\110\u02e1\001\001\000\002" +
    "\001\001\000\026\005\u02de\006\u02d9\010\u02db\033\074\042" +
    "\u02dd\047\u02df\100\u02dc\102\u02da\106\u02e5\110\u02e1\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u02de\006\u02d9\010\u02db\033\074" +
    "\042\u02dd\047\u02df\100\u02dc\102\u02da\106\u02e7\110\u02e1\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u02de\006\u02d9" +
    "\010\u02db\033\074\042\u02dd\047\u02df\100\u02dc\102\u02da\106" +
    "\u02f0\110\u02e1\001\001\000\002\001\001\000\026\005\u0272" +
    "\006\u026c\010\u026e\013\u02f2\033\074\042\u0271\047\u0273\100" +
    "\u0270\102\u026d\110\u0278\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\003\u02f6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\u02fd\001\001\000\002\001\001\000\006\033\u0300\047\u02ff" +
    "\001\001\000\026\005\u0309\006\u0304\010\u0306\033\074\042" +
    "\u0308\047\u030a\100\u0307\102\u0305\107\u0322\110\u030d\001\001" +
    "\000\004\050\333\001\001\000\004\030\u0302\001\001\000" +
    "\002\001\001\000\026\005\u0309\006\u0304\010\u0306\033\074" +
    "\042\u0308\047\u030a\100\u0307\102\u0305\107\u030c\110\u030d\001" +
    "\001\000\026\005\u0309\006\u0304\010\u0306\033\074\042\u0308" +
    "\047\u030a\100\u0307\102\u0305\107\u0321\110\u030d\001\001\000" +
    "\026\005\u0309\006\u0304\010\u0306\033\074\042\u0308\047\u030a" +
    "\100\u0307\102\u0305\107\u0320\110\u030d\001\001\000\026\005" +
    "\u0309\006\u0304\010\u0306\033\074\042\u0308\047\u030a\100\u0307" +
    "\102\u0305\107\u031f\110\u030d\001\001\000\026\005\u0309\006" +
    "\u0304\010\u0306\033\074\042\u0308\047\u030a\100\u0307\102\u0305" +
    "\107\u031e\110\u030d\001\001\000\026\005\u0309\006\u0304\010" +
    "\u0306\033\074\042\u0308\047\u030a\100\u0307\102\u0305\107\u031d" +
    "\110\u030d\001\001\000\026\005\u0309\006\u0304\010\u0306\033" +
    "\074\042\u0308\047\u030a\100\u0307\102\u0305\107\u031c\110\u030d" +
    "\001\001\000\026\005\u0309\006\u0304\010\u0306\033\074\042" +
    "\u0308\047\u030a\100\u0307\102\u0305\107\u031b\110\u030d\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u0309\006" +
    "\u0304\010\u0306\033\074\042\u0308\047\u030a\100\u0307\102\u0305" +
    "\107\u0315\110\u030d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u0309\006\u0304\010\u0306\033\074\042\u0308\047\u030a\100" +
    "\u0307\102\u0305\107\u031a\110\u030d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    
    public void syntax_error(Symbol sym){
        this.sym = sym;
    }

    public Symbol getS(){
        return this.sym;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= tk_public tk_module tk_Identificador tk_Linea OPCPROCESO tk_end tk_module tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= tk_comentario tk_Linea INICIO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OPCPROCESO ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO tk_end tk_sub tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-10)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // OPCPROCESO ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC tk_end tk_function tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // OPCPROCESO ::= tk_public tk_sub tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO tk_end tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // OPCPROCESO ::= tk_public tk_structure tk_Identificador tk_Linea CUERPOSTRUC tk_end tk_structure tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // OPCPROCESO ::= tk_comentario tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CUERPOSTRUC ::= tk_Identificador tk_as VARIABLESTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CUERPOSTRUC ::= tk_comentario tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CUERPOSTRUC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // VARIABLESTRUC ::= TIPOD tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VARIABLESTRUC ::= TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CUERPOFUNC ::= SINTAXFOR_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CUERPOFUNC ::= SINTAXWHILE_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CUERPOFUNC ::= SINTAXIF_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CUERPOFUNC ::= VARIABLE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CUERPOFUNC ::= LLAMADAFUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CUERPOFUNC ::= ASIGNACIONVAL CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CUERPOFUNC ::= CONSOLEWRITE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CUERPOFUNC ::= OPERACIONES CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CUERPOFUNC ::= tk_comentario tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CUERPOFUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CUERPOFUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CUERPOFUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CUERPOFUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CUERPOFUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CUERPOFUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CUERPOFUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CUERPOFUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CUERPOFUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // SINTAXIF_FUNC ::= tk_if CONDICION tk_then tk_Linea INIF_FUNC tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // SINTAXELSEIF_FUNC ::= CONDICION tk_then tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // INIF_FUNC ::= SINTAXIF_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // INIF_FUNC ::= VARIABLE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // INIF_FUNC ::= LLAMADAFUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // INIF_FUNC ::= ASIGNACIONVAL INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // INIF_FUNC ::= OPERACIONES INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // INIF_FUNC ::= CONSOLEWRITE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // INIF_FUNC ::= SINTAXFOR_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // INIF_FUNC ::= SINTAXWHILE_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // INIF_FUNC ::= tk_comentario tk_Linea INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // INIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // INIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // INIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // INIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INELSE_FUNC ::= SINTAXIF_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INELSE_FUNC ::= VARIABLE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // INELSE_FUNC ::= LLAMADAFUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // INELSE_FUNC ::= ASIGNACIONVAL INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // INELSE_FUNC ::= OPERACIONES INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // INELSE_FUNC ::= CONSOLEWRITE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // INELSE_FUNC ::= SINTAXFOR_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // INELSE_FUNC ::= SINTAXWHILE_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // INELSE_FUNC ::= tk_comentario tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // INELSE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // INELSE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // INELSE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // INELSE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // INELSE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // INELSE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // INELSE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // INELSE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // INELSE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INELSE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // INELSEIF_FUNC ::= SINTAXIF_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // INELSEIF_FUNC ::= VARIABLE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // INELSEIF_FUNC ::= LLAMADAFUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // INELSEIF_FUNC ::= ASIGNACIONVAL INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // INELSEIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // INELSEIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // INELSEIF_FUNC ::= OPERACIONES INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // INELSEIF_FUNC ::= CONSOLEWRITE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // INELSEIF_FUNC ::= SINTAXFOR_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // INELSEIF_FUNC ::= tk_comentario tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // INELSEIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // INELSEIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // INELSEIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // INELSEIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // INELSEIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // INELSEIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // INELSEIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // INELSEIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // INELSEIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // SINTAXWHILE_FUNC ::= tk_do tk_while CONDICION tk_Linea INWHILE_FUNC tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // INWHILE_FUNC ::= SINTAXFOR_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // INWHILE_FUNC ::= SINTAXIF_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // INWHILE_FUNC ::= VARIABLE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // INWHILE_FUNC ::= LLAMADAFUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // INWHILE_FUNC ::= ASIGNACIONVAL INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // INWHILE_FUNC ::= CONSOLEWRITE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // INWHILE_FUNC ::= OPERACIONES INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // INWHILE_FUNC ::= SINTAXWHILE_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // INWHILE_FUNC ::= tk_comentario tk_Linea INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // INWHILE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // INWHILE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // INWHILE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // INWHILE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // INWHILE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // INWHILE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // INWHILE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // INWHILE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // INWHILE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // INWHILE_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // INWHILE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // INWHILE_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",70, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",70, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // INFOR_FUNC ::= SINTAXWHILE_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // INFOR_FUNC ::= SINTAXFOR_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // INFOR_FUNC ::= SINTAXIF_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // INFOR_FUNC ::= VARIABLE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // INFOR_FUNC ::= LLAMADAFUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // INFOR_FUNC ::= ASIGNACIONVAL INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // INFOR_FUNC ::= CONSOLEWRITE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // INFOR_FUNC ::= OPERACIONES INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // INFOR_FUNC ::= tk_comentario tk_Linea INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // INFOR_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // INFOR_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // INFOR_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // INFOR_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // INFOR_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // INFOR_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // INFOR_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // INFOR_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // INFOR_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // INFOR_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // INFOR_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // INFOR_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // CUERPOPRO ::= SINTAXFOR CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // CUERPOPRO ::= SINTAXIF CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // CUERPOPRO ::= VARIABLE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // CUERPOPRO ::= LLAMADAFUNC CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // CUERPOPRO ::= ASIGNACIONVAL CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // CUERPOPRO ::= CONSOLEWRITE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // CUERPOPRO ::= OPERACIONES CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // CUERPOPRO ::= SINTAXWHILE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // CUERPOPRO ::= tk_comentario tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // CUERPOPRO ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // CUERPOPRO ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // CUERPOPRO ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // CUERPOPRO ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // CUERPOPRO ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // CUERPOPRO ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // CUERPOPRO ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // CUERPOPRO ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // CUERPOPRO ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // PARAMETROS ::= tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // PARAMETROS ::= tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // PARAMETROS ::= tk_Coma tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // PARAMETROS ::= tk_Coma tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // PARAMETROS ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // VALOR ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // VARIABLE ::= tk_dim tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // VARIABLE ::= tk_dim tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // VARIABLE ::= tk_Identificador tk_punto tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // ASIGNACIONVAL ::= tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // ASIGNACIONVAL ::= tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // ASIGNACIONVAL ::= tk_Identificador tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // ASIGNACIONVAL ::= tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // ASIGNACIONVAL ::= tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // TIPOD ::= tk_String 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // CICLOS ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // CICLOS ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // CONDICION ::= iDNUM OPCRELACIONALES tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // CONDICION ::= iDNUM OPCRELACIONALES tk_ParentesisA iDNUM OPEARITMETICA iDNUM tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // OPERACIONES ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // OPERACIONES ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // OPERACIONAUX ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // OPERACIONAUX ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // OPERACIONAUX ::= OPEARITMETICA iDNUM OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // OPERACIONAUX ::= iDNUM tk_ParentesisC OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // OPERACIONAUX ::= OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // OPERACIONAUX ::= iDNUM tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // OPERACIONAUX ::= iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // OPEARITMETICA ::= tk_Signomod 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // OPEARITMETICA ::= tk_Potencia 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // IDENTIFICADORES ::= iDNUM IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // IDENTIFICADORESPRIMA ::= tk_Coma IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // IDENTIFICADORESPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // IDENTIFICADORESUB ::= tk_Coma iDNUM IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // IDENTIFICADORESUB ::= tk_Coma iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // LLAMADAFUNC ::= tk_Identificador iDNUM IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // LLAMADAFUNC ::= tk_Identificador iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_valorString tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // SINTAXIF ::= tk_if CONDICION tk_then tk_Linea INIF tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // SINTAXELSEIF ::= CONDICION tk_then tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // INIF ::= SINTAXIF INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // INIF ::= VARIABLE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // INIF ::= LLAMADAFUNC INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // INIF ::= ASIGNACIONVAL INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // INIF ::= OPERACIONES INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // INIF ::= CONSOLEWRITE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // INIF ::= SINTAXFOR INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // INIF ::= SINTAXWHILE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // INIF ::= tk_comentario tk_Linea INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // INIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // INIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // INIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // INIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // INIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // INIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // INIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // INIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // INIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // INIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // INIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // INELSE ::= SINTAXIF INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // INELSE ::= VARIABLE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // INELSE ::= LLAMADAFUNC INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // INELSE ::= ASIGNACIONVAL INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // INELSE ::= OPERACIONES INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // INELSE ::= CONSOLEWRITE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // INELSE ::= SINTAXFOR INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // INELSE ::= SINTAXWHILE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // INELSE ::= tk_comentario tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // INELSE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // INELSE ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // INELSE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // INELSE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // INELSE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // INELSE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // INELSE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // INELSE ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // INELSE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // INELSEIF ::= SINTAXIF INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // INELSEIF ::= VARIABLE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // INELSEIF ::= LLAMADAFUNC INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // INELSEIF ::= ASIGNACIONVAL INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // INELSEIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // INELSEIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // INELSEIF ::= OPERACIONES INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // INELSEIF ::= CONSOLEWRITE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // INELSEIF ::= SINTAXFOR INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // INELSEIF ::= SINTAXWHILE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // INELSEIF ::= tk_comentario tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // INELSEIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // INELSEIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // INELSEIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // INELSEIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // INELSEIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // INELSEIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // INELSEIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // INELSEIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // INELSEIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // INFOR ::= SINTAXFOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // INFOR ::= SINTAXIF_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // INFOR ::= VARIABLE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // INFOR ::= LLAMADAFUNC INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // INFOR ::= ASIGNACIONVAL INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // INFOR ::= CONSOLEWRITE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // INFOR ::= OPERACIONES INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // INFOR ::= SINTAXWHILE_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // INFOR ::= tk_comentario tk_Linea INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // INFOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // INFOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // INFOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // INFOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000001(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // INFOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // INFOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // INFOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INFOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INFOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // INFOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // SINTAXIF_FOR ::= tk_if CONDICION tk_then tk_Linea INIF_FOR tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // SINTAXELSEIF_FOR ::= CONDICION tk_then tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // INIF_FOR ::= SINTAXIF_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // INIF_FOR ::= VARIABLE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // INIF_FOR ::= LLAMADAFUNC INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // INIF_FOR ::= ASIGNACIONVAL INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // INIF_FOR ::= OPERACIONES INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // INIF_FOR ::= CONSOLEWRITE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INIF_FOR ::= SINTAXFOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INIF_FOR ::= SINTAXWHILE_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // INIF_FOR ::= tk_comentario tk_Linea INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // INIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // INIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // INIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // INIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // INIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // INIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // INIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // INIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // INELSEIF_FOR ::= SINTAXIF_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // INELSEIF_FOR ::= VARIABLE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // INELSEIF_FOR ::= LLAMADAFUNC INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // INELSEIF_FOR ::= ASIGNACIONVAL INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // INELSEIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // INELSEIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // INELSEIF_FOR ::= OPERACIONES INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // INELSEIF_FOR ::= CONSOLEWRITE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // INELSEIF_FOR ::= SINTAXFOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // INELSEIF_FOR ::= SINTAXWHILE_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // INELSEIF_FOR ::= tk_comentario tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // INELSEIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // INELSEIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // INELSEIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // INELSEIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // INELSEIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // INELSEIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // INELSEIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // INELSEIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // INELSEIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // INELSEIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // INELSE_FOR ::= SINTAXIF_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // INELSE_FOR ::= VARIABLE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // INELSE_FOR ::= LLAMADAFUNC INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // INELSE_FOR ::= ASIGNACIONVAL INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // INELSE_FOR ::= OPERACIONES INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // INELSE_FOR ::= CONSOLEWRITE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // INELSE_FOR ::= SINTAXFOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // INELSE_FOR ::= SINTAXWHILE_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // INELSE_FOR ::= tk_comentario tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // INELSE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // INELSE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // INELSE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // INELSE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // INELSE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // INELSE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // INELSE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // INELSE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // INELSE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // INELSE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // SINTAXWHILE_FOR ::= tk_do tk_while CONDICION tk_Linea INWHILE_FOR tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FOR",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // INWHILE_FOR ::= SINTAXFOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // INWHILE_FOR ::= VARIABLE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // INWHILE_FOR ::= LLAMADAFUNC INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // INWHILE_FOR ::= ASIGNACIONVAL INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // INWHILE_FOR ::= CONSOLEWRITE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // INWHILE_FOR ::= OPERACIONES INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // INWHILE_FOR ::= SINTAXWHILE_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // INWHILE_FOR ::= SINTAXIF_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // INWHILE_FOR ::= tk_comentario tk_Linea INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // INWHILE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // INWHILE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // INWHILE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // INWHILE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // INWHILE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // INWHILE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // INWHILE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // INWHILE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // INWHILE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // INWHILE_FOR ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // INWHILE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // SINTAXIF_WHILE ::= tk_if CONDICION tk_then tk_Linea INIF_WHILE tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // SINTAXELSEIF_WHILE ::= CONDICION tk_then tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_WHILE",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // INIF_WHILE ::= SINTAXIF_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // INIF_WHILE ::= VARIABLE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // INIF_WHILE ::= LLAMADAFUNC INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // INIF_WHILE ::= ASIGNACIONVAL INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // INIF_WHILE ::= OPERACIONES INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // INIF_WHILE ::= CONSOLEWRITE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // INIF_WHILE ::= SINTAXFOR_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // INIF_WHILE ::= SINTAXWHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // INIF_WHILE ::= tk_comentario tk_Linea INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // INIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // INIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // INIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // INIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // INIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // INIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // INIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // INIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // INIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // INIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // INIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // INIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // INELSEIF_WHILE ::= SINTAXWHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // INELSEIF_WHILE ::= SINTAXIF_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // INELSEIF_WHILE ::= VARIABLE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // INELSEIF_WHILE ::= LLAMADAFUNC INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // INELSEIF_WHILE ::= ASIGNACIONVAL INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // INELSEIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // INELSEIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // INELSEIF_WHILE ::= OPERACIONES INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // INELSEIF_WHILE ::= CONSOLEWRITE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // INELSEIF_WHILE ::= SINTAXFOR_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // INELSEIF_WHILE ::= tk_comentario tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INELSEIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INELSEIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INELSEIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INELSEIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INELSEIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INELSEIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INELSEIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INELSEIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INELSEIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INELSEIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INELSE_WHILE ::= SINTAXWHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INELSE_WHILE ::= SINTAXIF_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INELSE_WHILE ::= VARIABLE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // INELSE_WHILE ::= LLAMADAFUNC INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // INELSE_WHILE ::= ASIGNACIONVAL INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // INELSE_WHILE ::= OPERACIONES INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // INELSE_WHILE ::= CONSOLEWRITE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // INELSE_WHILE ::= SINTAXFOR_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // INELSE_WHILE ::= tk_comentario tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // INELSE_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // INELSE_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // INELSE_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // INELSE_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // INELSE_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // INELSE_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // INELSE_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // INELSE_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // INELSE_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // INELSE_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // INFOR_WHILE ::= SINTAXWHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // INFOR_WHILE ::= SINTAXFOR_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // INFOR_WHILE ::= SINTAXIF_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // INFOR_WHILE ::= VARIABLE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // INFOR_WHILE ::= LLAMADAFUNC INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // INFOR_WHILE ::= ASIGNACIONVAL INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // INFOR_WHILE ::= CONSOLEWRITE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // INFOR_WHILE ::= OPERACIONES INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // INFOR_WHILE ::= tk_comentario tk_Linea INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // INFOR_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // INFOR_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // INFOR_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // INFOR_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // INFOR_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // INFOR_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // INFOR_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // INFOR_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // INFOR_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // INFOR_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // INFOR_WHILE ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_Linea INWHILE tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // INWHILE ::= SINTAXWHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // INWHILE ::= SINTAXFOR_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // INWHILE ::= SINTAXIF_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // INWHILE ::= VARIABLE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // INWHILE ::= LLAMADAFUNC INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // INWHILE ::= ASIGNACIONVAL INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // INWHILE ::= CONSOLEWRITE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // INWHILE ::= OPERACIONES INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // INWHILE ::= tk_comentario tk_Linea INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // INWHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // INWHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // INWHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // INWHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // INWHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // INWHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // INWHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // INWHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // INWHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // INWHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Gramatica$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Gramatica$do_action_part00000001(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
