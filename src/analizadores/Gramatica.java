
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\077\000\002\002\004\000\002\002\006\000\002\003" +
    "\011\000\002\003\013\000\002\003\006\000\002\003\006" +
    "\000\002\003\003\000\002\014\004\000\002\006\003\000" +
    "\002\006\003\000\002\004\006\000\002\005\007\000\002" +
    "\005\003\000\002\031\003\000\002\031\003\000\002\031" +
    "\003\000\002\007\006\000\002\007\010\000\002\007\007" +
    "\000\002\007\011\000\002\007\010\000\002\007\005\000" +
    "\002\007\005\000\002\011\003\000\002\011\003\000\002" +
    "\010\003\000\002\010\003\000\002\010\003\000\002\016" +
    "\003\000\002\016\003\000\002\024\003\000\002\024\003" +
    "\000\002\024\003\000\002\024\003\000\002\024\003\000" +
    "\002\017\010\000\002\017\012\000\002\017\015\000\002" +
    "\030\003\000\002\030\003\000\002\022\005\000\002\022" +
    "\005\000\002\022\005\000\002\022\003\000\002\023\014" +
    "\000\002\025\004\000\002\025\003\000\002\041\005\000" +
    "\002\041\003\000\002\042\003\000\002\042\003\000\002" +
    "\042\003\000\002\042\003\000\002\026\006\000\002\035" +
    "\004\000\002\036\005\000\002\036\003\000\002\043\003" +
    "\000\002\043\005\000\002\034\005\000\002\034\004\000" +
    "\002\034\006\000\002\034\007" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\011\000\004\037\004\001\002\000\004\040\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\004\075\010\001\002\000\004\072\011\001\002\000" +
    "\004\035\013\001\002\000\004\002\000\001\002\000\004" +
    "\002\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\011\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\014\011\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    
    public void syntax_error(Symbol sym){
        this.sym = sym;
    }

    public Symbol getS(){
        return this.sym;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= tk_public tk_module tk_Identificador CUERPOMAIN 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // OPCPROCESO ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS CUERPOPRO OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // OPCPROCESO ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD CUERPOFUNC OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OPCPROCESO ::= tk_sub tk_main tk_ParentesisA tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // OPCPROCESO ::= tk_structure tk_Identificador CUERPOSTRUC OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // OPCPROCESO ::= tk_Coma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CUERPOMAIN ::= tk_end tk_sub 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOMAIN",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // PARAMETROSAUX ::= tk_byval 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROSAUX",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // PARAMETROSAUX ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROSAUX",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // PARAMETROS ::= PARAMETROSAUX tk_as TIPOD PARAMETROSPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // PARAMETROSPRIMA ::= tk_Coma PARAMETROSAUX tk_as TIPOD PARAMETROSPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROSPRIMA",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // PARAMETROSPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROSPRIMA",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // VALOR ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // VARIABLE ::= tk_Identificador tk_Igual VALOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // VARIABLE ::= tk_Identificador tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // TIPOD ::= tk_String 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CICLOS ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CICLOS ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // SINTAXIF ::= tk_if CONDICION tk_then SENTENCIAIF tk_end tk_if 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // SINTAXIF ::= tk_if CONDICION tk_then SENTENCIAIF tk_else SENTENCIAIF tk_end tk_if 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // SINTAXIF ::= tk_if CONDICION tk_then SENTENCIAIF tk_elseif CONDICION tk_then SENTENCIAIF tk_else tk_end tk_if 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-10)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // CONDICION ::= iDNUM OPCRELACIONALES LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual tk_Numero tk_to tk_Numero tk_step AUMDEC tk_next tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // OPERACIONES ::= iDNUM OPEARITMETICA OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // OPERACIONES ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_loop 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // IDENTIFICADORES ::= tk_Identificador IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // IDENTIFICADORESPRIMA ::= tk_Coma tk_Identificador IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // IDENTIFICADORESPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // IDENTIFICADORESUB ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // IDENTIFICADORESUB ::= tk_Identificador tk_Coma IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // LLAMADAFUNC ::= tk_Identificador IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Coma IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
    }
}

}
