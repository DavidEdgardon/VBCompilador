
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01ea\000\002\002\004\000\002\002\007\000\002\003" +
    "\015\000\002\003\017\000\002\003\014\000\002\003\013" +
    "\000\002\003\005\000\002\016\005\000\002\016\005\000" +
    "\002\016\004\000\002\040\005\000\002\040\004\000\002" +
    "\013\004\000\002\013\004\000\002\013\004\000\002\013" +
    "\004\000\002\013\004\000\002\013\004\000\002\013\004" +
    "\000\002\013\004\000\002\013\005\000\002\013\004\000" +
    "\002\013\003\000\002\013\003\000\002\013\003\000\002" +
    "\013\003\000\002\013\003\000\002\013\003\000\002\013" +
    "\003\000\002\013\003\000\002\102\012\000\002\103\006" +
    "\000\002\104\004\000\002\104\004\000\002\104\004\000" +
    "\002\104\004\000\002\104\004\000\002\104\004\000\002" +
    "\104\004\000\002\104\004\000\002\104\005\000\002\104" +
    "\004\000\002\104\003\000\002\104\003\000\002\104\003" +
    "\000\002\104\003\000\002\104\003\000\002\104\003\000" +
    "\002\104\003\000\002\104\003\000\002\104\005\000\002" +
    "\104\005\000\002\104\004\000\002\106\004\000\002\106" +
    "\004\000\002\106\004\000\002\106\004\000\002\106\004" +
    "\000\002\106\004\000\002\106\004\000\002\106\004\000" +
    "\002\106\005\000\002\106\004\000\002\106\003\000\002" +
    "\106\003\000\002\106\003\000\002\106\003\000\002\106" +
    "\003\000\002\106\003\000\002\106\003\000\002\106\003" +
    "\000\002\106\005\000\002\105\004\000\002\105\004\000" +
    "\002\105\004\000\002\105\004\000\002\105\005\000\002" +
    "\105\004\000\002\105\004\000\002\105\004\000\002\105" +
    "\004\000\002\105\004\000\002\105\005\000\002\105\004" +
    "\000\002\105\003\000\002\105\003\000\002\105\003\000" +
    "\002\105\003\000\002\105\003\000\002\105\003\000\002" +
    "\105\003\000\002\105\003\000\002\105\005\000\002\100" +
    "\011\000\002\101\004\000\002\101\004\000\002\101\004" +
    "\000\002\101\004\000\002\101\004\000\002\101\004\000" +
    "\002\101\004\000\002\101\004\000\002\101\005\000\002" +
    "\101\004\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\101\003" +
    "\000\002\101\003\000\002\101\003\000\002\101\005\000" +
    "\002\101\005\000\002\101\005\000\002\110\017\000\002" +
    "\110\014\000\002\107\004\000\002\107\004\000\002\107" +
    "\004\000\002\107\004\000\002\107\004\000\002\107\004" +
    "\000\002\107\004\000\002\107\004\000\002\107\005\000" +
    "\002\107\004\000\002\107\003\000\002\107\003\000\002" +
    "\107\003\000\002\107\003\000\002\107\003\000\002\107" +
    "\003\000\002\107\003\000\002\107\003\000\002\107\005" +
    "\000\002\107\005\000\002\107\005\000\002\014\004\000" +
    "\002\014\004\000\002\014\004\000\002\014\004\000\002" +
    "\014\004\000\002\014\004\000\002\014\004\000\002\014" +
    "\004\000\002\014\005\000\002\014\004\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\003\000\002\014\003\000\002" +
    "\014\003\000\002\004\007\000\002\004\006\000\002\004" +
    "\010\000\002\004\007\000\002\004\003\000\002\034\003" +
    "\000\002\034\003\000\002\034\003\000\002\005\007\000" +
    "\002\005\011\000\002\005\011\000\002\005\007\000\002" +
    "\005\006\000\002\005\010\000\002\006\006\000\002\006" +
    "\005\000\002\006\012\000\002\012\003\000\002\012\003" +
    "\000\002\011\003\000\002\011\003\000\002\011\003\000" +
    "\002\017\003\000\002\017\003\000\002\027\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\033\003\000\002\033\003\000\002\025\005" +
    "\000\002\025\005\000\002\025\007\000\002\025\003\000" +
    "\002\025\011\000\002\030\004\000\002\030\003\000\002" +
    "\047\005\000\002\047\006\000\002\057\005\000\002\057" +
    "\006\000\002\057\005\000\002\057\005\000\002\057\005" +
    "\000\002\057\005\000\002\057\004\000\002\050\003\000" +
    "\002\050\003\000\002\050\003\000\002\050\003\000\002" +
    "\050\003\000\002\050\003\000\002\043\004\000\002\044" +
    "\004\000\002\044\003\000\002\051\005\000\002\051\004" +
    "\000\002\042\006\000\002\042\006\000\002\042\005\000" +
    "\002\042\010\000\002\042\007\000\002\010\011\000\002" +
    "\020\012\000\002\024\006\000\002\021\004\000\002\021" +
    "\004\000\002\021\004\000\002\021\004\000\002\021\004" +
    "\000\002\021\004\000\002\021\004\000\002\021\004\000" +
    "\002\021\005\000\002\021\004\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\021\003\000\002\021\003\000\002\021\003" +
    "\000\002\021\005\000\002\021\004\000\002\022\004\000" +
    "\002\022\004\000\002\022\004\000\002\022\004\000\002" +
    "\022\004\000\002\022\004\000\002\022\004\000\002\022" +
    "\004\000\002\022\005\000\002\022\004\000\002\022\003" +
    "\000\002\022\003\000\002\022\003\000\002\022\003\000" +
    "\002\022\003\000\002\022\003\000\002\022\003\000\002" +
    "\022\003\000\002\023\004\000\002\023\004\000\002\023" +
    "\004\000\002\023\004\000\002\023\005\000\002\023\004" +
    "\000\002\023\004\000\002\023\004\000\002\023\004\000" +
    "\002\023\004\000\002\023\005\000\002\023\004\000\002" +
    "\023\003\000\002\023\003\000\002\023\003\000\002\023" +
    "\003\000\002\023\003\000\002\023\003\000\002\023\003" +
    "\000\002\023\003\000\002\026\017\000\002\026\014\000" +
    "\002\055\004\000\002\055\004\000\002\055\004\000\002" +
    "\055\004\000\002\055\004\000\002\055\004\000\002\055" +
    "\004\000\002\055\004\000\002\055\005\000\002\055\004" +
    "\000\002\055\003\000\002\055\003\000\002\055\003\000" +
    "\002\055\003\000\002\055\003\000\002\055\003\000\002" +
    "\055\003\000\002\055\003\000\002\055\005\000\002\073" +
    "\012\000\002\074\006\000\002\075\004\000\002\075\004" +
    "\000\002\075\004\000\002\075\004\000\002\075\004\000" +
    "\002\075\004\000\002\075\004\000\002\075\004\000\002" +
    "\075\005\000\002\075\004\000\002\075\003\000\002\075" +
    "\003\000\002\075\003\000\002\075\003\000\002\075\003" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\075\005\000\002\075\005\000\002\075\004\000\002" +
    "\076\004\000\002\076\004\000\002\076\004\000\002\076" +
    "\004\000\002\076\005\000\002\076\004\000\002\076\004" +
    "\000\002\076\004\000\002\076\004\000\002\076\004\000" +
    "\002\076\005\000\002\076\004\000\002\076\003\000\002" +
    "\076\003\000\002\076\003\000\002\076\003\000\002\076" +
    "\003\000\002\076\003\000\002\076\003\000\002\076\003" +
    "\000\002\076\005\000\002\077\004\000\002\077\004\000" +
    "\002\077\004\000\002\077\004\000\002\077\004\000\002" +
    "\077\004\000\002\077\004\000\002\077\004\000\002\077" +
    "\005\000\002\077\004\000\002\077\003\000\002\077\003" +
    "\000\002\077\003\000\002\077\003\000\002\077\003\000" +
    "\002\077\003\000\002\077\003\000\002\077\003\000\002" +
    "\077\005\000\002\071\011\000\002\072\004\000\002\072" +
    "\004\000\002\072\004\000\002\072\004\000\002\072\004" +
    "\000\002\072\004\000\002\072\004\000\002\072\004\000" +
    "\002\072\005\000\002\072\004\000\002\072\003\000\002" +
    "\072\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\003\000\002\072\003\000\002\072\003\000\002\072\003" +
    "\000\002\072\005\000\002\072\005\000\002\062\012\000" +
    "\002\066\006\000\002\063\004\000\002\063\004\000\002" +
    "\063\004\000\002\063\004\000\002\063\004\000\002\063" +
    "\004\000\002\063\004\000\002\063\004\000\002\063\005" +
    "\000\002\063\004\000\002\063\003\000\002\063\003\000" +
    "\002\063\003\000\002\063\003\000\002\063\003\000\002" +
    "\063\003\000\002\063\003\000\002\063\003\000\002\063" +
    "\005\000\002\063\005\000\002\063\004\000\002\065\004" +
    "\000\002\065\004\000\002\065\004\000\002\065\004\000" +
    "\002\065\004\000\002\065\005\000\002\065\004\000\002" +
    "\065\004\000\002\065\004\000\002\065\004\000\002\065" +
    "\005\000\002\065\004\000\002\065\003\000\002\065\003" +
    "\000\002\065\003\000\002\065\003\000\002\065\003\000" +
    "\002\065\003\000\002\065\003\000\002\065\003\000\002" +
    "\065\005\000\002\064\004\000\002\064\004\000\002\064" +
    "\004\000\002\064\004\000\002\064\004\000\002\064\004" +
    "\000\002\064\004\000\002\064\004\000\002\064\005\000" +
    "\002\064\004\000\002\064\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\003\000\002\064\003\000\002\064" +
    "\003\000\002\064\003\000\002\064\003\000\002\064\005" +
    "\000\002\070\017\000\002\070\014\000\002\067\004\000" +
    "\002\067\004\000\002\067\004\000\002\067\004\000\002" +
    "\067\004\000\002\067\004\000\002\067\004\000\002\067" +
    "\004\000\002\067\005\000\002\067\004\000\002\067\003" +
    "\000\002\067\003\000\002\067\003\000\002\067\003\000" +
    "\002\067\003\000\002\067\003\000\002\067\003\000\002" +
    "\067\003\000\002\067\005\000\002\067\005\000\002\031" +
    "\011\000\002\056\004\000\002\056\004\000\002\056\004" +
    "\000\002\056\004\000\002\056\004\000\002\056\004\000" +
    "\002\056\004\000\002\056\004\000\002\056\005\000\002" +
    "\056\004\000\002\056\003\000\002\056\003\000\002\056" +
    "\003\000\002\056\003\000\002\056\003\000\002\056\003" +
    "\000\002\056\003\000\002\056\003\000\002\056\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u031e\000\004\040\004\001\002\000\004\041\007\001" +
    "\002\000\004\002\006\001\002\000\004\002\001\001\002" +
    "\000\004\101\010\001\002\000\004\076\011\001\002\000" +
    "\006\012\014\040\013\001\002\000\004\002\000\001\002" +
    "\000\010\035\017\036\020\037\021\001\002\000\004\076" +
    "\015\001\002\000\006\012\014\040\013\001\002\000\004" +
    "\002\ufffb\001\002\000\004\101\u025e\001\002\000\006\075" +
    "\045\101\046\001\002\000\004\101\022\001\002\000\004" +
    "\076\023\001\002\000\006\012\026\101\024\001\002\000" +
    "\004\067\035\001\002\000\004\074\031\001\002\000\004" +
    "\076\027\001\002\000\010\012\026\074\ufff8\101\024\001" +
    "\002\000\004\074\ufff9\001\002\000\004\037\032\001\002" +
    "\000\004\076\033\001\002\000\006\012\014\040\013\001" +
    "\002\000\004\002\ufffc\001\002\000\010\013\036\014\041" +
    "\015\040\001\002\000\016\016\uff51\060\uff51\062\uff51\063" +
    "\uff51\076\uff51\101\uff51\001\002\000\004\074\ufffa\001\002" +
    "\000\016\016\uff52\060\uff52\062\uff52\063\uff52\076\uff52\101" +
    "\uff52\001\002\000\016\016\uff50\060\uff50\062\uff50\063\uff50" +
    "\076\uff50\101\uff50\001\002\000\004\076\043\001\002\000" +
    "\010\012\026\074\ufff6\101\024\001\002\000\004\074\ufff7" +
    "\001\002\000\004\061\u0257\001\002\000\004\061\047\001" +
    "\002\000\012\016\052\062\051\063\053\101\050\001\002" +
    "\000\004\067\u0254\001\002\000\006\067\uff61\076\uff61\001" +
    "\002\000\004\101\u0250\001\002\000\006\016\u0248\101\u0247" +
    "\001\002\000\004\076\055\001\002\000\024\007\067\012" +
    "\073\017\075\023\063\032\077\061\074\066\057\101\065" +
    "\102\100\001\002\000\026\007\067\012\073\017\075\023" +
    "\063\032\077\061\074\066\057\074\uff6d\101\065\102\100" +
    "\001\002\000\004\101\u0238\001\002\000\026\007\067\012" +
    "\073\017\075\023\063\032\077\061\074\066\057\074\uff69" +
    "\101\065\102\100\001\002\000\026\007\067\012\073\017" +
    "\075\023\063\032\077\061\074\066\057\074\uff68\101\065" +
    "\102\100\001\002\000\026\007\067\012\073\017\075\023" +
    "\063\032\077\061\074\066\057\074\uff66\101\065\102\100" +
    "\001\002\000\004\101\u0197\001\002\000\004\074\u0193\001" +
    "\002\000\030\042\uff48\043\uff48\044\uff48\045\uff48\046\uff48" +
    "\047\uff48\060\u0173\061\u0171\065\u0170\101\103\102\100\001" +
    "\002\000\026\007\067\012\073\017\075\023\063\032\077" +
    "\061\074\066\057\074\uff6a\101\065\102\100\001\002\000" +
    "\004\065\u0169\001\002\000\026\007\067\012\073\017\075" +
    "\023\063\032\077\061\074\066\057\074\uff6b\101\065\102" +
    "\100\001\002\000\026\007\067\012\073\017\075\023\063" +
    "\032\077\061\074\066\057\074\uff67\101\065\102\100\001" +
    "\002\000\016\042\131\043\127\044\125\045\123\046\124" +
    "\047\130\001\002\000\004\076\u0165\001\002\000\006\101" +
    "\103\102\100\001\002\000\012\033\102\034\106\101\103" +
    "\102\100\001\002\000\026\007\067\012\073\017\075\023" +
    "\063\032\077\061\074\066\057\074\uff6c\101\065\102\100" +
    "\001\002\000\004\026\101\001\002\000\052\020\uff47\024" +
    "\uff47\027\uff47\042\uff47\043\uff47\044\uff47\045\uff47\046\uff47" +
    "\047\uff47\054\uff47\055\uff47\056\uff47\057\uff47\060\uff47\061" +
    "\uff47\062\uff47\063\uff47\076\uff47\101\uff47\102\uff47\001\002" +
    "\000\012\033\102\034\106\101\103\102\100\001\002\000" +
    "\006\020\uff54\076\uff54\001\002\000\050\024\uff48\027\uff48" +
    "\042\uff48\043\uff48\044\uff48\045\uff48\046\uff48\047\uff48\054" +
    "\uff48\055\uff48\056\uff48\057\uff48\060\uff48\061\uff48\062\uff48" +
    "\063\uff48\076\uff48\101\uff48\102\uff48\001\002\000\004\076" +
    "\143\001\002\000\006\020\uff43\076\uff43\001\002\000\006" +
    "\020\uff53\076\uff53\001\002\000\014\054\115\055\112\056" +
    "\113\057\111\060\114\001\002\000\014\033\102\034\106" +
    "\061\120\101\116\102\100\001\002\000\014\033\uff4a\034" +
    "\uff4a\061\uff4a\101\uff4a\102\uff4a\001\002\000\014\033\uff4c" +
    "\034\uff4c\061\uff4c\101\uff4c\102\uff4c\001\002\000\014\033" +
    "\uff4b\034\uff4b\061\uff4b\101\uff4b\102\uff4b\001\002\000\014" +
    "\033\uff49\034\uff49\061\uff49\101\uff49\102\uff49\001\002\000" +
    "\014\033\uff4d\034\uff4d\061\uff4d\101\uff4d\102\uff4d\001\002" +
    "\000\010\020\uff48\061\134\076\uff48\001\002\000\006\020" +
    "\uff45\076\uff45\001\002\000\006\101\103\102\100\001\002" +
    "\000\006\020\uff46\076\uff46\001\002\000\016\042\131\043" +
    "\127\044\125\045\123\046\124\047\130\001\002\000\024" +
    "\042\uff33\043\uff33\044\uff33\045\uff33\046\uff33\047\uff33\061" +
    "\uff33\101\uff33\102\uff33\001\002\000\024\042\uff32\043\uff32" +
    "\044\uff32\045\uff32\046\uff32\047\uff32\061\uff32\101\uff32\102" +
    "\uff32\001\002\000\024\042\uff34\043\uff34\044\uff34\045\uff34" +
    "\046\uff34\047\uff34\061\uff34\101\uff34\102\uff34\001\002\000" +
    "\006\101\103\102\100\001\002\000\024\042\uff35\043\uff35" +
    "\044\uff35\045\uff35\046\uff35\047\uff35\061\uff35\101\uff35\102" +
    "\uff35\001\002\000\024\042\uff31\043\uff31\044\uff31\045\uff31" +
    "\046\uff31\047\uff31\061\uff31\101\uff31\102\uff31\001\002\000" +
    "\024\042\uff36\043\uff36\044\uff36\045\uff36\046\uff36\047\uff36" +
    "\061\uff36\101\uff36\102\uff36\001\002\000\004\062\133\001" +
    "\002\000\006\020\uff42\076\uff42\001\002\000\006\101\103" +
    "\102\100\001\002\000\006\020\uff44\076\uff44\001\002\000" +
    "\006\062\137\063\141\001\002\000\012\020\uff2e\062\uff2e" +
    "\063\uff2e\076\uff2e\001\002\000\012\020\uff30\062\uff30\063" +
    "\uff30\076\uff30\001\002\000\006\101\103\102\100\001\002" +
    "\000\012\020\uff2f\062\uff2f\063\uff2f\076\uff2f\001\002\000" +
    "\026\007\067\012\154\017\156\023\147\032\077\061\074" +
    "\066\057\070\160\101\065\102\100\001\002\000\030\007" +
    "\067\012\154\017\156\023\147\025\ufe1b\032\077\061\074" +
    "\066\057\070\160\101\065\102\100\001\002\000\030\007" +
    "\067\012\154\017\156\023\147\025\ufe1a\032\077\061\074" +
    "\066\057\070\160\101\065\102\100\001\002\000\030\007" +
    "\067\012\154\017\156\023\147\025\ufe20\032\077\061\074" +
    "\066\057\070\160\101\065\102\100\001\002\000\004\101" +
    "\323\001\002\000\030\007\067\012\154\017\156\023\147" +
    "\025\ufe1c\032\077\061\074\066\057\070\160\101\065\102" +
    "\100\001\002\000\030\007\067\012\154\017\156\023\147" +
    "\025\ufe1d\032\077\061\074\066\057\070\160\101\065\102" +
    "\100\001\002\000\030\007\067\012\154\017\156\023\147" +
    "\025\ufe19\032\077\061\074\066\057\070\160\101\065\102" +
    "\100\001\002\000\030\007\067\012\154\017\156\023\147" +
    "\025\ufe1f\032\077\061\074\066\057\070\160\101\065\102" +
    "\100\001\002\000\004\076\315\001\002\000\030\007\067" +
    "\012\154\017\156\023\147\025\ufe1e\032\077\061\074\066" +
    "\057\070\160\101\065\102\100\001\002\000\012\033\102" +
    "\034\106\101\103\102\100\001\002\000\004\025\163\001" +
    "\002\000\004\032\161\001\002\000\004\076\162\001\002" +
    "\000\004\025\ufe18\001\002\000\004\076\164\001\002\000" +
    "\040\007\ufe2b\012\ufe2b\017\ufe2b\021\ufe2b\022\ufe2b\023\ufe2b" +
    "\025\ufe2b\031\ufe2b\032\ufe2b\061\ufe2b\066\ufe2b\070\ufe2b\074" +
    "\ufe2b\101\ufe2b\102\ufe2b\001\002\000\004\020\166\001\002" +
    "\000\004\076\167\001\002\000\032\007\067\012\201\017" +
    "\156\021\171\022\170\023\147\032\077\061\074\066\057" +
    "\070\204\101\065\102\100\001\002\000\004\076\312\001" +
    "\002\000\012\033\102\034\106\101\103\102\100\001\002" +
    "\000\034\007\067\012\201\017\156\021\171\022\170\023" +
    "\147\032\077\061\074\066\057\070\204\074\ufe71\101\065" +
    "\102\100\001\002\000\034\007\067\012\201\017\156\021" +
    "\171\022\170\023\147\032\077\061\074\066\057\070\204" +
    "\074\ufe70\101\065\102\100\001\002\000\034\007\067\012" +
    "\201\017\156\021\171\022\170\023\147\032\077\061\074" +
    "\066\057\070\204\074\ufe6d\101\065\102\100\001\002\000" +
    "\034\007\067\012\201\017\156\021\171\022\170\023\147" +
    "\032\077\061\074\066\057\070\204\074\ufe72\101\065\102" +
    "\100\001\002\000\034\007\067\012\201\017\156\021\171" +
    "\022\170\023\147\032\077\061\074\066\057\070\204\074" +
    "\ufe73\101\065\102\100\001\002\000\034\007\067\012\201" +
    "\017\156\021\171\022\170\023\147\032\077\061\074\066" +
    "\057\070\204\074\ufe6f\101\065\102\100\001\002\000\034" +
    "\007\067\012\201\017\156\021\171\022\170\023\147\032" +
    "\077\061\074\066\057\070\204\074\ufe6e\101\065\102\100" +
    "\001\002\000\004\076\213\001\002\000\004\074\210\001" +
    "\002\000\034\007\067\012\201\017\156\021\171\022\170" +
    "\023\147\032\077\061\074\066\057\070\204\074\ufe74\101" +
    "\065\102\100\001\002\000\004\032\205\001\002\000\004" +
    "\076\206\001\002\000\004\074\ufe6c\001\002\000\004\074" +
    "\ufe7e\001\002\000\004\017\211\001\002\000\004\076\212" +
    "\001\002\000\040\007\ufe80\012\ufe80\017\ufe80\021\ufe80\022" +
    "\ufe80\023\ufe80\025\ufe80\031\ufe80\032\ufe80\061\ufe80\066\ufe80" +
    "\070\ufe80\074\ufe80\101\ufe80\102\ufe80\001\002\000\034\007" +
    "\067\012\201\017\156\021\171\022\170\023\147\032\077" +
    "\061\074\066\057\070\204\074\ufe75\101\065\102\100\001" +
    "\002\000\004\074\ufe76\001\002\000\004\074\ufe78\001\002" +
    "\000\004\074\ufe7a\001\002\000\004\074\ufe7d\001\002\000" +
    "\004\074\ufe7c\001\002\000\004\074\ufe77\001\002\000\004" +
    "\074\ufe79\001\002\000\004\074\ufe7b\001\002\000\004\074" +
    "\ufe6a\001\002\000\004\020\226\001\002\000\004\076\227" +
    "\001\002\000\032\007\067\012\242\017\156\021\231\022" +
    "\230\023\147\032\077\061\074\066\057\070\244\101\065" +
    "\102\100\001\002\000\004\076\262\001\002\000\012\033" +
    "\102\034\106\101\103\102\100\001\002\000\034\007\067" +
    "\012\242\017\156\021\231\022\230\023\147\032\077\061" +
    "\074\066\057\070\244\074\ufe59\101\065\102\100\001\002" +
    "\000\034\007\067\012\242\017\156\021\231\022\230\023" +
    "\147\032\077\061\074\066\057\070\244\074\ufe58\101\065" +
    "\102\100\001\002\000\034\007\067\012\242\017\156\021" +
    "\231\022\230\023\147\032\077\061\074\066\057\070\244" +
    "\074\ufe5d\101\065\102\100\001\002\000\004\074\ufe7f\001" +
    "\002\000\034\007\067\012\242\017\156\021\231\022\230" +
    "\023\147\032\077\061\074\066\057\070\244\074\ufe5a\101" +
    "\065\102\100\001\002\000\034\007\067\012\242\017\156" +
    "\021\231\022\230\023\147\032\077\061\074\066\057\070" +
    "\244\074\ufe5b\101\065\102\100\001\002\000\034\007\067" +
    "\012\242\017\156\021\231\022\230\023\147\032\077\061" +
    "\074\066\057\070\244\074\ufe57\101\065\102\100\001\002" +
    "\000\034\007\067\012\242\017\156\021\231\022\230\023" +
    "\147\032\077\061\074\066\057\070\244\074\ufe56\101\065" +
    "\102\100\001\002\000\004\076\250\001\002\000\034\007" +
    "\067\012\242\017\156\021\231\022\230\023\147\032\077" +
    "\061\074\066\057\070\244\074\ufe5c\101\065\102\100\001" +
    "\002\000\004\032\245\001\002\000\004\076\246\001\002" +
    "\000\004\074\ufe55\001\002\000\004\074\ufe68\001\002\000" +
    "\034\007\067\012\242\017\156\021\231\022\230\023\147" +
    "\032\077\061\074\066\057\070\244\074\ufe5e\101\065\102" +
    "\100\001\002\000\004\074\ufe5f\001\002\000\004\074\ufe60" +
    "\001\002\000\004\074\ufe62\001\002\000\004\074\ufe67\001" +
    "\002\000\004\074\ufe66\001\002\000\004\074\ufe69\001\002" +
    "\000\004\074\ufe61\001\002\000\004\074\ufe65\001\002\000" +
    "\004\074\ufe63\001\002\000\026\007\067\012\272\017\156" +
    "\023\147\032\077\061\074\066\057\070\274\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe46\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe45\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe4a\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe47\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe48\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe44\101\065\102" +
    "\100\001\002\000\030\007\067\012\272\017\156\023\147" +
    "\032\077\061\074\066\057\070\274\074\ufe43\101\065\102" +
    "\100\001\002\000\004\076\301\001\002\000\030\007\067" +
    "\012\272\017\156\023\147\032\077\061\074\066\057\070" +
    "\274\074\ufe49\101\065\102\100\001\002\000\004\032\276" +
    "\001\002\000\004\074\ufe64\001\002\000\004\076\277\001" +
    "\002\000\004\074\ufe42\001\002\000\004\074\ufe53\001\002" +
    "\000\030\007\067\012\272\017\156\023\147\032\077\061" +
    "\074\066\057\070\274\074\ufe4b\101\065\102\100\001\002" +
    "\000\004\074\ufe4c\001\002\000\004\074\ufe4d\001\002\000" +
    "\004\074\ufe4f\001\002\000\004\074\ufe52\001\002\000\004" +
    "\074\ufe51\001\002\000\004\074\ufe54\001\002\000\004\074" +
    "\ufe4e\001\002\000\004\074\ufe50\001\002\000\026\007\067" +
    "\012\272\017\156\023\147\032\077\061\074\066\057\070" +
    "\274\101\065\102\100\001\002\000\004\074\ufe6b\001\002" +
    "\000\004\025\ufe28\001\002\000\030\007\067\012\154\017" +
    "\156\023\147\025\ufe21\032\077\061\074\066\057\070\160" +
    "\101\065\102\100\001\002\000\004\025\ufe22\001\002\000" +
    "\004\025\ufe29\001\002\000\004\025\ufe23\001\002\000\004" +
    "\025\ufe27\001\002\000\004\025\ufe26\001\002\000\004\060" +
    "\324\001\002\000\006\101\103\102\100\001\002\000\004" +
    "\024\326\001\002\000\010\061\074\101\103\102\100\001" +
    "\002\000\026\007\067\012\350\017\156\023\147\032\077" +
    "\061\074\066\057\070\352\101\065\102\100\001\002\000" +
    "\020\027\332\042\131\043\127\044\125\045\123\046\124" +
    "\047\130\001\002\000\024\042\131\043\127\044\125\045" +
    "\123\046\124\047\130\061\377\101\103\102\100\001\002" +
    "\000\006\043\335\102\334\001\002\000\004\076\337\001" +
    "\002\000\004\076\uff40\001\002\000\004\102\336\001\002" +
    "\000\004\076\uff41\001\002\000\026\007\067\012\350\017" +
    "\156\023\147\032\077\061\074\066\057\070\352\101\065" +
    "\102\100\001\002\000\030\007\067\012\350\017\156\023" +
    "\147\031\ufe30\032\077\061\074\066\057\070\352\101\065" +
    "\102\100\001\002\000\030\007\067\012\350\017\156\023" +
    "\147\031\ufe2f\032\077\061\074\066\057\070\352\101\065" +
    "\102\100\001\002\000\030\007\067\012\350\017\156\023" +
    "\147\031\ufe35\032\077\061\074\066\057\070\352\101\065" +
    "\102\100\001\002\000\030\007\067\012\350\017\156\023" +
    "\147\031\ufe31\032\077\061\074\066\057\070\352\101\065" +
    "\102\100\001\002\000\004\031\365\001\002\000\030\007" +
    "\067\012\350\017\156\023\147\031\ufe32\032\077\061\074" +
    "\066\057\070\352\101\065\102\100\001\002\000\030\007" +
    "\067\012\350\017\156\023\147\031\ufe2e\032\077\061\074" +
    "\066\057\070\352\101\065\102\100\001\002\000\030\007" +
    "\067\012\350\017\156\023\147\031\ufe34\032\077\061\074" +
    "\066\057\070\352\101\065\102\100\001\002\000\004\076" +
    "\360\001\002\000\030\007\067\012\350\017\156\023\147" +
    "\031\ufe33\032\077\061\074\066\057\070\352\101\065\102" +
    "\100\001\002\000\006\023\354\032\353\001\002\000\004" +
    "\076\356\001\002\000\004\076\355\001\002\000\004\031" +
    "\ufe2c\001\002\000\004\031\ufe2d\001\002\000\004\031\ufe3d" +
    "\001\002\000\030\007\067\012\350\017\156\023\147\031" +
    "\ufe36\032\077\061\074\066\057\070\352\101\065\102\100" +
    "\001\002\000\004\031\ufe37\001\002\000\004\031\ufe3e\001" +
    "\002\000\004\031\ufe38\001\002\000\004\031\ufe3c\001\002" +
    "\000\004\101\366\001\002\000\004\076\367\001\002\000" +
    "\040\007\ufe41\012\ufe41\017\ufe41\021\ufe41\022\ufe41\023\ufe41" +
    "\025\ufe41\031\ufe41\032\ufe41\061\ufe41\066\ufe41\070\ufe41\074" +
    "\ufe41\101\ufe41\102\ufe41\001\002\000\004\031\ufe3b\001\002" +
    "\000\004\031\ufe3f\001\002\000\004\031\ufe39\001\002\000" +
    "\004\031\ufe3a\001\002\000\022\042\131\043\127\044\125" +
    "\045\123\046\124\047\130\062\u0106\076\u0108\001\002\000" +
    "\040\007\uff3f\012\uff3f\017\uff3f\021\uff3f\022\uff3f\023\uff3f" +
    "\025\uff3f\031\uff3f\032\uff3f\061\uff3f\066\uff3f\070\uff3f\074" +
    "\uff3f\101\uff3f\102\uff3f\001\002\000\006\101\103\102\100" +
    "\001\002\000\006\101\103\102\100\001\002\000\016\042" +
    "\131\043\127\044\125\045\123\046\124\047\130\001\002" +
    "\000\024\042\131\043\127\044\125\045\123\046\124\047" +
    "\130\061\377\101\103\102\100\001\002\000\040\007\uff3c" +
    "\012\uff3c\017\uff3c\021\uff3c\022\uff3c\023\uff3c\025\uff3c\031" +
    "\uff3c\032\uff3c\061\uff3c\066\uff3c\070\uff3c\074\uff3c\101\uff3c" +
    "\102\uff3c\001\002\000\026\042\131\043\127\044\125\045" +
    "\123\046\124\047\130\061\377\076\u0105\101\103\102\100" +
    "\001\002\000\040\007\uff3b\012\uff3b\017\uff3b\021\uff3b\022" +
    "\uff3b\023\uff3b\025\uff3b\031\uff3b\032\uff3b\061\uff3b\066\uff3b" +
    "\070\uff3b\074\uff3b\101\uff3b\102\uff3b\001\002\000\040\007" +
    "\uff39\012\uff39\017\uff39\021\uff39\022\uff39\023\uff39\025\uff39" +
    "\031\uff39\032\uff39\061\uff39\066\uff39\070\uff39\074\uff39\101" +
    "\uff39\102\uff39\001\002\000\026\042\131\043\127\044\125" +
    "\045\123\046\124\047\130\061\377\076\u010b\101\103\102" +
    "\100\001\002\000\024\042\131\043\127\044\125\045\123" +
    "\046\124\047\130\061\377\101\103\102\100\001\002\000" +
    "\040\007\uff37\012\uff37\017\uff37\021\uff37\022\uff37\023\uff37" +
    "\025\uff37\031\uff37\032\uff37\061\uff37\066\uff37\070\uff37\074" +
    "\uff37\101\uff37\102\uff37\001\002\000\040\007\uff3d\012\uff3d" +
    "\017\uff3d\021\uff3d\022\uff3d\023\uff3d\025\uff3d\031\uff3d\032" +
    "\uff3d\061\uff3d\066\uff3d\070\uff3d\074\uff3d\101\uff3d\102\uff3d" +
    "\001\002\000\040\007\uff3a\012\uff3a\017\uff3a\021\uff3a\022" +
    "\uff3a\023\uff3a\025\uff3a\031\uff3a\032\uff3a\061\uff3a\066\uff3a" +
    "\070\uff3a\074\uff3a\101\uff3a\102\uff3a\001\002\000\040\007" +
    "\uff38\012\uff38\017\uff38\021\uff38\022\uff38\023\uff38\025\uff38" +
    "\031\uff38\032\uff38\061\uff38\066\uff38\070\uff38\074\uff38\101" +
    "\uff38\102\uff38\001\002\000\004\031\u010d\001\002\000\004" +
    "\101\u010e\001\002\000\004\076\u010f\001\002\000\040\007" +
    "\ufe40\012\ufe40\017\ufe40\021\ufe40\022\ufe40\023\ufe40\025\ufe40" +
    "\031\ufe40\032\ufe40\061\ufe40\066\ufe40\070\ufe40\074\ufe40\101" +
    "\ufe40\102\ufe40\001\002\000\004\025\ufe2a\001\002\000\004" +
    "\025\ufe24\001\002\000\004\025\ufe25\001\002\000\004\074" +
    "\uff76\001\002\000\004\020\u0115\001\002\000\004\076\u0116" +
    "\001\002\000\030\007\067\012\u0121\017\075\021\u011a\022" +
    "\u0117\023\063\032\077\061\074\066\057\101\065\102\100" +
    "\001\002\000\004\076\u0160\001\002\000\032\007\067\012" +
    "\u0121\017\075\021\u011a\022\u0117\023\063\032\077\061\074" +
    "\066\057\074\uff13\101\065\102\100\001\002\000\032\007" +
    "\067\012\u0121\017\075\021\u011a\022\u0117\023\063\032\077" +
    "\061\074\066\057\074\uff16\101\065\102\100\001\002\000" +
    "\012\033\102\034\106\101\103\102\100\001\002\000\032" +
    "\007\067\012\u0121\017\075\021\u011a\022\u0117\023\063\032" +
    "\077\061\074\066\057\074\uff15\101\065\102\100\001\002" +
    "\000\032\007\067\012\u0121\017\075\021\u011a\022\u0117\023" +
    "\063\032\077\061\074\066\057\074\uff12\101\065\102\100" +
    "\001\002\000\032\007\067\012\u0121\017\075\021\u011a\022" +
    "\u0117\023\063\032\077\061\074\066\057\074\uff17\101\065" +
    "\102\100\001\002\000\032\007\067\012\u0121\017\075\021" +
    "\u011a\022\u0117\023\063\032\077\061\074\066\057\074\uff18" +
    "\101\065\102\100\001\002\000\032\007\067\012\u0121\017" +
    "\075\021\u011a\022\u0117\023\063\032\077\061\074\066\057" +
    "\074\uff14\101\065\102\100\001\002\000\004\074\u0126\001" +
    "\002\000\004\076\u0124\001\002\000\032\007\067\012\u0121" +
    "\017\075\021\u011a\022\u0117\023\063\032\077\061\074\066" +
    "\057\074\uff19\101\065\102\100\001\002\000\004\074\uff23" +
    "\001\002\000\032\007\067\012\u0121\017\075\021\u011a\022" +
    "\u0117\023\063\032\077\061\074\066\057\074\uff1a\101\065" +
    "\102\100\001\002\000\004\074\uff1b\001\002\000\004\017" +
    "\u0127\001\002\000\004\076\u0128\001\002\000\032\007\uff25" +
    "\012\uff25\017\uff25\021\uff25\022\uff25\023\uff25\032\uff25\061" +
    "\uff25\066\uff25\074\uff25\101\uff25\102\uff25\001\002\000\004" +
    "\074\uff1f\001\002\000\004\074\uff22\001\002\000\004\074" +
    "\uff21\001\002\000\004\074\uff1c\001\002\000\004\074\uff1e" +
    "\001\002\000\004\020\u0130\001\002\000\004\074\uff10\001" +
    "\002\000\004\076\u0131\001\002\000\030\007\067\012\u013c" +
    "\017\075\021\u0134\022\u0132\023\063\032\077\061\074\066" +
    "\057\101\065\102\100\001\002\000\004\076\u0149\001\002" +
    "\000\032\007\067\012\u013c\017\075\021\u0134\022\u0132\023" +
    "\063\032\077\061\074\066\057\074\ufeeb\101\065\102\100" +
    "\001\002\000\012\033\102\034\106\101\103\102\100\001" +
    "\002\000\032\007\067\012\u013c\017\075\021\u0134\022\u0132" +
    "\023\063\032\077\061\074\066\057\074\ufeee\101\065\102" +
    "\100\001\002\000\032\007\067\012\u013c\017\075\021\u0134" +
    "\022\u0132\023\063\032\077\061\074\066\057\074\ufeed\101" +
    "\065\102\100\001\002\000\032\007\067\012\u013c\017\075" +
    "\021\u0134\022\u0132\023\063\032\077\061\074\066\057\074" +
    "\ufeea\101\065\102\100\001\002\000\032\007\067\012\u013c" +
    "\017\075\021\u0134\022\u0132\023\063\032\077\061\074\066" +
    "\057\074\ufeef\101\065\102\100\001\002\000\032\007\067" +
    "\012\u013c\017\075\021\u0134\022\u0132\023\063\032\077\061" +
    "\074\066\057\074\ufef0\101\065\102\100\001\002\000\032" +
    "\007\067\012\u013c\017\075\021\u0134\022\u0132\023\063\032" +
    "\077\061\074\066\057\074\ufeec\101\065\102\100\001\002" +
    "\000\004\074\uff24\001\002\000\004\076\u013f\001\002\000" +
    "\032\007\067\012\u013c\017\075\021\u0134\022\u0132\023\063" +
    "\032\077\061\074\066\057\074\ufef1\101\065\102\100\001" +
    "\002\000\004\074\ufefd\001\002\000\032\007\067\012\u013c" +
    "\017\075\021\u0134\022\u0132\023\063\032\077\061\074\066" +
    "\057\074\ufef2\101\065\102\100\001\002\000\004\074\ufef3" +
    "\001\002\000\004\074\ufef7\001\002\000\004\074\ufefc\001" +
    "\002\000\004\074\ufefb\001\002\000\004\074\ufef4\001\002" +
    "\000\004\074\ufef6\001\002\000\004\074\ufefa\001\002\000" +
    "\004\074\ufef8\001\002\000\004\074\ufef5\001\002\000\024" +
    "\007\067\012\u0151\017\075\023\063\032\077\061\074\066" +
    "\057\101\065\102\100\001\002\000\026\007\067\012\u0151" +
    "\017\075\023\063\032\077\061\074\066\057\074\ufeff\101" +
    "\065\102\100\001\002\000\026\007\067\012\u0151\017\075" +
    "\023\063\032\077\061\074\066\057\074\uff02\101\065\102" +
    "\100\001\002\000\026\007\067\012\u0151\017\075\023\063" +
    "\032\077\061\074\066\057\074\uff01\101\065\102\100\001" +
    "\002\000\026\007\067\012\u0151\017\075\023\063\032\077" +
    "\061\074\066\057\074\ufefe\101\065\102\100\001\002\000" +
    "\026\007\067\012\u0151\017\075\023\063\032\077\061\074" +
    "\066\057\074\uff03\101\065\102\100\001\002\000\026\007" +
    "\067\012\u0151\017\075\023\063\032\077\061\074\066\057" +
    "\074\uff04\101\065\102\100\001\002\000\026\007\067\012" +
    "\u0151\017\075\023\063\032\077\061\074\066\057\074\uff00" +
    "\101\065\102\100\001\002\000\004\076\u0155\001\002\000" +
    "\026\007\067\012\u0151\017\075\023\063\032\077\061\074" +
    "\066\057\074\uff05\101\065\102\100\001\002\000\004\074" +
    "\ufef9\001\002\000\004\074\uff0f\001\002\000\026\007\067" +
    "\012\u0151\017\075\023\063\032\077\061\074\066\057\074" +
    "\uff06\101\065\102\100\001\002\000\004\074\uff07\001\002" +
    "\000\004\074\uff0b\001\002\000\004\074\uff0e\001\002\000" +
    "\004\074\uff0d\001\002\000\004\074\uff08\001\002\000\004" +
    "\074\uff0a\001\002\000\004\074\uff0c\001\002\000\004\074" +
    "\uff09\001\002\000\004\074\uff20\001\002\000\004\074\uff1d" +
    "\001\002\000\024\007\067\012\u0151\017\075\023\063\032" +
    "\077\061\074\066\057\101\065\102\100\001\002\000\004" +
    "\074\uff11\001\002\000\016\042\131\043\127\044\125\045" +
    "\123\046\124\047\130\001\002\000\024\042\131\043\127" +
    "\044\125\045\123\046\124\047\130\061\377\101\103\102" +
    "\100\001\002\000\040\007\uff3e\012\uff3e\017\uff3e\021\uff3e" +
    "\022\uff3e\023\uff3e\025\uff3e\031\uff3e\032\uff3e\061\uff3e\066" +
    "\uff3e\070\uff3e\074\uff3e\101\uff3e\102\uff3e\001\002\000\026" +
    "\007\067\012\073\017\075\023\063\032\077\061\074\066" +
    "\057\074\uff6e\101\065\102\100\001\002\000\004\074\uff6f" +
    "\001\002\000\004\074\uff71\001\002\000\004\074\uff75\001" +
    "\002\000\004\004\u016a\001\002\000\004\061\u016b\001\002" +
    "\000\004\100\u016c\001\002\000\004\062\u016d\001\002\000" +
    "\004\076\u016e\001\002\000\040\007\uff26\012\uff26\017\uff26" +
    "\021\uff26\022\uff26\023\uff26\025\uff26\031\uff26\032\uff26\061" +
    "\uff26\066\uff26\070\uff26\074\uff26\101\uff26\102\uff26\001\002" +
    "\000\004\074\uff74\001\002\000\004\101\u018e\001\002\000" +
    "\010\061\u0186\101\103\102\100\001\002\000\006\063\u0181" +
    "\076\u0180\001\002\000\020\007\u0176\033\102\034\106\061" +
    "\074\100\u0177\101\103\102\100\001\002\000\004\076\u017f" +
    "\001\002\000\020\042\131\043\127\044\125\045\123\046" +
    "\124\047\130\076\uff5f\001\002\000\004\065\u017a\001\002" +
    "\000\004\076\uff5e\001\002\000\040\007\uff56\012\uff56\017" +
    "\uff56\021\uff56\022\uff56\023\uff56\025\uff56\031\uff56\032\uff56" +
    "\061\uff56\066\uff56\070\uff56\074\uff56\101\uff56\102\uff56\001" +
    "\002\000\004\076\uff60\001\002\000\004\073\u017b\001\002" +
    "\000\004\061\u017c\001\002\000\004\062\u017d\001\002\000" +
    "\004\076\u017e\001\002\000\040\007\uff55\012\uff55\017\uff55" +
    "\021\uff55\022\uff55\023\uff55\025\uff55\031\uff55\032\uff55\061" +
    "\uff55\066\uff55\070\uff55\074\uff55\101\uff55\102\uff55\001\002" +
    "\000\040\007\uff57\012\uff57\017\uff57\021\uff57\022\uff57\023" +
    "\uff57\025\uff57\031\uff57\032\uff57\061\uff57\066\uff57\070\uff57" +
    "\074\uff57\101\uff57\102\uff57\001\002\000\042\007\uff29\012" +
    "\uff29\017\uff29\021\uff29\022\uff29\023\uff29\025\uff29\031\uff29" +
    "\032\uff29\061\uff29\066\uff29\070\uff29\074\uff29\076\uff29\101" +
    "\uff29\102\uff29\001\002\000\006\101\103\102\100\001\002" +
    "\000\004\076\u0183\001\002\000\042\007\uff2a\012\uff2a\017" +
    "\uff2a\021\uff2a\022\uff2a\023\uff2a\025\uff2a\031\uff2a\032\uff2a" +
    "\061\uff2a\066\uff2a\070\uff2a\074\uff2a\076\uff2a\101\uff2a\102" +
    "\uff2a\001\002\000\006\063\u0181\076\uff2c\001\002\000\004" +
    "\076\uff2d\001\002\000\006\101\103\102\100\001\002\000" +
    "\006\063\u0181\076\u0188\001\002\000\042\007\uff2b\012\uff2b" +
    "\017\uff2b\021\uff2b\022\uff2b\023\uff2b\025\uff2b\031\uff2b\032" +
    "\uff2b\061\uff2b\066\uff2b\070\uff2b\074\uff2b\076\uff2b\101\uff2b" +
    "\102\uff2b\001\002\000\004\076\u018a\001\002\000\042\007" +
    "\uff27\012\uff27\017\uff27\021\uff27\022\uff27\023\uff27\025\uff27" +
    "\031\uff27\032\uff27\061\uff27\066\uff27\070\uff27\074\uff27\076" +
    "\uff27\101\uff27\102\uff27\001\002\000\004\062\u018c\001\002" +
    "\000\004\076\u018d\001\002\000\042\007\uff28\012\uff28\017" +
    "\uff28\021\uff28\022\uff28\023\uff28\025\uff28\031\uff28\032\uff28" +
    "\061\uff28\066\uff28\070\uff28\074\uff28\076\uff28\101\uff28\102" +
    "\uff28\001\002\000\004\060\u018f\001\002\000\014\033\102" +
    "\034\106\100\u0177\101\103\102\100\001\002\000\004\076" +
    "\u0192\001\002\000\004\076\uff5f\001\002\000\040\007\uff58" +
    "\012\uff58\017\uff58\021\uff58\022\uff58\023\uff58\025\uff58\031" +
    "\uff58\032\uff58\061\uff58\066\uff58\070\uff58\074\uff58\101\uff58" +
    "\102\uff58\001\002\000\004\036\u0194\001\002\000\004\076" +
    "\u0195\001\002\000\006\012\014\040\013\001\002\000\004" +
    "\002\uffff\001\002\000\004\060\u0198\001\002\000\006\101" +
    "\103\102\100\001\002\000\004\024\u019a\001\002\000\010" +
    "\061\074\101\103\102\100\001\002\000\026\007\067\012" +
    "\u01a7\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u01ac" +
    "\101\065\102\100\001\002\000\020\027\u019d\042\131\043" +
    "\127\044\125\045\123\046\124\047\130\001\002\000\006" +
    "\043\335\102\334\001\002\000\004\076\u019f\001\002\000" +
    "\026\007\067\012\u01a7\017\u01a9\023\063\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\030\007" +
    "\067\012\u01a7\017\u01a9\023\063\031\ufedd\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\030\007" +
    "\067\012\u01a7\017\u01a9\023\063\031\ufed9\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\030\007" +
    "\067\012\u01a7\017\u01a9\023\063\031\ufed8\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\030\007" +
    "\067\012\u01a7\017\u01a9\023\063\031\ufeda\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\030\007" +
    "\067\012\u01a7\017\u01a9\023\063\031\ufedb\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\030\007" +
    "\067\012\u01a7\017\u01a9\023\063\031\ufed7\032\u01aa\061\074" +
    "\066\057\070\u01ac\101\065\102\100\001\002\000\004\031" +
    "\u0228\001\002\000\004\076\u0226\001\002\000\030\007\067" +
    "\012\u01a7\017\u01a9\023\063\031\ufed6\032\u01aa\061\074\066" +
    "\057\070\u01ac\101\065\102\100\001\002\000\012\033\102" +
    "\034\106\101\103\102\100\001\002\000\004\026\u01b0\001" +
    "\002\000\030\007\067\012\u01a7\017\u01a9\023\063\031\ufedc" +
    "\032\u01aa\061\074\066\057\070\u01ac\101\065\102\100\001" +
    "\002\000\004\023\u01ad\001\002\000\004\076\u01ae\001\002" +
    "\000\004\031\ufed5\001\002\000\004\031\ufee6\001\002\000" +
    "\012\033\102\034\106\101\103\102\100\001\002\000\004" +
    "\076\u01b2\001\002\000\026\007\067\012\u01b9\017\u01a9\023" +
    "\063\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025" +
    "\ufe8a\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025" +
    "\ufe87\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025" +
    "\ufe86\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025" +
    "\ufe88\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025" +
    "\ufe85\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025" +
    "\ufe89\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100" +
    "\001\002\000\004\076\u01c6\001\002\000\004\025\u01c4\001" +
    "\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025\ufe83" +
    "\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100\001" +
    "\002\000\030\007\067\012\u01b9\017\u01a9\023\063\025\ufe84" +
    "\032\u01aa\061\074\066\057\070\u01bd\101\065\102\100\001" +
    "\002\000\006\023\u01bf\032\u01be\001\002\000\004\076\u01c1" +
    "\001\002\000\004\076\u01c0\001\002\000\004\025\ufe81\001" +
    "\002\000\004\025\ufe82\001\002\000\004\025\ufe8d\001\002" +
    "\000\004\025\ufe8e\001\002\000\004\076\u01c5\001\002\000" +
    "\040\007\ufe95\012\ufe95\017\ufe95\021\ufe95\022\ufe95\023\ufe95" +
    "\025\ufe95\031\ufe95\032\ufe95\061\ufe95\066\ufe95\070\ufe95\074" +
    "\ufe95\101\ufe95\102\ufe95\001\002\000\030\007\067\012\u01b9" +
    "\017\u01a9\023\063\025\ufe8b\032\u01aa\061\074\066\057\070" +
    "\u01bd\101\065\102\100\001\002\000\004\025\ufe8c\001\002" +
    "\000\004\025\ufe93\001\002\000\004\025\ufe8f\001\002\000" +
    "\004\025\ufe92\001\002\000\004\025\ufe90\001\002\000\004" +
    "\025\ufe91\001\002\000\004\025\ufe94\001\002\000\004\020" +
    "\u01cf\001\002\000\004\076\u01d0\001\002\000\032\007\067" +
    "\012\u01da\017\u01a9\021\u01d4\022\u01d1\023\063\032\u01aa\061" +
    "\074\066\057\070\u01dd\101\065\102\100\001\002\000\004" +
    "\076\u0223\001\002\000\034\007\067\012\u01da\017\u01a9\021" +
    "\u01d4\022\u01d1\023\063\032\u01aa\061\074\066\057\070\u01dd" +
    "\074\ufec2\101\065\102\100\001\002\000\034\007\067\012" +
    "\u01da\017\u01a9\021\u01d4\022\u01d1\023\063\032\u01aa\061\074" +
    "\066\057\070\u01dd\074\ufec5\101\065\102\100\001\002\000" +
    "\012\033\102\034\106\101\103\102\100\001\002\000\034" +
    "\007\067\012\u01da\017\u01a9\021\u01d4\022\u01d1\023\063\032" +
    "\u01aa\061\074\066\057\070\u01dd\074\ufec4\101\065\102\100" +
    "\001\002\000\034\007\067\012\u01da\017\u01a9\021\u01d4\022" +
    "\u01d1\023\063\032\u01aa\061\074\066\057\070\u01dd\074\ufec6" +
    "\101\065\102\100\001\002\000\034\007\067\012\u01da\017" +
    "\u01a9\021\u01d4\022\u01d1\023\063\032\u01aa\061\074\066\057" +
    "\070\u01dd\074\ufec7\101\065\102\100\001\002\000\034\007" +
    "\067\012\u01da\017\u01a9\021\u01d4\022\u01d1\023\063\032\u01aa" +
    "\061\074\066\057\070\u01dd\074\ufec3\101\065\102\100\001" +
    "\002\000\004\074\u01e4\001\002\000\004\076\u01e2\001\002" +
    "\000\034\007\067\012\u01da\017\u01a9\021\u01d4\022\u01d1\023" +
    "\063\032\u01aa\061\074\066\057\070\u01dd\074\ufec1\101\065" +
    "\102\100\001\002\000\034\007\067\012\u01da\017\u01a9\021" +
    "\u01d4\022\u01d1\023\063\032\u01aa\061\074\066\057\070\u01dd" +
    "\074\ufec8\101\065\102\100\001\002\000\004\023\u01de\001" +
    "\002\000\004\076\u01df\001\002\000\004\074\ufec0\001\002" +
    "\000\004\074\ufed2\001\002\000\004\074\ufecb\001\002\000" +
    "\034\007\067\012\u01da\017\u01a9\021\u01d4\022\u01d1\023\063" +
    "\032\u01aa\061\074\066\057\070\u01dd\074\ufec9\101\065\102" +
    "\100\001\002\000\004\074\ufeca\001\002\000\004\017\u01e5" +
    "\001\002\000\004\076\u01e6\001\002\000\040\007\ufed4\012" +
    "\ufed4\017\ufed4\021\ufed4\022\ufed4\023\ufed4\025\ufed4\031\ufed4" +
    "\032\ufed4\061\ufed4\066\ufed4\070\ufed4\074\ufed4\101\ufed4\102" +
    "\ufed4\001\002\000\004\074\ufece\001\002\000\004\074\ufed1" +
    "\001\002\000\004\074\ufed0\001\002\000\004\074\ufecd\001" +
    "\002\000\004\020\u01ed\001\002\000\004\074\ufebe\001\002" +
    "\000\004\076\u01ee\001\002\000\032\007\067\012\u01f7\017" +
    "\u01a9\021\u01f1\022\u01ef\023\063\032\u01aa\061\074\066\057" +
    "\070\u01fb\101\065\102\100\001\002\000\004\076\u0209\001" +
    "\002\000\034\007\067\012\u01f7\017\u01a9\021\u01f1\022\u01ef" +
    "\023\063\032\u01aa\061\074\066\057\070\u01fb\074\ufeab\101" +
    "\065\102\100\001\002\000\012\033\102\034\106\101\103" +
    "\102\100\001\002\000\034\007\067\012\u01f7\017\u01a9\021" +
    "\u01f1\022\u01ef\023\063\032\u01aa\061\074\066\057\070\u01fb" +
    "\074\ufeae\101\065\102\100\001\002\000\034\007\067\012" +
    "\u01f7\017\u01a9\021\u01f1\022\u01ef\023\063\032\u01aa\061\074" +
    "\066\057\070\u01fb\074\ufead\101\065\102\100\001\002\000" +
    "\034\007\067\012\u01f7\017\u01a9\021\u01f1\022\u01ef\023\063" +
    "\032\u01aa\061\074\066\057\070\u01fb\074\ufeaf\101\065\102" +
    "\100\001\002\000\034\007\067\012\u01f7\017\u01a9\021\u01f1" +
    "\022\u01ef\023\063\032\u01aa\061\074\066\057\070\u01fb\074" +
    "\ufeb0\101\065\102\100\001\002\000\034\007\067\012\u01f7" +
    "\017\u01a9\021\u01f1\022\u01ef\023\063\032\u01aa\061\074\066" +
    "\057\070\u01fb\074\ufeac\101\065\102\100\001\002\000\004" +
    "\076\u0200\001\002\000\034\007\067\012\u01f7\017\u01a9\021" +
    "\u01f1\022\u01ef\023\063\032\u01aa\061\074\066\057\070\u01fb" +
    "\074\ufeaa\101\065\102\100\001\002\000\004\074\ufed3\001" +
    "\002\000\034\007\067\012\u01f7\017\u01a9\021\u01f1\022\u01ef" +
    "\023\063\032\u01aa\061\074\066\057\070\u01fb\074\ufeb1\101" +
    "\065\102\100\001\002\000\004\023\u01fc\001\002\000\004" +
    "\076\u01fd\001\002\000\004\074\ufea9\001\002\000\004\074" +
    "\ufebd\001\002\000\004\074\ufeb4\001\002\000\034\007\067" +
    "\012\u01f7\017\u01a9\021\u01f1\022\u01ef\023\063\032\u01aa\061" +
    "\074\066\057\070\u01fb\074\ufeb2\101\065\102\100\001\002" +
    "\000\004\074\ufeb3\001\002\000\004\074\ufeb7\001\002\000" +
    "\004\074\ufebc\001\002\000\004\074\ufebb\001\002\000\004" +
    "\074\ufeb6\001\002\000\004\074\ufeba\001\002\000\004\074" +
    "\ufeb8\001\002\000\004\074\ufeb5\001\002\000\026\007\067" +
    "\012\u0210\017\u01a9\023\063\032\u01aa\061\074\066\057\070" +
    "\u0214\101\065\102\100\001\002\000\030\007\067\012\u0210" +
    "\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074" +
    "\ufe98\101\065\102\100\001\002\000\030\007\067\012\u0210" +
    "\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074" +
    "\ufe9b\101\065\102\100\001\002\000\030\007\067\012\u0210" +
    "\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074" +
    "\ufe9a\101\065\102\100\001\002\000\030\007\067\012\u0210" +
    "\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074" +
    "\ufe9c\101\065\102\100\001\002\000\030\007\067\012\u0210" +
    "\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074" +
    "\ufe9d\101\065\102\100\001\002\000\030\007\067\012\u0210" +
    "\017\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074" +
    "\ufe99\101\065\102\100\001\002\000\004\076\u0219\001\002" +
    "\000\004\074\ufeb9\001\002\000\030\007\067\012\u0210\017" +
    "\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074\ufe97" +
    "\101\065\102\100\001\002\000\030\007\067\012\u0210\017" +
    "\u01a9\023\063\032\u01aa\061\074\066\057\070\u0214\074\ufe9e" +
    "\101\065\102\100\001\002\000\004\023\u0215\001\002\000" +
    "\004\076\u0216\001\002\000\004\074\ufe96\001\002\000\004" +
    "\074\ufea8\001\002\000\004\074\ufea1\001\002\000\030\007" +
    "\067\012\u0210\017\u01a9\023\063\032\u01aa\061\074\066\057" +
    "\070\u0214\074\ufe9f\101\065\102\100\001\002\000\004\074" +
    "\ufea0\001\002\000\004\074\ufea4\001\002\000\004\074\ufea7" +
    "\001\002\000\004\074\ufea6\001\002\000\004\074\ufea3\001" +
    "\002\000\004\074\ufea5\001\002\000\004\074\ufea2\001\002" +
    "\000\004\074\ufecf\001\002\000\004\074\ufecc\001\002\000" +
    "\026\007\067\012\u0210\017\u01a9\023\063\032\u01aa\061\074" +
    "\066\057\070\u0214\101\065\102\100\001\002\000\004\074" +
    "\ufebf\001\002\000\004\031\ufee0\001\002\000\030\007\067" +
    "\012\u01a7\017\u01a9\023\063\031\ufede\032\u01aa\061\074\066" +
    "\057\070\u01ac\101\065\102\100\001\002\000\004\031\ufedf" +
    "\001\002\000\004\101\u0229\001\002\000\004\076\u022a\001" +
    "\002\000\040\007\ufee9\012\ufee9\017\ufee9\021\ufee9\022\ufee9" +
    "\023\ufee9\025\ufee9\031\ufee9\032\ufee9\061\ufee9\066\ufee9\070" +
    "\ufee9\074\ufee9\101\ufee9\102\ufee9\001\002\000\004\031\ufee1" +
    "\001\002\000\004\031\ufee5\001\002\000\004\031\ufee4\001" +
    "\002\000\004\031\ufee2\001\002\000\004\031\ufee3\001\002" +
    "\000\004\031\ufee7\001\002\000\004\031\u0232\001\002\000" +
    "\004\101\u0233\001\002\000\004\076\u0234\001\002\000\040" +
    "\007\ufee8\012\ufee8\017\ufee8\021\ufee8\022\ufee8\023\ufee8\025" +
    "\ufee8\031\ufee8\032\ufee8\061\ufee8\066\ufee8\070\ufee8\074\ufee8" +
    "\101\ufee8\102\ufee8\001\002\000\004\074\uff70\001\002\000" +
    "\004\074\uff72\001\002\000\004\074\uff73\001\002\000\006" +
    "\060\u023a\067\u0239\001\002\000\010\013\036\014\041\015" +
    "\040\001\002\000\016\033\102\034\106\061\074\100\u0177" +
    "\101\103\102\100\001\002\000\004\076\u023d\001\002\000" +
    "\040\007\uff59\012\uff59\017\uff59\021\uff59\022\uff59\023\uff59" +
    "\025\uff59\031\uff59\032\uff59\061\uff59\066\uff59\070\uff59\074" +
    "\uff59\101\uff59\102\uff59\001\002\000\040\007\uff5a\012\uff5a" +
    "\017\uff5a\021\uff5a\022\uff5a\023\uff5a\025\uff5a\031\uff5a\032" +
    "\uff5a\061\uff5a\066\uff5a\070\uff5a\074\uff5a\101\uff5a\102\uff5a" +
    "\001\002\000\006\060\u0240\076\u023f\001\002\000\040\007" +
    "\uff5d\012\uff5d\017\uff5d\021\uff5d\022\uff5d\023\uff5d\025\uff5d" +
    "\031\uff5d\032\uff5d\061\uff5d\066\uff5d\070\uff5d\074\uff5d\101" +
    "\uff5d\102\uff5d\001\002\000\014\033\102\034\106\100\u0177" +
    "\101\u0242\102\100\001\002\000\004\076\u0245\001\002\000" +
    "\012\061\u0171\076\uff48\101\103\102\100\001\002\000\004" +
    "\076\u0244\001\002\000\040\007\uff5b\012\uff5b\017\uff5b\021" +
    "\uff5b\022\uff5b\023\uff5b\025\uff5b\031\uff5b\032\uff5b\061\uff5b" +
    "\066\uff5b\070\uff5b\074\uff5b\101\uff5b\102\uff5b\001\002\000" +
    "\040\007\uff5c\012\uff5c\017\uff5c\021\uff5c\022\uff5c\023\uff5c" +
    "\025\uff5c\031\uff5c\032\uff5c\061\uff5c\066\uff5c\070\uff5c\074" +
    "\uff5c\101\uff5c\102\uff5c\001\002\000\004\074\uff77\001\002" +
    "\000\004\067\u024d\001\002\000\004\101\u0249\001\002\000" +
    "\004\067\u024a\001\002\000\010\013\036\014\041\015\040" +
    "\001\002\000\012\016\052\062\051\063\053\101\050\001" +
    "\002\000\006\067\uff63\076\uff63\001\002\000\010\013\036" +
    "\014\041\015\040\001\002\000\012\016\052\062\051\063" +
    "\053\101\050\001\002\000\006\067\uff62\076\uff62\001\002" +
    "\000\004\067\u0251\001\002\000\010\013\036\014\041\015" +
    "\040\001\002\000\012\016\052\062\051\063\053\101\050" +
    "\001\002\000\006\067\uff65\076\uff65\001\002\000\010\013" +
    "\036\014\041\015\040\001\002\000\012\016\052\062\051" +
    "\063\053\101\050\001\002\000\006\067\uff64\076\uff64\001" +
    "\002\000\004\062\u0258\001\002\000\004\076\u0259\001\002" +
    "\000\024\007\067\012\073\017\075\023\063\032\077\061" +
    "\074\066\057\101\065\102\100\001\002\000\004\074\u025b" +
    "\001\002\000\004\036\u025c\001\002\000\004\076\u025d\001" +
    "\002\000\004\002\ufffd\001\002\000\004\061\u025f\001\002" +
    "\000\012\016\052\062\051\063\053\101\050\001\002\000" +
    "\004\067\u0261\001\002\000\010\013\036\014\041\015\040" +
    "\001\002\000\004\076\u0263\001\002\000\024\007\067\012" +
    "\u026d\017\u026e\023\u0267\032\u026f\061\074\066\057\101\065" +
    "\102\100\001\002\000\026\007\067\012\u026d\017\u026e\023" +
    "\u0267\032\u026f\061\074\066\057\074\uffe6\101\065\102\100" +
    "\001\002\000\026\007\067\012\u026d\017\u026e\023\u0267\032" +
    "\u026f\061\074\066\057\074\uffe9\101\065\102\100\001\002" +
    "\000\026\007\067\012\u026d\017\u026e\023\u0267\032\u026f\061" +
    "\074\066\057\074\uffe5\101\065\102\100\001\002\000\004" +
    "\101\u02f3\001\002\000\026\007\067\012\u026d\017\u026e\023" +
    "\u0267\032\u026f\061\074\066\057\074\uffea\101\065\102\100" +
    "\001\002\000\026\007\067\012\u026d\017\u026e\023\u0267\032" +
    "\u026f\061\074\066\057\074\uffe7\101\065\102\100\001\002" +
    "\000\026\007\067\012\u026d\017\u026e\023\u0267\032\u026f\061" +
    "\074\066\057\074\uffe8\101\065\102\100\001\002\000\026" +
    "\007\067\012\u026d\017\u026e\023\u0267\032\u026f\061\074\066" +
    "\057\074\uffe4\101\065\102\100\001\002\000\004\074\u02eb" +
    "\001\002\000\004\076\u02e9\001\002\000\012\033\102\034" +
    "\106\101\103\102\100\001\002\000\004\026\u0272\001\002" +
    "\000\026\007\067\012\u026d\017\u026e\023\u0267\032\u026f\061" +
    "\074\066\057\074\uffeb\101\065\102\100\001\002\000\004" +
    "\074\ufff5\001\002\000\012\033\102\034\106\101\103\102" +
    "\100\001\002\000\004\076\u0274\001\002\000\026\007\067" +
    "\012\u027c\017\u026e\023\u0267\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff95\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff98\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff94\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff92\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff96\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff97\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff93\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\004\076\u0289\001\002" +
    "\000\004\025\u0287\001\002\000\030\007\067\012\u027c\017" +
    "\u026e\023\u0267\025\uff99\032\u026f\061\074\066\057\070\u027f" +
    "\101\065\102\100\001\002\000\010\023\u0282\032\u0281\035" +
    "\u0280\001\002\000\004\076\u0285\001\002\000\004\076\u0284" +
    "\001\002\000\004\076\u0283\001\002\000\004\025\uff8f\001" +
    "\002\000\004\025\uff91\001\002\000\004\025\uff90\001\002" +
    "\000\004\025\uffa3\001\002\000\004\076\u0288\001\002\000" +
    "\040\007\uffa4\012\uffa4\017\uffa4\021\uffa4\022\uffa4\023\uffa4" +
    "\025\uffa4\031\uffa4\032\uffa4\061\uffa4\066\uffa4\070\uffa4\074" +
    "\uffa4\101\uffa4\102\uffa4\001\002\000\030\007\067\012\u027c" +
    "\017\u026e\023\u0267\025\uff9a\032\u026f\061\074\066\057\070" +
    "\u027f\101\065\102\100\001\002\000\004\025\uff9b\001\002" +
    "\000\004\025\uff9d\001\002\000\004\025\uffa1\001\002\000" +
    "\004\025\uffa0\001\002\000\004\025\uff9c\001\002\000\004" +
    "\025\uff9e\001\002\000\004\025\uffa2\001\002\000\004\025" +
    "\uff9f\001\002\000\004\020\u0293\001\002\000\004\076\u0294" +
    "\001\002\000\032\007\067\012\u029f\017\u026e\021\u0297\022" +
    "\u0295\023\u0267\032\u026f\061\074\066\057\070\u02a1\101\065" +
    "\102\100\001\002\000\004\076\u02e7\001\002\000\034\007" +
    "\067\012\u029f\017\u026e\021\u0297\022\u0295\023\u0267\032\u026f" +
    "\061\074\066\057\070\u02a1\074\uffd4\101\065\102\100\001" +
    "\002\000\012\033\102\034\106\101\103\102\100\001\002" +
    "\000\034\007\067\012\u029f\017\u026e\021\u0297\022\u0295\023" +
    "\u0267\032\u026f\061\074\066\057\070\u02a1\074\uffd7\101\065" +
    "\102\100\001\002\000\034\007\067\012\u029f\017\u026e\021" +
    "\u0297\022\u0295\023\u0267\032\u026f\061\074\066\057\070\u02a1" +
    "\074\uffd3\101\065\102\100\001\002\000\034\007\067\012" +
    "\u029f\017\u026e\021\u0297\022\u0295\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02a1\074\uffd0\101\065\102\100\001\002\000" +
    "\034\007\067\012\u029f\017\u026e\021\u0297\022\u0295\023\u0267" +
    "\032\u026f\061\074\066\057\070\u02a1\074\uffd5\101\065\102" +
    "\100\001\002\000\034\007\067\012\u029f\017\u026e\021\u0297" +
    "\022\u0295\023\u0267\032\u026f\061\074\066\057\070\u02a1\074" +
    "\uffd6\101\065\102\100\001\002\000\034\007\067\012\u029f" +
    "\017\u026e\021\u0297\022\u0295\023\u0267\032\u026f\061\074\066" +
    "\057\070\u02a1\074\uffd2\101\065\102\100\001\002\000\004" +
    "\074\u02a7\001\002\000\004\076\u02a5\001\002\000\034\007" +
    "\067\012\u029f\017\u026e\021\u0297\022\u0295\023\u0267\032\u026f" +
    "\061\074\066\057\070\u02a1\074\uffd1\101\065\102\100\001" +
    "\002\000\004\035\u02a2\001\002\000\004\076\u02a3\001\002" +
    "\000\004\074\uffcf\001\002\000\004\074\uffdb\001\002\000" +
    "\034\007\067\012\u029f\017\u026e\021\u0297\022\u0295\023\u0267" +
    "\032\u026f\061\074\066\057\070\u02a1\074\uffd8\101\065\102" +
    "\100\001\002\000\004\074\uffd9\001\002\000\004\017\u02a8" +
    "\001\002\000\004\076\u02a9\001\002\000\040\007\uffe3\012" +
    "\uffe3\017\uffe3\021\uffe3\022\uffe3\023\uffe3\025\uffe3\031\uffe3" +
    "\032\uffe3\061\uffe3\066\uffe3\070\uffe3\074\uffe3\101\uffe3\102" +
    "\uffe3\001\002\000\004\074\uffdd\001\002\000\004\074\uffe0" +
    "\001\002\000\004\074\uffdf\001\002\000\004\074\uffda\001" +
    "\002\000\004\074\uffdc\001\002\000\004\074\uffe1\001\002" +
    "\000\004\020\u02b2\001\002\000\004\074\uffcd\001\002\000" +
    "\004\076\u02b3\001\002\000\032\007\067\012\u02be\017\u026e" +
    "\021\u02b5\022\u02b4\023\u0267\032\u026f\061\074\066\057\070" +
    "\u02c0\101\065\102\100\001\002\000\004\076\u02ce\001\002" +
    "\000\012\033\102\034\106\101\103\102\100\001\002\000" +
    "\034\007\067\012\u02be\017\u026e\021\u02b5\022\u02b4\023\u0267" +
    "\032\u026f\061\074\066\057\070\u02c0\074\uffaa\101\065\102" +
    "\100\001\002\000\034\007\067\012\u02be\017\u026e\021\u02b5" +
    "\022\u02b4\023\u0267\032\u026f\061\074\066\057\070\u02c0\074" +
    "\uffad\101\065\102\100\001\002\000\034\007\067\012\u02be" +
    "\017\u026e\021\u02b5\022\u02b4\023\u0267\032\u026f\061\074\066" +
    "\057\070\u02c0\074\uffa9\101\065\102\100\001\002\000\034" +
    "\007\067\012\u02be\017\u026e\021\u02b5\022\u02b4\023\u0267\032" +
    "\u026f\061\074\066\057\070\u02c0\074\uffa6\101\065\102\100" +
    "\001\002\000\034\007\067\012\u02be\017\u026e\021\u02b5\022" +
    "\u02b4\023\u0267\032\u026f\061\074\066\057\070\u02c0\074\uffab" +
    "\101\065\102\100\001\002\000\034\007\067\012\u02be\017" +
    "\u026e\021\u02b5\022\u02b4\023\u0267\032\u026f\061\074\066\057" +
    "\070\u02c0\074\uffac\101\065\102\100\001\002\000\034\007" +
    "\067\012\u02be\017\u026e\021\u02b5\022\u02b4\023\u0267\032\u026f" +
    "\061\074\066\057\070\u02c0\074\uffa8\101\065\102\100\001" +
    "\002\000\004\074\uffe2\001\002\000\004\076\u02c4\001\002" +
    "\000\034\007\067\012\u02be\017\u026e\021\u02b5\022\u02b4\023" +
    "\u0267\032\u026f\061\074\066\057\070\u02c0\074\uffa7\101\065" +
    "\102\100\001\002\000\004\035\u02c1\001\002\000\004\076" +
    "\u02c2\001\002\000\004\074\uffa5\001\002\000\004\074\uffb1" +
    "\001\002\000\034\007\067\012\u02be\017\u026e\021\u02b5\022" +
    "\u02b4\023\u0267\032\u026f\061\074\066\057\070\u02c0\074\uffae" +
    "\101\065\102\100\001\002\000\004\074\uffaf\001\002\000" +
    "\004\074\uffb3\001\002\000\004\074\uffb8\001\002\000\004" +
    "\074\uffb7\001\002\000\004\074\uffb0\001\002\000\004\074" +
    "\uffb2\001\002\000\004\074\uffb9\001\002\000\004\074\uffb6" +
    "\001\002\000\004\074\uffb4\001\002\000\026\007\067\012" +
    "\u02d7\017\u026e\023\u0267\032\u026f\061\074\066\057\070\u02d9" +
    "\101\065\102\100\001\002\000\004\074\uffb5\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffbf\101\065\102\100\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffc2\101\065\102\100\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffbe\101\065\102\100\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffbb\101\065\102\100\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffc0\101\065\102\100\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffc1\101\065\102\100\001\002\000" +
    "\030\007\067\012\u02d7\017\u026e\023\u0267\032\u026f\061\074" +
    "\066\057\070\u02d9\074\uffbd\101\065\102\100\001\002\000" +
    "\004\076\u02dd\001\002\000\030\007\067\012\u02d7\017\u026e" +
    "\023\u0267\032\u026f\061\074\066\057\070\u02d9\074\uffbc\101" +
    "\065\102\100\001\002\000\004\035\u02da\001\002\000\004" +
    "\076\u02db\001\002\000\004\074\uffba\001\002\000\004\074" +
    "\uffc6\001\002\000\030\007\067\012\u02d7\017\u026e\023\u0267" +
    "\032\u026f\061\074\066\057\070\u02d9\074\uffc3\101\065\102" +
    "\100\001\002\000\004\074\uffc4\001\002\000\004\074\uffc8" +
    "\001\002\000\004\074\uffcb\001\002\000\004\074\uffca\001" +
    "\002\000\004\074\uffc5\001\002\000\004\074\uffc7\001\002" +
    "\000\004\074\uffcc\001\002\000\004\074\uffc9\001\002\000" +
    "\004\074\uffde\001\002\000\026\007\067\012\u02d7\017\u026e" +
    "\023\u0267\032\u026f\061\074\066\057\070\u02d9\101\065\102" +
    "\100\001\002\000\004\074\uffce\001\002\000\026\007\067" +
    "\012\u026d\017\u026e\023\u0267\032\u026f\061\074\066\057\074" +
    "\uffec\101\065\102\100\001\002\000\004\074\uffed\001\002" +
    "\000\004\035\u02ec\001\002\000\004\076\u02ed\001\002\000" +
    "\006\012\014\040\013\001\002\000\004\002\ufffe\001\002" +
    "\000\004\074\uffee\001\002\000\004\074\ufff2\001\002\000" +
    "\004\074\ufff1\001\002\000\004\074\ufff4\001\002\000\004" +
    "\060\u02f4\001\002\000\006\101\103\102\100\001\002\000" +
    "\004\024\u02f6\001\002\000\010\061\074\101\103\102\100" +
    "\001\002\000\026\007\067\012\u0303\017\u026e\023\u0267\032" +
    "\u026f\061\074\066\057\070\u0306\101\065\102\100\001\002" +
    "\000\020\027\u02f9\042\131\043\127\044\125\045\123\046" +
    "\124\047\130\001\002\000\006\043\335\102\334\001\002" +
    "\000\004\076\u02fb\001\002\000\026\007\067\012\u0303\017" +
    "\u026e\023\u0267\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff7d\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff80\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff7c\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff82\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff7e\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff7f\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\030\007\067\012\u0303\017\u026e\023" +
    "\u0267\031\uff7b\032\u026f\061\074\066\057\070\u0306\101\065" +
    "\102\100\001\002\000\004\076\u0311\001\002\000\004\031" +
    "\u030e\001\002\000\030\007\067\012\u0303\017\u026e\023\u0267" +
    "\031\uff81\032\u026f\061\074\066\057\070\u0306\101\065\102" +
    "\100\001\002\000\010\023\u0309\032\u0308\035\u0307\001\002" +
    "\000\004\076\u030c\001\002\000\004\076\u030b\001\002\000" +
    "\004\076\u030a\001\002\000\004\031\uff78\001\002\000\004" +
    "\031\uff7a\001\002\000\004\031\uff79\001\002\000\004\031" +
    "\uff8b\001\002\000\004\101\u030f\001\002\000\004\076\u0310" +
    "\001\002\000\040\007\uff8e\012\uff8e\017\uff8e\021\uff8e\022" +
    "\uff8e\023\uff8e\025\uff8e\031\uff8e\032\uff8e\061\uff8e\066\uff8e" +
    "\070\uff8e\074\uff8e\101\uff8e\102\uff8e\001\002\000\030\007" +
    "\067\012\u0303\017\u026e\023\u0267\031\uff83\032\u026f\061\074" +
    "\066\057\070\u0306\101\065\102\100\001\002\000\004\031" +
    "\uff84\001\002\000\004\031\uff85\001\002\000\004\031\uff89" +
    "\001\002\000\004\031\uff88\001\002\000\004\031\uff8c\001" +
    "\002\000\004\031\uff86\001\002\000\004\031\uff8a\001\002" +
    "\000\004\031\uff87\001\002\000\004\031\u031b\001\002\000" +
    "\004\101\u031c\001\002\000\004\076\u031d\001\002\000\040" +
    "\007\uff8d\012\uff8d\017\uff8d\021\uff8d\022\uff8d\023\uff8d\025" +
    "\uff8d\031\uff8d\032\uff8d\061\uff8d\066\uff8d\070\uff8d\074\uff8d" +
    "\101\uff8d\102\uff8d\001\002\000\004\074\uffef\001\002\000" +
    "\004\074\ufff3\001\002\000\004\074\ufff0\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u031e\000\004\002\004\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\011\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\015\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\024\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\027\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\033\001\001\000\002\001" +
    "\001\000\006\011\041\040\036\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\016\043\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\004\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\067\006" +
    "\057\010\060\014\063\020\075\026\055\031\061\033\071" +
    "\042\065\047\070\001\001\000\026\005\067\006\057\010" +
    "\060\014\u0245\020\075\026\055\031\061\033\071\042\065" +
    "\047\070\001\001\000\002\001\001\000\026\005\067\006" +
    "\057\010\060\014\u0236\020\075\026\055\031\061\033\071" +
    "\042\065\047\070\001\001\000\026\005\067\006\057\010" +
    "\060\014\u0235\020\075\026\055\031\061\033\071\042\065" +
    "\047\070\001\001\000\026\005\067\006\057\010\060\014" +
    "\u0234\020\075\026\055\031\061\033\071\042\065\047\070" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\u0171\001\001\000\026\005\067\006\057\010\060\014\u016e" +
    "\020\075\026\055\031\061\033\071\042\065\047\070\001" +
    "\001\000\002\001\001\000\026\005\067\006\057\010\060" +
    "\014\u0167\020\075\026\055\031\061\033\071\042\065\047" +
    "\070\001\001\000\026\005\067\006\057\010\060\014\u0166" +
    "\020\075\026\055\031\061\033\071\042\065\047\070\001" +
    "\001\000\004\050\330\001\001\000\002\001\001\000\004" +
    "\033\u0161\001\001\000\010\012\104\025\u0113\033\106\001" +
    "\001\000\026\005\067\006\057\010\060\014\u0112\020\075" +
    "\026\055\031\061\033\071\042\065\047\070\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\012\104\025\103" +
    "\033\106\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\027\107\001\001\000\006\012\116\033\120\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\121\001\001\000\002\001\001\000\004" +
    "\050\125\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\033\131\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\033\135\043\134\001\001\000\002" +
    "\001\001\000\004\044\137\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\033\135\043\141\001\001\000\002" +
    "\001\001\000\026\005\150\006\143\010\144\031\145\033" +
    "\071\042\147\047\151\056\156\062\154\070\152\001\001" +
    "\000\026\005\150\006\143\010\144\031\145\033\071\042" +
    "\147\047\151\056\u0111\062\154\070\152\001\001\000\026" +
    "\005\150\006\143\010\144\031\145\033\071\042\147\047" +
    "\151\056\u0110\062\154\070\152\001\001\000\026\005\150" +
    "\006\143\010\144\031\145\033\071\042\147\047\151\056" +
    "\u010f\062\154\070\152\001\001\000\002\001\001\000\026" +
    "\005\150\006\143\010\144\031\145\033\071\042\147\047" +
    "\151\056\321\062\154\070\152\001\001\000\026\005\150" +
    "\006\143\010\144\031\145\033\071\042\147\047\151\056" +
    "\320\062\154\070\152\001\001\000\026\005\150\006\143" +
    "\010\144\031\145\033\071\042\147\047\151\056\317\062" +
    "\154\070\152\001\001\000\026\005\150\006\143\010\144" +
    "\031\145\033\071\042\147\047\151\056\316\062\154\070" +
    "\152\001\001\000\002\001\001\000\026\005\150\006\143" +
    "\010\144\031\145\033\071\042\147\047\151\056\313\062" +
    "\154\070\152\001\001\000\010\012\104\025\164\033\106" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\175\006" +
    "\171\010\172\031\173\033\071\042\174\047\176\062\202" +
    "\063\201\070\177\001\001\000\002\001\001\000\012\012" +
    "\104\025\224\033\106\066\223\001\001\000\026\005\175" +
    "\006\171\010\172\031\173\033\071\042\174\047\176\062" +
    "\202\063\222\070\177\001\001\000\026\005\175\006\171" +
    "\010\172\031\173\033\071\042\174\047\176\062\202\063" +
    "\221\070\177\001\001\000\026\005\175\006\171\010\172" +
    "\031\173\033\071\042\174\047\176\062\202\063\220\070" +
    "\177\001\001\000\026\005\175\006\171\010\172\031\173" +
    "\033\071\042\174\047\176\062\202\063\217\070\177\001" +
    "\001\000\026\005\175\006\171\010\172\031\173\033\071" +
    "\042\174\047\176\062\202\063\216\070\177\001\001\000" +
    "\026\005\175\006\171\010\172\031\173\033\071\042\174" +
    "\047\176\062\202\063\215\070\177\001\001\000\026\005" +
    "\175\006\171\010\172\031\173\033\071\042\174\047\176" +
    "\062\202\063\214\070\177\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\175\006\171\010\172\031\173" +
    "\033\071\042\174\047\176\062\202\063\206\070\177\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\175\006\171\010\172\031\173" +
    "\033\071\042\174\047\176\062\202\063\213\070\177\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\236\006\231\010" +
    "\232\031\233\033\071\042\235\047\237\062\242\065\234" +
    "\070\240\001\001\000\002\001\001\000\012\012\104\025" +
    "\224\033\106\066\260\001\001\000\026\005\236\006\231" +
    "\010\232\031\233\033\071\042\235\047\237\062\242\065" +
    "\257\070\240\001\001\000\026\005\236\006\231\010\232" +
    "\031\233\033\071\042\235\047\237\062\242\065\256\070" +
    "\240\001\001\000\026\005\236\006\231\010\232\031\233" +
    "\033\071\042\235\047\237\062\242\065\255\070\240\001" +
    "\001\000\002\001\001\000\026\005\236\006\231\010\232" +
    "\031\233\033\071\042\235\047\237\062\242\065\254\070" +
    "\240\001\001\000\026\005\236\006\231\010\232\031\233" +
    "\033\071\042\235\047\237\062\242\065\253\070\240\001" +
    "\001\000\026\005\236\006\231\010\232\031\233\033\071" +
    "\042\235\047\237\062\242\065\252\070\240\001\001\000" +
    "\026\005\236\006\231\010\232\031\233\033\071\042\235" +
    "\047\237\062\242\065\251\070\240\001\001\000\002\001" +
    "\001\000\026\005\236\006\231\010\232\031\233\033\071" +
    "\042\235\047\237\062\242\065\246\070\240\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\236\006\231\010\232\031\233\033" +
    "\071\042\235\047\237\062\242\065\250\070\240\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\266\006\262\010\263\031\264\033\071\042\265\047\267" +
    "\062\272\064\274\070\270\001\001\000\026\005\266\006" +
    "\262\010\263\031\264\033\071\042\265\047\267\062\272" +
    "\064\310\070\270\001\001\000\026\005\266\006\262\010" +
    "\263\031\264\033\071\042\265\047\267\062\272\064\307" +
    "\070\270\001\001\000\026\005\266\006\262\010\263\031" +
    "\264\033\071\042\265\047\267\062\272\064\306\070\270" +
    "\001\001\000\026\005\266\006\262\010\263\031\264\033" +
    "\071\042\265\047\267\062\272\064\305\070\270\001\001" +
    "\000\026\005\266\006\262\010\263\031\264\033\071\042" +
    "\265\047\267\062\272\064\304\070\270\001\001\000\026" +
    "\005\266\006\262\010\263\031\264\033\071\042\265\047" +
    "\267\062\272\064\303\070\270\001\001\000\026\005\266" +
    "\006\262\010\263\031\264\033\071\042\265\047\267\062" +
    "\272\064\302\070\270\001\001\000\002\001\001\000\026" +
    "\005\266\006\262\010\263\031\264\033\071\042\265\047" +
    "\267\062\272\064\277\070\270\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\266\006\262\010\263\031\264" +
    "\033\071\042\265\047\267\062\272\064\301\070\270\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\266\006\262" +
    "\010\263\031\264\033\071\042\265\047\267\062\272\064" +
    "\312\070\270\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\150\006\143\010\144\031\145\033\071\042" +
    "\147\047\151\056\315\062\154\070\152\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\324" +
    "\001\001\000\002\001\001\000\006\033\327\047\326\001" +
    "\001\000\026\005\344\006\337\010\340\031\341\033\071" +
    "\042\342\047\345\062\350\067\u010b\070\346\001\001\000" +
    "\004\050\330\001\001\000\010\033\373\050\375\057\374" +
    "\001\001\000\004\030\332\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\344\006\337\010\340\031\341\033\071\042\342\047" +
    "\345\062\350\067\343\070\346\001\001\000\026\005\344" +
    "\006\337\010\340\031\341\033\071\042\342\047\345\062" +
    "\350\067\372\070\346\001\001\000\026\005\344\006\337" +
    "\010\340\031\341\033\071\042\342\047\345\062\350\067" +
    "\371\070\346\001\001\000\026\005\344\006\337\010\340" +
    "\031\341\033\071\042\342\047\345\062\350\067\370\070" +
    "\346\001\001\000\026\005\344\006\337\010\340\031\341" +
    "\033\071\042\342\047\345\062\350\067\367\070\346\001" +
    "\001\000\002\001\001\000\026\005\344\006\337\010\340" +
    "\031\341\033\071\042\342\047\345\062\350\067\363\070" +
    "\346\001\001\000\026\005\344\006\337\010\340\031\341" +
    "\033\071\042\342\047\345\062\350\067\362\070\346\001" +
    "\001\000\026\005\344\006\337\010\340\031\341\033\071" +
    "\042\342\047\345\062\350\067\361\070\346\001\001\000" +
    "\002\001\001\000\026\005\344\006\337\010\340\031\341" +
    "\033\071\042\342\047\345\062\350\067\356\070\346\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\344\006\337\010\340\031\341\033\071\042\342" +
    "\047\345\062\350\067\360\070\346\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\050\u0106\001\001\000\002\001\001\000" +
    "\004\033\u0102\001\001\000\004\033\377\001\001\000\004" +
    "\050\u0100\001\001\000\010\033\373\050\375\057\u0101\001" +
    "\001\000\002\001\001\000\010\033\373\050\375\057\u0103" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\033" +
    "\373\050\375\057\u0109\001\001\000\010\033\373\050\375" +
    "\057\u0108\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u011d\006" +
    "\u0118\010\u011a\020\u0121\021\u011f\026\u0117\031\u011b\033\071" +
    "\042\u011c\047\u011e\001\001\000\002\001\001\000\026\005" +
    "\u011d\006\u0118\010\u011a\020\u0121\021\u015e\026\u0117\031\u011b" +
    "\033\071\042\u011c\047\u011e\001\001\000\026\005\u011d\006" +
    "\u0118\010\u011a\020\u0121\021\u015d\026\u0117\031\u011b\033\071" +
    "\042\u011c\047\u011e\001\001\000\012\012\104\024\u012e\025" +
    "\u012d\033\106\001\001\000\026\005\u011d\006\u0118\010\u011a" +
    "\020\u0121\021\u012c\026\u0117\031\u011b\033\071\042\u011c\047" +
    "\u011e\001\001\000\026\005\u011d\006\u0118\010\u011a\020\u0121" +
    "\021\u012b\026\u0117\031\u011b\033\071\042\u011c\047\u011e\001" +
    "\001\000\026\005\u011d\006\u0118\010\u011a\020\u0121\021\u012a" +
    "\026\u0117\031\u011b\033\071\042\u011c\047\u011e\001\001\000" +
    "\026\005\u011d\006\u0118\010\u011a\020\u0121\021\u0129\026\u0117" +
    "\031\u011b\033\071\042\u011c\047\u011e\001\001\000\026\005" +
    "\u011d\006\u0118\010\u011a\020\u0121\021\u0128\026\u0117\031\u011b" +
    "\033\071\042\u011c\047\u011e\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u011d\006\u0118\010\u011a\020\u0121" +
    "\021\u0122\026\u0117\031\u011b\033\071\042\u011c\047\u011e\001" +
    "\001\000\002\001\001\000\026\005\u011d\006\u0118\010\u011a" +
    "\020\u0121\021\u0124\026\u0117\031\u011b\033\071\042\u011c\047" +
    "\u011e\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u0138\006\u0134\010\u0135\020\u013c\023\u013a\026\u0132" +
    "\031\u0136\033\071\042\u0137\047\u0139\001\001\000\002\001" +
    "\001\000\026\005\u0138\006\u0134\010\u0135\020\u013c\023\u0147" +
    "\026\u0132\031\u0136\033\071\042\u0137\047\u0139\001\001\000" +
    "\012\012\104\024\u0146\025\u012d\033\106\001\001\000\026" +
    "\005\u0138\006\u0134\010\u0135\020\u013c\023\u0145\026\u0132\031" +
    "\u0136\033\071\042\u0137\047\u0139\001\001\000\026\005\u0138" +
    "\006\u0134\010\u0135\020\u013c\023\u0144\026\u0132\031\u0136\033" +
    "\071\042\u0137\047\u0139\001\001\000\026\005\u0138\006\u0134" +
    "\010\u0135\020\u013c\023\u0143\026\u0132\031\u0136\033\071\042" +
    "\u0137\047\u0139\001\001\000\026\005\u0138\006\u0134\010\u0135" +
    "\020\u013c\023\u0142\026\u0132\031\u0136\033\071\042\u0137\047" +
    "\u0139\001\001\000\026\005\u0138\006\u0134\010\u0135\020\u013c" +
    "\023\u0141\026\u0132\031\u0136\033\071\042\u0137\047\u0139\001" +
    "\001\000\026\005\u0138\006\u0134\010\u0135\020\u013c\023\u0140" +
    "\026\u0132\031\u0136\033\071\042\u0137\047\u0139\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u0138\006\u0134" +
    "\010\u0135\020\u013c\023\u013d\026\u0132\031\u0136\033\071\042" +
    "\u0137\047\u0139\001\001\000\002\001\001\000\026\005\u0138" +
    "\006\u0134\010\u0135\020\u013c\023\u013f\026\u0132\031\u0136\033" +
    "\071\042\u0137\047\u0139\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u014e\006\u014a\010\u014b\020" +
    "\u0151\022\u0152\026\u0149\031\u014c\033\071\042\u014d\047\u014f" +
    "\001\001\000\026\005\u014e\006\u014a\010\u014b\020\u0151\022" +
    "\u015c\026\u0149\031\u014c\033\071\042\u014d\047\u014f\001\001" +
    "\000\026\005\u014e\006\u014a\010\u014b\020\u0151\022\u015b\026" +
    "\u0149\031\u014c\033\071\042\u014d\047\u014f\001\001\000\026" +
    "\005\u014e\006\u014a\010\u014b\020\u0151\022\u015a\026\u0149\031" +
    "\u014c\033\071\042\u014d\047\u014f\001\001\000\026\005\u014e" +
    "\006\u014a\010\u014b\020\u0151\022\u0159\026\u0149\031\u014c\033" +
    "\071\042\u014d\047\u014f\001\001\000\026\005\u014e\006\u014a" +
    "\010\u014b\020\u0151\022\u0158\026\u0149\031\u014c\033\071\042" +
    "\u014d\047\u014f\001\001\000\026\005\u014e\006\u014a\010\u014b" +
    "\020\u0151\022\u0157\026\u0149\031\u014c\033\071\042\u014d\047" +
    "\u014f\001\001\000\026\005\u014e\006\u014a\010\u014b\020\u0151" +
    "\022\u0156\026\u0149\031\u014c\033\071\042\u014d\047\u014f\001" +
    "\001\000\002\001\001\000\026\005\u014e\006\u014a\010\u014b" +
    "\020\u0151\022\u0153\026\u0149\031\u014c\033\071\042\u014d\047" +
    "\u014f\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u014e\006\u014a\010\u014b\020\u0151\022\u0155\026\u0149\031" +
    "\u014c\033\071\042\u014d\047\u014f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u014e\006\u014a\010\u014b\020\u0151\022\u0160\026\u0149\031\u014c" +
    "\033\071\042\u014d\047\u014f\001\001\000\002\001\001\000" +
    "\004\050\u0162\001\001\000\010\033\373\050\375\057\u0163" +
    "\001\001\000\002\001\001\000\026\005\067\006\057\010" +
    "\060\014\u0165\020\075\026\055\031\061\033\071\042\065" +
    "\047\070\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\033\135" +
    "\043\u0186\001\001\000\004\051\u0181\001\001\000\012\012" +
    "\u0178\033\u0174\034\u0173\047\u0177\001\001\000\002\001\001" +
    "\000\004\050\330\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\033\u0183\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\051\u0184\001\001\000\002\001\001\000\006\033\135" +
    "\043\u018a\001\001\000\004\051\u0188\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\012\u0178\033\u0190\034\u018f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\003\u0195\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\033\u0198\001\001\000\002\001" +
    "\001\000\006\033\u019b\047\u019a\001\001\000\026\005\u01a3" +
    "\006\u01a0\010\u01a1\026\u019f\033\071\042\u01a2\047\u01a4\055" +
    "\u0230\071\u01a7\073\u01aa\001\001\000\004\050\330\001\001" +
    "\000\004\030\u019d\001\001\000\002\001\001\000\026\005" +
    "\u01a3\006\u01a0\010\u01a1\026\u019f\033\071\042\u01a2\047\u01a4" +
    "\055\u01a5\071\u01a7\073\u01aa\001\001\000\026\005\u01a3\006" +
    "\u01a0\010\u01a1\026\u019f\033\071\042\u01a2\047\u01a4\055\u022f" +
    "\071\u01a7\073\u01aa\001\001\000\026\005\u01a3\006\u01a0\010" +
    "\u01a1\026\u019f\033\071\042\u01a2\047\u01a4\055\u022e\071\u01a7" +
    "\073\u01aa\001\001\000\026\005\u01a3\006\u01a0\010\u01a1\026" +
    "\u019f\033\071\042\u01a2\047\u01a4\055\u022d\071\u01a7\073\u01aa" +
    "\001\001\000\026\005\u01a3\006\u01a0\010\u01a1\026\u019f\033" +
    "\071\042\u01a2\047\u01a4\055\u022c\071\u01a7\073\u01aa\001\001" +
    "\000\026\005\u01a3\006\u01a0\010\u01a1\026\u019f\033\071\042" +
    "\u01a2\047\u01a4\055\u022b\071\u01a7\073\u01aa\001\001\000\026" +
    "\005\u01a3\006\u01a0\010\u01a1\026\u019f\033\071\042\u01a2\047" +
    "\u01a4\055\u022a\071\u01a7\073\u01aa\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u01a3\006\u01a0\010\u01a1\026" +
    "\u019f\033\071\042\u01a2\047\u01a4\055\u0224\071\u01a7\073\u01aa" +
    "\001\001\000\010\012\104\025\u01cd\033\106\001\001\000" +
    "\002\001\001\000\026\005\u01a3\006\u01a0\010\u01a1\026\u019f" +
    "\033\071\042\u01a2\047\u01a4\055\u01ae\071\u01a7\073\u01aa\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\012\104\025\u01b0\033\106\001" +
    "\001\000\002\001\001\000\026\005\u01b7\006\u01b3\010\u01b4" +
    "\026\u01b2\033\071\042\u01b5\047\u01b6\071\u01ba\072\u01b9\073" +
    "\u01bb\001\001\000\026\005\u01b7\006\u01b3\010\u01b4\026\u01b2" +
    "\033\071\042\u01b5\047\u01b6\071\u01ba\072\u01cc\073\u01bb\001" +
    "\001\000\026\005\u01b7\006\u01b3\010\u01b4\026\u01b2\033\071" +
    "\042\u01b5\047\u01b6\071\u01ba\072\u01cb\073\u01bb\001\001\000" +
    "\026\005\u01b7\006\u01b3\010\u01b4\026\u01b2\033\071\042\u01b5" +
    "\047\u01b6\071\u01ba\072\u01ca\073\u01bb\001\001\000\026\005" +
    "\u01b7\006\u01b3\010\u01b4\026\u01b2\033\071\042\u01b5\047\u01b6" +
    "\071\u01ba\072\u01c9\073\u01bb\001\001\000\026\005\u01b7\006" +
    "\u01b3\010\u01b4\026\u01b2\033\071\042\u01b5\047\u01b6\071\u01ba" +
    "\072\u01c8\073\u01bb\001\001\000\026\005\u01b7\006\u01b3\010" +
    "\u01b4\026\u01b2\033\071\042\u01b5\047\u01b6\071\u01ba\072\u01c7" +
    "\073\u01bb\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u01b7\006\u01b3\010\u01b4\026\u01b2\033\071\042\u01b5" +
    "\047\u01b6\071\u01ba\072\u01c2\073\u01bb\001\001\000\026\005" +
    "\u01b7\006\u01b3\010\u01b4\026\u01b2\033\071\042\u01b5\047\u01b6" +
    "\071\u01ba\072\u01c1\073\u01bb\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\u01b7\006\u01b3\010\u01b4" +
    "\026\u01b2\033\071\042\u01b5\047\u01b6\071\u01ba\072\u01c6\073" +
    "\u01bb\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u01d6\006\u01d2\010\u01d4\026\u01d1\033\071\042" +
    "\u01d5\047\u01d7\071\u01da\073\u01db\075\u01d8\001\001\000\002" +
    "\001\001\000\026\005\u01d6\006\u01d2\010\u01d4\026\u01d1\033" +
    "\071\042\u01d5\047\u01d7\071\u01da\073\u01db\075\u0221\001\001" +
    "\000\026\005\u01d6\006\u01d2\010\u01d4\026\u01d1\033\071\042" +
    "\u01d5\047\u01d7\071\u01da\073\u01db\075\u0220\001\001\000\012" +
    "\012\104\025\u01ea\033\106\074\u01eb\001\001\000\026\005" +
    "\u01d6\006\u01d2\010\u01d4\026\u01d1\033\071\042\u01d5\047\u01d7" +
    "\071\u01da\073\u01db\075\u01e9\001\001\000\026\005\u01d6\006" +
    "\u01d2\010\u01d4\026\u01d1\033\071\042\u01d5\047\u01d7\071\u01da" +
    "\073\u01db\075\u01e8\001\001\000\026\005\u01d6\006\u01d2\010" +
    "\u01d4\026\u01d1\033\071\042\u01d5\047\u01d7\071\u01da\073\u01db" +
    "\075\u01e7\001\001\000\026\005\u01d6\006\u01d2\010\u01d4\026" +
    "\u01d1\033\071\042\u01d5\047\u01d7\071\u01da\073\u01db\075\u01e6" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u01d6\006\u01d2\010\u01d4\026\u01d1\033\071\042\u01d5\047\u01d7" +
    "\071\u01da\073\u01db\075\u01e0\001\001\000\026\005\u01d6\006" +
    "\u01d2\010\u01d4\026\u01d1\033\071\042\u01d5\047\u01d7\071\u01da" +
    "\073\u01db\075\u01df\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u01d6\006\u01d2\010\u01d4\026\u01d1\033\071\042" +
    "\u01d5\047\u01d7\071\u01da\073\u01db\075\u01e2\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u01f4\006\u01f1\010\u01f2\026\u01ef" +
    "\033\071\042\u01f3\047\u01f5\071\u01f7\073\u01f9\076\u01f8\001" +
    "\001\000\002\001\001\000\026\005\u01f4\006\u01f1\010\u01f2" +
    "\026\u01ef\033\071\042\u01f3\047\u01f5\071\u01f7\073\u01f9\076" +
    "\u0207\001\001\000\012\012\104\025\u01ea\033\106\074\u0206" +
    "\001\001\000\026\005\u01f4\006\u01f1\010\u01f2\026\u01ef\033" +
    "\071\042\u01f3\047\u01f5\071\u01f7\073\u01f9\076\u0205\001\001" +
    "\000\026\005\u01f4\006\u01f1\010\u01f2\026\u01ef\033\071\042" +
    "\u01f3\047\u01f5\071\u01f7\073\u01f9\076\u0204\001\001\000\026" +
    "\005\u01f4\006\u01f1\010\u01f2\026\u01ef\033\071\042\u01f3\047" +
    "\u01f5\071\u01f7\073\u01f9\076\u0203\001\001\000\026\005\u01f4" +
    "\006\u01f1\010\u01f2\026\u01ef\033\071\042\u01f3\047\u01f5\071" +
    "\u01f7\073\u01f9\076\u0202\001\001\000\026\005\u01f4\006\u01f1" +
    "\010\u01f2\026\u01ef\033\071\042\u01f3\047\u01f5\071\u01f7\073" +
    "\u01f9\076\u0201\001\001\000\002\001\001\000\026\005\u01f4" +
    "\006\u01f1\010\u01f2\026\u01ef\033\071\042\u01f3\047\u01f5\071" +
    "\u01f7\073\u01f9\076\u01fe\001\001\000\002\001\001\000\026" +
    "\005\u01f4\006\u01f1\010\u01f2\026\u01ef\033\071\042\u01f3\047" +
    "\u01f5\071\u01f7\073\u01f9\076\u01fd\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u01f4\006\u01f1\010\u01f2\026\u01ef" +
    "\033\071\042\u01f3\047\u01f5\071\u01f7\073\u01f9\076\u0200\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u020d\006\u020a" +
    "\010\u020b\026\u0209\033\071\042\u020c\047\u020e\071\u0211\073" +
    "\u0212\077\u0210\001\001\000\026\005\u020d\006\u020a\010\u020b" +
    "\026\u0209\033\071\042\u020c\047\u020e\071\u0211\073\u0212\077" +
    "\u021f\001\001\000\026\005\u020d\006\u020a\010\u020b\026\u0209" +
    "\033\071\042\u020c\047\u020e\071\u0211\073\u0212\077\u021e\001" +
    "\001\000\026\005\u020d\006\u020a\010\u020b\026\u0209\033\071" +
    "\042\u020c\047\u020e\071\u0211\073\u0212\077\u021d\001\001\000" +
    "\026\005\u020d\006\u020a\010\u020b\026\u0209\033\071\042\u020c" +
    "\047\u020e\071\u0211\073\u0212\077\u021c\001\001\000\026\005" +
    "\u020d\006\u020a\010\u020b\026\u0209\033\071\042\u020c\047\u020e" +
    "\071\u0211\073\u0212\077\u021b\001\001\000\026\005\u020d\006" +
    "\u020a\010\u020b\026\u0209\033\071\042\u020c\047\u020e\071\u0211" +
    "\073\u0212\077\u021a\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u020d\006\u020a\010\u020b\026\u0209\033\071" +
    "\042\u020c\047\u020e\071\u0211\073\u0212\077\u0217\001\001\000" +
    "\026\005\u020d\006\u020a\010\u020b\026\u0209\033\071\042\u020c" +
    "\047\u020e\071\u0211\073\u0212\077\u0216\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u020d\006\u020a\010\u020b\026" +
    "\u0209\033\071\042\u020c\047\u020e\071\u0211\073\u0212\077\u0219" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u020d\006\u020a\010\u020b\026\u0209\033\071\042\u020c" +
    "\047\u020e\071\u0211\073\u0212\077\u0223\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\u01a3\006\u01a0\010\u01a1" +
    "\026\u019f\033\071\042\u01a2\047\u01a4\055\u0226\071\u01a7\073" +
    "\u01aa\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\u023d\001\001\000\012\012\u0178\033\u0174\034\u023a\047\u023b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\012\u0178" +
    "\033\u0190\034\u0240\042\u0242\001\001\000\002\001\001\000" +
    "\004\033\u0171\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\u024a\001\001" +
    "\000\004\004\u024b\001\001\000\002\001\001\000\004\011" +
    "\u024d\001\001\000\004\004\u024e\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u0251\001\001\000\004\004" +
    "\u0252\001\001\000\002\001\001\000\004\011\u0254\001\001" +
    "\000\004\004\u0255\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\067\006\057\010\060" +
    "\014\u0259\020\075\026\055\031\061\033\071\042\065\047" +
    "\070\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\004" +
    "\u025f\001\001\000\002\001\001\000\004\011\u0261\001\001" +
    "\000\002\001\001\000\026\005\u0269\006\u0263\010\u0265\013" +
    "\u026b\033\071\042\u0268\047\u026a\100\u0267\102\u0264\110\u026f" +
    "\001\001\000\026\005\u0269\006\u0263\010\u0265\013\u031f\033" +
    "\071\042\u0268\047\u026a\100\u0267\102\u0264\110\u026f\001\001" +
    "\000\026\005\u0269\006\u0263\010\u0265\013\u031e\033\071\042" +
    "\u0268\047\u026a\100\u0267\102\u0264\110\u026f\001\001\000\026" +
    "\005\u0269\006\u0263\010\u0265\013\u031d\033\071\042\u0268\047" +
    "\u026a\100\u0267\102\u0264\110\u026f\001\001\000\002\001\001" +
    "\000\026\005\u0269\006\u0263\010\u0265\013\u02f1\033\071\042" +
    "\u0268\047\u026a\100\u0267\102\u0264\110\u026f\001\001\000\026" +
    "\005\u0269\006\u0263\010\u0265\013\u02f0\033\071\042\u0268\047" +
    "\u026a\100\u0267\102\u0264\110\u026f\001\001\000\026\005\u0269" +
    "\006\u0263\010\u0265\013\u02ef\033\071\042\u0268\047\u026a\100" +
    "\u0267\102\u0264\110\u026f\001\001\000\026\005\u0269\006\u0263" +
    "\010\u0265\013\u02ee\033\071\042\u0268\047\u026a\100\u0267\102" +
    "\u0264\110\u026f\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\012\104\025\u0291\033\106\001\001\000\002\001" +
    "\001\000\026\005\u0269\006\u0263\010\u0265\013\u0270\033\071" +
    "\042\u0268\047\u026a\100\u0267\102\u0264\110\u026f\001\001\000" +
    "\002\001\001\000\010\012\104\025\u0272\033\106\001\001" +
    "\000\002\001\001\000\026\005\u0279\006\u0274\010\u0276\033" +
    "\071\042\u0278\047\u027a\100\u0277\101\u027c\102\u0275\110\u027d" +
    "\001\001\000\026\005\u0279\006\u0274\010\u0276\033\071\042" +
    "\u0278\047\u027a\100\u0277\101\u0290\102\u0275\110\u027d\001\001" +
    "\000\026\005\u0279\006\u0274\010\u0276\033\071\042\u0278\047" +
    "\u027a\100\u0277\101\u028f\102\u0275\110\u027d\001\001\000\026" +
    "\005\u0279\006\u0274\010\u0276\033\071\042\u0278\047\u027a\100" +
    "\u0277\101\u028e\102\u0275\110\u027d\001\001\000\026\005\u0279" +
    "\006\u0274\010\u0276\033\071\042\u0278\047\u027a\100\u0277\101" +
    "\u028d\102\u0275\110\u027d\001\001\000\026\005\u0279\006\u0274" +
    "\010\u0276\033\071\042\u0278\047\u027a\100\u0277\101\u028c\102" +
    "\u0275\110\u027d\001\001\000\026\005\u0279\006\u0274\010\u0276" +
    "\033\071\042\u0278\047\u027a\100\u0277\101\u028b\102\u0275\110" +
    "\u027d\001\001\000\026\005\u0279\006\u0274\010\u0276\033\071" +
    "\042\u0278\047\u027a\100\u0277\101\u028a\102\u0275\110\u027d\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u0279" +
    "\006\u0274\010\u0276\033\071\042\u0278\047\u027a\100\u0277\101" +
    "\u0285\102\u0275\110\u027d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\u0279\006" +
    "\u0274\010\u0276\033\071\042\u0278\047\u027a\100\u0277\101\u0289" +
    "\102\u0275\110\u027d\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u029b\006\u0295" +
    "\010\u0298\033\071\042\u029a\047\u029c\100\u0299\102\u0297\104" +
    "\u029d\110\u029f\001\001\000\002\001\001\000\026\005\u029b" +
    "\006\u0295\010\u0298\033\071\042\u029a\047\u029c\100\u0299\102" +
    "\u0297\104\u02e5\110\u029f\001\001\000\012\012\104\025\u02af" +
    "\033\106\103\u02b0\001\001\000\026\005\u029b\006\u0295\010" +
    "\u0298\033\071\042\u029a\047\u029c\100\u0299\102\u0297\104\u02ae" +
    "\110\u029f\001\001\000\026\005\u029b\006\u0295\010\u0298\033" +
    "\071\042\u029a\047\u029c\100\u0299\102\u0297\104\u02ad\110\u029f" +
    "\001\001\000\026\005\u029b\006\u0295\010\u0298\033\071\042" +
    "\u029a\047\u029c\100\u0299\102\u0297\104\u02ac\110\u029f\001\001" +
    "\000\026\005\u029b\006\u0295\010\u0298\033\071\042\u029a\047" +
    "\u029c\100\u0299\102\u0297\104\u02ab\110\u029f\001\001\000\026" +
    "\005\u029b\006\u0295\010\u0298\033\071\042\u029a\047\u029c\100" +
    "\u0299\102\u0297\104\u02aa\110\u029f\001\001\000\026\005\u029b" +
    "\006\u0295\010\u0298\033\071\042\u029a\047\u029c\100\u0299\102" +
    "\u0297\104\u02a9\110\u029f\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u029b\006\u0295\010\u0298\033\071\042" +
    "\u029a\047\u029c\100\u0299\102\u0297\104\u02a3\110\u029f\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u029b\006\u0295\010\u0298\033\071" +
    "\042\u029a\047\u029c\100\u0299\102\u0297\104\u02a5\110\u029f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u02ba\006\u02b5\010\u02b7\033\071\042\u02b9" +
    "\047\u02bb\100\u02b8\102\u02b6\105\u02bc\110\u02be\001\001\000" +
    "\002\001\001\000\012\012\104\025\u02af\033\106\103\u02cc" +
    "\001\001\000\026\005\u02ba\006\u02b5\010\u02b7\033\071\042" +
    "\u02b9\047\u02bb\100\u02b8\102\u02b6\105\u02cb\110\u02be\001\001" +
    "\000\026\005\u02ba\006\u02b5\010\u02b7\033\071\042\u02b9\047" +
    "\u02bb\100\u02b8\102\u02b6\105\u02ca\110\u02be\001\001\000\026" +
    "\005\u02ba\006\u02b5\010\u02b7\033\071\042\u02b9\047\u02bb\100" +
    "\u02b8\102\u02b6\105\u02c9\110\u02be\001\001\000\026\005\u02ba" +
    "\006\u02b5\010\u02b7\033\071\042\u02b9\047\u02bb\100\u02b8\102" +
    "\u02b6\105\u02c8\110\u02be\001\001\000\026\005\u02ba\006\u02b5" +
    "\010\u02b7\033\071\042\u02b9\047\u02bb\100\u02b8\102\u02b6\105" +
    "\u02c7\110\u02be\001\001\000\026\005\u02ba\006\u02b5\010\u02b7" +
    "\033\071\042\u02b9\047\u02bb\100\u02b8\102\u02b6\105\u02c6\110" +
    "\u02be\001\001\000\026\005\u02ba\006\u02b5\010\u02b7\033\071" +
    "\042\u02b9\047\u02bb\100\u02b8\102\u02b6\105\u02c5\110\u02be\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\005\u02ba" +
    "\006\u02b5\010\u02b7\033\071\042\u02b9\047\u02bb\100\u02b8\102" +
    "\u02b6\105\u02c2\110\u02be\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u02ba\006\u02b5\010\u02b7\033\071\042\u02b9\047\u02bb\100\u02b8" +
    "\102\u02b6\105\u02c4\110\u02be\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\u02d4\006\u02cf\010\u02d1" +
    "\033\071\042\u02d3\047\u02d5\100\u02d2\102\u02d0\106\u02ce\110" +
    "\u02d7\001\001\000\002\001\001\000\026\005\u02d4\006\u02cf" +
    "\010\u02d1\033\071\042\u02d3\047\u02d5\100\u02d2\102\u02d0\106" +
    "\u02e4\110\u02d7\001\001\000\026\005\u02d4\006\u02cf\010\u02d1" +
    "\033\071\042\u02d3\047\u02d5\100\u02d2\102\u02d0\106\u02e3\110" +
    "\u02d7\001\001\000\026\005\u02d4\006\u02cf\010\u02d1\033\071" +
    "\042\u02d3\047\u02d5\100\u02d2\102\u02d0\106\u02e2\110\u02d7\001" +
    "\001\000\026\005\u02d4\006\u02cf\010\u02d1\033\071\042\u02d3" +
    "\047\u02d5\100\u02d2\102\u02d0\106\u02e1\110\u02d7\001\001\000" +
    "\026\005\u02d4\006\u02cf\010\u02d1\033\071\042\u02d3\047\u02d5" +
    "\100\u02d2\102\u02d0\106\u02e0\110\u02d7\001\001\000\026\005" +
    "\u02d4\006\u02cf\010\u02d1\033\071\042\u02d3\047\u02d5\100\u02d2" +
    "\102\u02d0\106\u02df\110\u02d7\001\001\000\026\005\u02d4\006" +
    "\u02cf\010\u02d1\033\071\042\u02d3\047\u02d5\100\u02d2\102\u02d0" +
    "\106\u02de\110\u02d7\001\001\000\002\001\001\000\026\005" +
    "\u02d4\006\u02cf\010\u02d1\033\071\042\u02d3\047\u02d5\100\u02d2" +
    "\102\u02d0\106\u02db\110\u02d7\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\005\u02d4\006\u02cf\010\u02d1\033\071\042\u02d3\047\u02d5\100" +
    "\u02d2\102\u02d0\106\u02dd\110\u02d7\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\u02d4\006\u02cf\010" +
    "\u02d1\033\071\042\u02d3\047\u02d5\100\u02d2\102\u02d0\106\u02e7" +
    "\110\u02d7\001\001\000\002\001\001\000\026\005\u0269\006" +
    "\u0263\010\u0265\013\u02e9\033\071\042\u0268\047\u026a\100\u0267" +
    "\102\u0264\110\u026f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\003\u02ed\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\u02f4" +
    "\001\001\000\002\001\001\000\006\033\u02f7\047\u02f6\001" +
    "\001\000\026\005\u0300\006\u02fb\010\u02fd\033\071\042\u02ff" +
    "\047\u0301\100\u02fe\102\u02fc\107\u0319\110\u0304\001\001\000" +
    "\004\050\330\001\001\000\004\030\u02f9\001\001\000\002" +
    "\001\001\000\026\005\u0300\006\u02fb\010\u02fd\033\071\042" +
    "\u02ff\047\u0301\100\u02fe\102\u02fc\107\u0303\110\u0304\001\001" +
    "\000\026\005\u0300\006\u02fb\010\u02fd\033\071\042\u02ff\047" +
    "\u0301\100\u02fe\102\u02fc\107\u0318\110\u0304\001\001\000\026" +
    "\005\u0300\006\u02fb\010\u02fd\033\071\042\u02ff\047\u0301\100" +
    "\u02fe\102\u02fc\107\u0317\110\u0304\001\001\000\026\005\u0300" +
    "\006\u02fb\010\u02fd\033\071\042\u02ff\047\u0301\100\u02fe\102" +
    "\u02fc\107\u0316\110\u0304\001\001\000\026\005\u0300\006\u02fb" +
    "\010\u02fd\033\071\042\u02ff\047\u0301\100\u02fe\102\u02fc\107" +
    "\u0315\110\u0304\001\001\000\026\005\u0300\006\u02fb\010\u02fd" +
    "\033\071\042\u02ff\047\u0301\100\u02fe\102\u02fc\107\u0314\110" +
    "\u0304\001\001\000\026\005\u0300\006\u02fb\010\u02fd\033\071" +
    "\042\u02ff\047\u0301\100\u02fe\102\u02fc\107\u0313\110\u0304\001" +
    "\001\000\026\005\u0300\006\u02fb\010\u02fd\033\071\042\u02ff" +
    "\047\u0301\100\u02fe\102\u02fc\107\u0312\110\u0304\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u0300\006\u02fb" +
    "\010\u02fd\033\071\042\u02ff\047\u0301\100\u02fe\102\u02fc\107" +
    "\u030c\110\u0304\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u0300\006\u02fb\010\u02fd\033\071\042\u02ff\047\u0301\100\u02fe" +
    "\102\u02fc\107\u0311\110\u0304\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    
    public void syntax_error(Symbol sym){
        this.sym = sym;
    }

    public Symbol getS(){
        return this.sym;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= tk_public tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // OPCPROCESO ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO tk_end tk_sub tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-10)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // OPCPROCESO ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC tk_end tk_function tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OPCPROCESO ::= tk_public tk_sub tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO tk_end tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // OPCPROCESO ::= tk_public tk_structure tk_Identificador tk_Linea CUERPOSTRUC tk_end tk_structure tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // OPCPROCESO ::= tk_comentario tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // CUERPOSTRUC ::= tk_Identificador tk_as VARIABLESTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CUERPOSTRUC ::= tk_comentario tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CUERPOSTRUC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // VARIABLESTRUC ::= TIPOD tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // VARIABLESTRUC ::= TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CUERPOFUNC ::= SINTAXFOR_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CUERPOFUNC ::= SINTAXWHILE_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CUERPOFUNC ::= SINTAXIF_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CUERPOFUNC ::= VARIABLE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CUERPOFUNC ::= LLAMADAFUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CUERPOFUNC ::= ASIGNACIONVAL CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CUERPOFUNC ::= CONSOLEWRITE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CUERPOFUNC ::= OPERACIONES CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CUERPOFUNC ::= tk_comentario tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CUERPOFUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CUERPOFUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CUERPOFUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CUERPOFUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CUERPOFUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CUERPOFUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CUERPOFUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CUERPOFUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CUERPOFUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // SINTAXIF_FUNC ::= tk_if CONDICION tk_then tk_Linea INIF_FUNC tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // SINTAXELSEIF_FUNC ::= CONDICION tk_then tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // INIF_FUNC ::= SINTAXIF_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // INIF_FUNC ::= VARIABLE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // INIF_FUNC ::= LLAMADAFUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // INIF_FUNC ::= ASIGNACIONVAL INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // INIF_FUNC ::= OPERACIONES INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // INIF_FUNC ::= CONSOLEWRITE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // INIF_FUNC ::= SINTAXFOR_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // INIF_FUNC ::= SINTAXWHILE_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // INIF_FUNC ::= tk_comentario tk_Linea INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // INIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // INIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // INIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // INIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // INIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // INIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INELSE_FUNC ::= SINTAXIF_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INELSE_FUNC ::= VARIABLE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INELSE_FUNC ::= LLAMADAFUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INELSE_FUNC ::= ASIGNACIONVAL INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // INELSE_FUNC ::= OPERACIONES INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // INELSE_FUNC ::= CONSOLEWRITE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // INELSE_FUNC ::= SINTAXFOR_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // INELSE_FUNC ::= SINTAXWHILE_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // INELSE_FUNC ::= tk_comentario tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // INELSE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // INELSE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // INELSE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // INELSE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // INELSE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // INELSE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // INELSE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // INELSE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // INELSE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // INELSE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",68, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // INELSEIF_FUNC ::= SINTAXIF_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INELSEIF_FUNC ::= VARIABLE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // INELSEIF_FUNC ::= LLAMADAFUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // INELSEIF_FUNC ::= ASIGNACIONVAL INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // INELSEIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // INELSEIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // INELSEIF_FUNC ::= OPERACIONES INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // INELSEIF_FUNC ::= CONSOLEWRITE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // INELSEIF_FUNC ::= SINTAXFOR_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // INELSEIF_FUNC ::= tk_comentario tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // INELSEIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // INELSEIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // INELSEIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // INELSEIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // INELSEIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // INELSEIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // INELSEIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // INELSEIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // INELSEIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // SINTAXWHILE_FUNC ::= tk_do tk_while CONDICION tk_Linea INWHILE_FUNC tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // INWHILE_FUNC ::= SINTAXFOR_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // INWHILE_FUNC ::= SINTAXIF_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // INWHILE_FUNC ::= VARIABLE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // INWHILE_FUNC ::= LLAMADAFUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // INWHILE_FUNC ::= ASIGNACIONVAL INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // INWHILE_FUNC ::= CONSOLEWRITE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // INWHILE_FUNC ::= OPERACIONES INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // INWHILE_FUNC ::= SINTAXWHILE_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // INWHILE_FUNC ::= tk_comentario tk_Linea INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // INWHILE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // INWHILE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // INWHILE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // INWHILE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // INWHILE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // INWHILE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // INWHILE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // INWHILE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // INWHILE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // INWHILE_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // INWHILE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // INWHILE_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",70, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",70, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // INFOR_FUNC ::= SINTAXWHILE_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // INFOR_FUNC ::= SINTAXFOR_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // INFOR_FUNC ::= SINTAXIF_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // INFOR_FUNC ::= VARIABLE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // INFOR_FUNC ::= LLAMADAFUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // INFOR_FUNC ::= ASIGNACIONVAL INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // INFOR_FUNC ::= CONSOLEWRITE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // INFOR_FUNC ::= OPERACIONES INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // INFOR_FUNC ::= tk_comentario tk_Linea INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // INFOR_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // INFOR_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // INFOR_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // INFOR_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // INFOR_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // INFOR_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // INFOR_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // INFOR_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // INFOR_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // INFOR_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // INFOR_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // INFOR_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",69, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // CUERPOPRO ::= SINTAXFOR CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // CUERPOPRO ::= SINTAXIF CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // CUERPOPRO ::= VARIABLE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // CUERPOPRO ::= LLAMADAFUNC CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // CUERPOPRO ::= ASIGNACIONVAL CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // CUERPOPRO ::= CONSOLEWRITE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // CUERPOPRO ::= OPERACIONES CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // CUERPOPRO ::= SINTAXWHILE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // CUERPOPRO ::= tk_comentario tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // CUERPOPRO ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // CUERPOPRO ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // CUERPOPRO ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // CUERPOPRO ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // CUERPOPRO ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // CUERPOPRO ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // CUERPOPRO ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // CUERPOPRO ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // CUERPOPRO ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // PARAMETROS ::= tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // PARAMETROS ::= tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // PARAMETROS ::= tk_Coma tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // PARAMETROS ::= tk_Coma tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // PARAMETROS ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // VALOR ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // VARIABLE ::= tk_dim tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // VARIABLE ::= tk_dim tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // VARIABLE ::= tk_Identificador tk_punto tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // ASIGNACIONVAL ::= tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // ASIGNACIONVAL ::= tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // ASIGNACIONVAL ::= tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // TIPOD ::= tk_String 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // CICLOS ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // CICLOS ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // CONDICION ::= iDNUM OPCRELACIONALES tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // CONDICION ::= iDNUM OPCRELACIONALES tk_ParentesisA iDNUM OPEARITMETICA iDNUM tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // OPERACIONES ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // OPERACIONES ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // OPERACIONAUX ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // OPERACIONAUX ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // OPERACIONAUX ::= OPEARITMETICA iDNUM OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // OPERACIONAUX ::= iDNUM tk_ParentesisC OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // OPERACIONAUX ::= OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // OPERACIONAUX ::= iDNUM tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // OPERACIONAUX ::= iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // OPEARITMETICA ::= tk_Signomod 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // OPEARITMETICA ::= tk_Potencia 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // IDENTIFICADORES ::= iDNUM IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // IDENTIFICADORESPRIMA ::= tk_Coma IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // IDENTIFICADORESPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // IDENTIFICADORESUB ::= tk_Coma iDNUM IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // IDENTIFICADORESUB ::= tk_Coma iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // LLAMADAFUNC ::= tk_Identificador iDNUM IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // LLAMADAFUNC ::= tk_Identificador iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_valorString tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // SINTAXIF ::= tk_if CONDICION tk_then tk_Linea INIF tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // SINTAXELSEIF ::= CONDICION tk_then tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // INIF ::= SINTAXIF INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // INIF ::= VARIABLE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // INIF ::= LLAMADAFUNC INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // INIF ::= ASIGNACIONVAL INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // INIF ::= OPERACIONES INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // INIF ::= CONSOLEWRITE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // INIF ::= SINTAXFOR INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // INIF ::= SINTAXWHILE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // INIF ::= tk_comentario tk_Linea INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // INIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // INIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // INIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // INIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // INIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // INIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // INIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // INIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // INIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // INIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // INIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // INELSE ::= SINTAXIF INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // INELSE ::= VARIABLE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // INELSE ::= LLAMADAFUNC INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // INELSE ::= ASIGNACIONVAL INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // INELSE ::= OPERACIONES INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // INELSE ::= CONSOLEWRITE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // INELSE ::= SINTAXFOR INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // INELSE ::= SINTAXWHILE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // INELSE ::= tk_comentario tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // INELSE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // INELSE ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // INELSE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // INELSE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // INELSE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // INELSE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // INELSE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // INELSE ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // INELSE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // INELSEIF ::= SINTAXIF INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // INELSEIF ::= VARIABLE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // INELSEIF ::= LLAMADAFUNC INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // INELSEIF ::= ASIGNACIONVAL INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // INELSEIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // INELSEIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // INELSEIF ::= OPERACIONES INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // INELSEIF ::= CONSOLEWRITE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // INELSEIF ::= SINTAXFOR INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // INELSEIF ::= SINTAXWHILE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // INELSEIF ::= tk_comentario tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // INELSEIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // INELSEIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // INELSEIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // INELSEIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // INELSEIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // INELSEIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // INELSEIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // INELSEIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // INELSEIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // INFOR ::= SINTAXFOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // INFOR ::= SINTAXIF_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // INFOR ::= VARIABLE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // INFOR ::= LLAMADAFUNC INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // INFOR ::= ASIGNACIONVAL INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // INFOR ::= CONSOLEWRITE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // INFOR ::= OPERACIONES INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // INFOR ::= SINTAXWHILE_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // INFOR ::= tk_comentario tk_Linea INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // INFOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // INFOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // INFOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // INFOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // INFOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // INFOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // INFOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // INFOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // INFOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000001(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // INFOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // SINTAXIF_FOR ::= tk_if CONDICION tk_then tk_Linea INIF_FOR tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // SINTAXELSEIF_FOR ::= CONDICION tk_then tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INIF_FOR ::= SINTAXIF_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INIF_FOR ::= VARIABLE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // INIF_FOR ::= LLAMADAFUNC INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // INIF_FOR ::= ASIGNACIONVAL INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // INIF_FOR ::= OPERACIONES INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // INIF_FOR ::= CONSOLEWRITE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // INIF_FOR ::= SINTAXFOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // INIF_FOR ::= SINTAXWHILE_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // INIF_FOR ::= tk_comentario tk_Linea INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // INIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // INIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // INIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // INIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // INIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // INIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // INELSEIF_FOR ::= SINTAXIF_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // INELSEIF_FOR ::= VARIABLE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // INELSEIF_FOR ::= LLAMADAFUNC INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // INELSEIF_FOR ::= ASIGNACIONVAL INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // INELSEIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // INELSEIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // INELSEIF_FOR ::= OPERACIONES INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // INELSEIF_FOR ::= CONSOLEWRITE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // INELSEIF_FOR ::= SINTAXFOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // INELSEIF_FOR ::= SINTAXWHILE_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // INELSEIF_FOR ::= tk_comentario tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // INELSEIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // INELSEIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // INELSEIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // INELSEIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // INELSEIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // INELSEIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // INELSEIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // INELSEIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // INELSEIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // INELSEIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // INELSE_FOR ::= SINTAXIF_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // INELSE_FOR ::= VARIABLE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // INELSE_FOR ::= LLAMADAFUNC INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // INELSE_FOR ::= ASIGNACIONVAL INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // INELSE_FOR ::= OPERACIONES INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // INELSE_FOR ::= CONSOLEWRITE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // INELSE_FOR ::= SINTAXFOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // INELSE_FOR ::= SINTAXWHILE_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // INELSE_FOR ::= tk_comentario tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // INELSE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // INELSE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // INELSE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // INELSE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // INELSE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // INELSE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // INELSE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // INELSE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // INELSE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // INELSE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // SINTAXWHILE_FOR ::= tk_do tk_while CONDICION tk_Linea INWHILE_FOR tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FOR",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // INWHILE_FOR ::= SINTAXFOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // INWHILE_FOR ::= VARIABLE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // INWHILE_FOR ::= LLAMADAFUNC INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // INWHILE_FOR ::= ASIGNACIONVAL INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // INWHILE_FOR ::= CONSOLEWRITE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // INWHILE_FOR ::= OPERACIONES INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // INWHILE_FOR ::= SINTAXWHILE_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // INWHILE_FOR ::= SINTAXIF_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // INWHILE_FOR ::= tk_comentario tk_Linea INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // INWHILE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // INWHILE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // INWHILE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // INWHILE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // INWHILE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // INWHILE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // INWHILE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // INWHILE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // INWHILE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // INWHILE_FOR ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // INWHILE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // SINTAXIF_WHILE ::= tk_if CONDICION tk_then tk_Linea INIF_WHILE tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // SINTAXELSEIF_WHILE ::= CONDICION tk_then tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_WHILE",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // INIF_WHILE ::= SINTAXIF_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // INIF_WHILE ::= VARIABLE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // INIF_WHILE ::= LLAMADAFUNC INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // INIF_WHILE ::= ASIGNACIONVAL INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // INIF_WHILE ::= OPERACIONES INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // INIF_WHILE ::= CONSOLEWRITE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // INIF_WHILE ::= SINTAXFOR_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // INIF_WHILE ::= SINTAXWHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // INIF_WHILE ::= tk_comentario tk_Linea INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // INIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // INIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // INIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // INIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // INIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // INIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // INIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // INIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // INIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // INIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // INIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // INIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // INELSEIF_WHILE ::= SINTAXWHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // INELSEIF_WHILE ::= SINTAXIF_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // INELSEIF_WHILE ::= VARIABLE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // INELSEIF_WHILE ::= LLAMADAFUNC INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // INELSEIF_WHILE ::= ASIGNACIONVAL INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // INELSEIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // INELSEIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // INELSEIF_WHILE ::= OPERACIONES INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // INELSEIF_WHILE ::= CONSOLEWRITE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // INELSEIF_WHILE ::= SINTAXFOR_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // INELSEIF_WHILE ::= tk_comentario tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // INELSEIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // INELSEIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // INELSEIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // INELSEIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // INELSEIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INELSEIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INELSEIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INELSEIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INELSEIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INELSEIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INELSE_WHILE ::= SINTAXWHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INELSE_WHILE ::= SINTAXIF_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INELSE_WHILE ::= VARIABLE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INELSE_WHILE ::= LLAMADAFUNC INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INELSE_WHILE ::= ASIGNACIONVAL INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INELSE_WHILE ::= OPERACIONES INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INELSE_WHILE ::= CONSOLEWRITE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INELSE_WHILE ::= SINTAXFOR_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // INELSE_WHILE ::= tk_comentario tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // INELSE_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // INELSE_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // INELSE_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // INELSE_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // INELSE_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // INELSE_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // INELSE_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // INELSE_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // INELSE_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // INELSE_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // INFOR_WHILE ::= SINTAXWHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // INFOR_WHILE ::= SINTAXFOR_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // INFOR_WHILE ::= SINTAXIF_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // INFOR_WHILE ::= VARIABLE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // INFOR_WHILE ::= LLAMADAFUNC INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // INFOR_WHILE ::= ASIGNACIONVAL INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // INFOR_WHILE ::= CONSOLEWRITE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // INFOR_WHILE ::= OPERACIONES INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // INFOR_WHILE ::= tk_comentario tk_Linea INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // INFOR_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // INFOR_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // INFOR_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // INFOR_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // INFOR_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // INFOR_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // INFOR_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // INFOR_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // INFOR_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // INFOR_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // INFOR_WHILE ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_Linea INWHILE tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // INWHILE ::= SINTAXWHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // INWHILE ::= SINTAXFOR_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // INWHILE ::= SINTAXIF_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // INWHILE ::= VARIABLE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // INWHILE ::= LLAMADAFUNC INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // INWHILE ::= ASIGNACIONVAL INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // INWHILE ::= CONSOLEWRITE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // INWHILE ::= OPERACIONES INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // INWHILE ::= tk_comentario tk_Linea INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // INWHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // INWHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // INWHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // INWHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // INWHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // INWHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // INWHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // INWHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // INWHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // INWHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Gramatica$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Gramatica$do_action_part00000001(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
