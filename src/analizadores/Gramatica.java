
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java.util.ArrayList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u020e\000\002\002\004\000\002\050\007\000\002\050" +
    "\007\000\002\050\007\000\002\050\007\000\002\050\004" +
    "\000\002\050\005\000\002\060\003\000\002\070\013\000" +
    "\002\070\013\000\002\070\013\000\002\070\013\000\002" +
    "\070\013\000\002\070\013\000\002\071\007\000\002\071" +
    "\007\000\002\071\007\000\002\071\007\000\002\072\011" +
    "\000\002\072\011\000\002\072\011\000\002\072\011\000" +
    "\002\072\011\000\002\042\010\000\002\042\010\000\002" +
    "\042\010\000\002\042\010\000\002\042\010\000\002\043" +
    "\005\000\002\043\005\000\002\043\005\000\002\046\005" +
    "\000\002\046\005\000\002\046\005\000\002\045\005\000" +
    "\002\045\005\000\002\045\005\000\002\044\005\000\002" +
    "\044\005\000\002\044\005\000\002\002\004\000\002\002" +
    "\004\000\002\002\004\000\002\002\003\000\002\002\005" +
    "\000\002\047\004\000\002\047\004\000\002\047\004\000" +
    "\002\047\003\000\002\047\005\000\002\013\004\000\002" +
    "\013\004\000\002\013\004\000\002\013\003\000\002\013" +
    "\005\000\002\030\006\000\002\030\010\000\002\030\010" +
    "\000\002\030\010\000\002\011\004\000\002\011\004\000" +
    "\002\011\004\000\002\011\004\000\002\011\004\000\002" +
    "\011\004\000\002\011\004\000\002\011\004\000\002\011" +
    "\004\000\002\011\003\000\002\011\005\000\002\075\012" +
    "\000\002\076\006\000\002\077\004\000\002\077\004\000" +
    "\002\077\004\000\002\077\004\000\002\077\004\000\002" +
    "\077\004\000\002\077\004\000\002\077\004\000\002\077" +
    "\005\000\002\077\004\000\002\077\003\000\002\077\003" +
    "\000\002\077\003\000\002\077\003\000\002\077\003\000" +
    "\002\077\003\000\002\077\003\000\002\077\003\000\002" +
    "\077\005\000\002\077\005\000\002\077\004\000\002\101" +
    "\004\000\002\101\004\000\002\101\004\000\002\101\004" +
    "\000\002\101\004\000\002\101\004\000\002\101\004\000" +
    "\002\101\004\000\002\101\005\000\002\101\004\000\002" +
    "\101\003\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\101\003" +
    "\000\002\101\003\000\002\101\005\000\002\100\004\000" +
    "\002\100\004\000\002\100\004\000\002\100\004\000\002" +
    "\100\005\000\002\100\004\000\002\100\004\000\002\100" +
    "\004\000\002\100\004\000\002\100\004\000\002\100\005" +
    "\000\002\100\004\000\002\100\003\000\002\100\003\000" +
    "\002\100\003\000\002\100\003\000\002\100\003\000\002" +
    "\100\003\000\002\100\003\000\002\100\003\000\002\100" +
    "\005\000\002\073\011\000\002\074\004\000\002\074\004" +
    "\000\002\074\004\000\002\074\004\000\002\074\004\000" +
    "\002\074\004\000\002\074\004\000\002\074\004\000\002" +
    "\074\005\000\002\074\004\000\002\074\003\000\002\074" +
    "\003\000\002\074\003\000\002\074\003\000\002\074\003" +
    "\000\002\074\003\000\002\074\003\000\002\074\003\000" +
    "\002\074\005\000\002\074\005\000\002\074\005\000\002" +
    "\103\017\000\002\103\014\000\002\102\004\000\002\102" +
    "\004\000\002\102\004\000\002\102\004\000\002\102\004" +
    "\000\002\102\004\000\002\102\004\000\002\102\004\000" +
    "\002\102\005\000\002\102\004\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\003\000\002\102\003" +
    "\000\002\102\005\000\002\102\005\000\002\102\005\000" +
    "\002\012\004\000\002\012\004\000\002\012\004\000\002" +
    "\012\004\000\002\012\004\000\002\012\004\000\002\012" +
    "\004\000\002\012\004\000\002\012\004\000\002\012\004" +
    "\000\002\012\005\000\002\003\007\000\002\003\006\000" +
    "\002\003\010\000\002\003\007\000\002\003\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\004" +
    "\007\000\002\004\011\000\002\004\010\000\002\004\007" +
    "\000\002\004\006\000\002\004\010\000\002\005\006\000" +
    "\002\005\005\000\002\005\005\000\002\005\012\000\002" +
    "\005\010\000\002\005\014\000\002\010\003\000\002\010" +
    "\003\000\002\007\003\000\002\007\003\000\002\007\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\003\000\002\026\003\000\002" +
    "\026\003\000\002\021\005\000\002\021\005\000\002\021" +
    "\007\000\002\021\003\000\002\021\011\000\002\024\004" +
    "\000\002\024\003\000\002\034\005\000\002\034\006\000" +
    "\002\041\005\000\002\041\006\000\002\041\005\000\002" +
    "\041\005\000\002\041\005\000\002\041\005\000\002\041" +
    "\004\000\002\035\003\000\002\035\003\000\002\035\003" +
    "\000\002\035\003\000\002\035\003\000\002\035\003\000" +
    "\002\032\004\000\002\033\004\000\002\033\003\000\002" +
    "\036\005\000\002\036\004\000\002\031\006\000\002\031" +
    "\006\000\002\031\006\000\002\031\005\000\002\031\010" +
    "\000\002\031\007\000\002\006\011\000\002\006\011\000" +
    "\002\014\012\000\002\020\006\000\002\015\004\000\002" +
    "\015\004\000\002\015\004\000\002\015\004\000\002\015" +
    "\004\000\002\015\004\000\002\015\004\000\002\015\004" +
    "\000\002\015\005\000\002\015\004\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\015\003\000\002\015\003\000\002\015" +
    "\003\000\002\015\005\000\002\015\004\000\002\016\004" +
    "\000\002\016\004\000\002\016\004\000\002\016\004\000" +
    "\002\016\004\000\002\016\004\000\002\016\004\000\002" +
    "\016\004\000\002\016\005\000\002\016\004\000\002\016" +
    "\003\000\002\016\003\000\002\016\003\000\002\016\003" +
    "\000\002\016\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\017\004\000\002\017\004\000\002" +
    "\017\004\000\002\017\004\000\002\017\005\000\002\017" +
    "\004\000\002\017\004\000\002\017\004\000\002\017\004" +
    "\000\002\017\004\000\002\017\005\000\002\017\004\000" +
    "\002\017\003\000\002\017\003\000\002\017\003\000\002" +
    "\017\003\000\002\017\003\000\002\017\003\000\002\017" +
    "\003\000\002\017\003\000\002\022\017\000\002\022\014" +
    "\000\002\037\004\000\002\037\004\000\002\037\004\000" +
    "\002\037\004\000\002\037\004\000\002\037\004\000\002" +
    "\037\004\000\002\037\004\000\002\037\005\000\002\037" +
    "\004\000\002\037\003\000\002\037\003\000\002\037\003" +
    "\000\002\037\003\000\002\037\003\000\002\037\003\000" +
    "\002\037\003\000\002\037\003\000\002\037\005\000\002" +
    "\063\012\000\002\064\006\000\002\065\004\000\002\065" +
    "\004\000\002\065\004\000\002\065\004\000\002\065\004" +
    "\000\002\065\004\000\002\065\004\000\002\065\004\000" +
    "\002\065\005\000\002\065\004\000\002\065\003\000\002" +
    "\065\003\000\002\065\003\000\002\065\003\000\002\065" +
    "\003\000\002\065\003\000\002\065\003\000\002\065\003" +
    "\000\002\065\005\000\002\065\005\000\002\065\004\000" +
    "\002\066\004\000\002\066\004\000\002\066\004\000\002" +
    "\066\004\000\002\066\005\000\002\066\004\000\002\066" +
    "\004\000\002\066\004\000\002\066\004\000\002\066\004" +
    "\000\002\066\005\000\002\066\004\000\002\066\003\000" +
    "\002\066\003\000\002\066\003\000\002\066\003\000\002" +
    "\066\003\000\002\066\003\000\002\066\003\000\002\066" +
    "\003\000\002\066\005\000\002\067\004\000\002\067\004" +
    "\000\002\067\004\000\002\067\004\000\002\067\004\000" +
    "\002\067\004\000\002\067\004\000\002\067\004\000\002" +
    "\067\005\000\002\067\004\000\002\067\003\000\002\067" +
    "\003\000\002\067\003\000\002\067\003\000\002\067\003" +
    "\000\002\067\003\000\002\067\003\000\002\067\003\000" +
    "\002\067\005\000\002\061\011\000\002\062\004\000\002" +
    "\062\004\000\002\062\004\000\002\062\004\000\002\062" +
    "\004\000\002\062\004\000\002\062\004\000\002\062\004" +
    "\000\002\062\005\000\002\062\004\000\002\062\003\000" +
    "\002\062\003\000\002\062\003\000\002\062\003\000\002" +
    "\062\003\000\002\062\003\000\002\062\003\000\002\062" +
    "\003\000\002\062\005\000\002\062\005\000\002\051\012" +
    "\000\002\055\006\000\002\052\004\000\002\052\004\000" +
    "\002\052\004\000\002\052\004\000\002\052\004\000\002" +
    "\052\004\000\002\052\004\000\002\052\004\000\002\052" +
    "\005\000\002\052\004\000\002\052\003\000\002\052\003" +
    "\000\002\052\003\000\002\052\003\000\002\052\003\000" +
    "\002\052\003\000\002\052\003\000\002\052\003\000\002" +
    "\052\005\000\002\052\005\000\002\052\004\000\002\054" +
    "\004\000\002\054\004\000\002\054\004\000\002\054\004" +
    "\000\002\054\004\000\002\054\005\000\002\054\004\000" +
    "\002\054\004\000\002\054\004\000\002\054\004\000\002" +
    "\054\005\000\002\054\004\000\002\054\003\000\002\054" +
    "\003\000\002\054\003\000\002\054\003\000\002\054\003" +
    "\000\002\054\003\000\002\054\003\000\002\054\003\000" +
    "\002\054\005\000\002\053\004\000\002\053\004\000\002" +
    "\053\004\000\002\053\004\000\002\053\004\000\002\053" +
    "\004\000\002\053\004\000\002\053\004\000\002\053\005" +
    "\000\002\053\004\000\002\053\003\000\002\053\003\000" +
    "\002\053\003\000\002\053\003\000\002\053\003\000\002" +
    "\053\003\000\002\053\003\000\002\053\003\000\002\053" +
    "\005\000\002\057\017\000\002\057\014\000\002\056\004" +
    "\000\002\056\004\000\002\056\004\000\002\056\004\000" +
    "\002\056\004\000\002\056\004\000\002\056\004\000\002" +
    "\056\004\000\002\056\005\000\002\056\004\000\002\056" +
    "\003\000\002\056\003\000\002\056\003\000\002\056\003" +
    "\000\002\056\003\000\002\056\003\000\002\056\003\000" +
    "\002\056\003\000\002\056\005\000\002\056\005\000\002" +
    "\025\011\000\002\040\004\000\002\040\004\000\002\040" +
    "\004\000\002\040\004\000\002\040\004\000\002\040\004" +
    "\000\002\040\004\000\002\040\004\000\002\040\005\000" +
    "\002\040\004\000\002\040\003\000\002\040\003\000\002" +
    "\040\003\000\002\040\003\000\002\040\003\000\002\040" +
    "\003\000\002\040\003\000\002\040\003\000\002\040\005" +
    "" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u03c6\000\010\003\006\026\004\033\007\001\002\000" +
    "\034\003\ufffa\005\ufffa\013\ufffa\017\ufffa\025\ufffa\026\ufffa" +
    "\031\ufffa\033\ufffa\050\ufffa\054\ufffa\060\ufffa\064\ufffa\065" +
    "\ufffa\001\002\000\004\002\u03c8\001\002\000\006\034\u03c3" +
    "\062\u03c2\001\002\000\006\003\u03b7\034\u03b8\001\002\000" +
    "\010\003\013\031\017\033\016\001\002\000\010\003\013" +
    "\031\017\033\016\001\002\000\010\003\013\031\017\033" +
    "\016\001\002\000\014\030\u0162\031\u0164\032\u0165\061\u03ae" +
    "\062\u03af\001\002\000\004\002\ufffc\001\002\000\004\002" +
    "\uffd6\001\002\000\012\003\u0385\030\u0384\031\u0175\032\u0386" +
    "\001\002\000\006\003\023\061\022\001\002\000\010\003" +
    "\013\031\017\033\016\001\002\000\004\002\uffd8\001\002" +
    "\000\006\003\u0379\050\u037a\001\002\000\004\050\024\001" +
    "\002\000\004\051\025\001\002\000\004\062\026\001\002" +
    "\000\030\003\051\005\040\013\047\017\034\025\052\026" +
    "\004\050\045\054\030\060\046\064\036\065\053\001\002" +
    "\000\030\003\051\005\040\013\047\017\034\025\052\026" +
    "\004\050\045\054\030\060\046\064\036\065\053\001\002" +
    "\000\004\064\u036c\001\002\000\030\003\051\005\040\013" +
    "\047\017\034\025\052\026\004\050\045\054\030\060\046" +
    "\064\036\065\053\001\002\000\030\003\051\005\040\013" +
    "\047\017\034\025\052\026\004\050\045\054\030\060\046" +
    "\064\036\065\053\001\002\000\030\003\051\005\040\013" +
    "\047\017\034\025\052\026\004\050\045\054\030\060\046" +
    "\064\036\065\053\001\002\000\004\064\u02cb\001\002\000" +
    "\004\002\uffe8\001\002\000\030\035\uff26\036\uff26\037\uff26" +
    "\040\uff26\041\uff26\042\uff26\047\u02a1\050\u029f\053\u029e\064" +
    "\060\065\053\001\002\000\030\003\051\005\040\013\047" +
    "\017\034\025\052\026\004\050\045\054\030\060\046\064" +
    "\036\065\053\001\002\000\004\053\u0290\001\002\000\030" +
    "\003\051\005\040\013\047\017\034\025\052\026\004\050" +
    "\045\054\030\060\046\064\036\065\053\001\002\000\030" +
    "\003\051\005\040\013\047\017\034\025\052\026\004\050" +
    "\045\054\030\060\046\064\036\065\053\001\002\000\016" +
    "\035\106\036\104\037\102\040\100\041\101\042\105\001" +
    "\002\000\010\003\u015e\033\016\060\u015d\001\002\000\006" +
    "\064\060\065\053\001\002\000\006\003\u0153\031\u0154\001" +
    "\002\000\012\026\057\027\063\064\060\065\053\001\002" +
    "\000\030\003\051\005\040\013\047\017\034\025\052\026" +
    "\004\050\045\054\030\060\046\064\036\065\053\001\002" +
    "\000\006\031\u0101\062\u0100\001\002\000\004\022\056\001" +
    "\002\000\052\014\uff25\020\uff25\023\uff25\035\uff25\036\uff25" +
    "\037\uff25\040\uff25\041\uff25\042\uff25\043\uff25\044\uff25\045" +
    "\uff25\046\uff25\047\uff25\050\uff25\051\uff25\052\uff25\062\uff25" +
    "\064\uff25\065\uff25\001\002\000\030\003\051\005\040\013" +
    "\047\017\034\025\052\026\004\050\045\054\030\060\046" +
    "\064\036\065\053\001\002\000\020\002\uff47\003\uff47\026" +
    "\uff47\031\uff47\033\uff47\060\uff47\064\uff47\001\002\000\012" +
    "\026\057\027\063\064\060\065\053\001\002\000\006\014" +
    "\uff30\062\uff30\001\002\000\050\020\uff26\023\uff26\035\uff26" +
    "\036\uff26\037\uff26\040\uff26\041\uff26\042\uff26\043\uff26\044" +
    "\uff26\045\uff26\046\uff26\047\uff26\050\uff26\051\uff26\052\uff26" +
    "\062\uff26\064\uff26\065\uff26\001\002\000\004\062\120\001" +
    "\002\000\006\014\uff21\062\uff21\001\002\000\006\014\uff2f" +
    "\062\uff2f\001\002\000\014\043\071\044\067\045\070\046" +
    "\066\047\072\001\002\000\014\026\057\027\063\050\075" +
    "\064\073\065\053\001\002\000\014\026\uff28\027\uff28\050" +
    "\uff28\064\uff28\065\uff28\001\002\000\014\026\uff2a\027\uff2a" +
    "\050\uff2a\064\uff2a\065\uff2a\001\002\000\014\026\uff29\027" +
    "\uff29\050\uff29\064\uff29\065\uff29\001\002\000\014\026\uff2b" +
    "\027\uff2b\050\uff2b\064\uff2b\065\uff2b\001\002\000\014\026" +
    "\uff27\027\uff27\050\uff27\064\uff27\065\uff27\001\002\000\010" +
    "\014\uff26\050\111\062\uff26\001\002\000\006\014\uff23\062" +
    "\uff23\001\002\000\006\064\060\065\053\001\002\000\006" +
    "\014\uff24\062\uff24\001\002\000\016\035\106\036\104\037" +
    "\102\040\100\041\101\042\105\001\002\000\024\035\uff11" +
    "\036\uff11\037\uff11\040\uff11\041\uff11\042\uff11\050\uff11\064" +
    "\uff11\065\uff11\001\002\000\024\035\uff10\036\uff10\037\uff10" +
    "\040\uff10\041\uff10\042\uff10\050\uff10\064\uff10\065\uff10\001" +
    "\002\000\024\035\uff12\036\uff12\037\uff12\040\uff12\041\uff12" +
    "\042\uff12\050\uff12\064\uff12\065\uff12\001\002\000\006\064" +
    "\060\065\053\001\002\000\024\035\uff13\036\uff13\037\uff13" +
    "\040\uff13\041\uff13\042\uff13\050\uff13\064\uff13\065\uff13\001" +
    "\002\000\024\035\uff0f\036\uff0f\037\uff0f\040\uff0f\041\uff0f" +
    "\042\uff0f\050\uff0f\064\uff0f\065\uff0f\001\002\000\024\035" +
    "\uff14\036\uff14\037\uff14\040\uff14\041\uff14\042\uff14\050\uff14" +
    "\064\uff14\065\uff14\001\002\000\004\051\110\001\002\000" +
    "\006\014\uff20\062\uff20\001\002\000\006\064\060\065\053" +
    "\001\002\000\006\014\uff22\062\uff22\001\002\000\006\051" +
    "\114\052\116\001\002\000\012\014\uff0c\051\uff0c\052\uff0c" +
    "\062\uff0c\001\002\000\012\014\uff0e\051\uff0e\052\uff0e\062" +
    "\uff0e\001\002\000\006\064\060\065\053\001\002\000\012" +
    "\014\uff0d\051\uff0d\052\uff0d\062\uff0d\001\002\000\026\005" +
    "\040\006\131\013\133\017\124\025\052\050\045\054\030" +
    "\056\135\064\036\065\053\001\002\000\030\005\040\006" +
    "\131\013\133\017\124\021\ufdf7\025\052\050\045\054\030" +
    "\056\135\064\036\065\053\001\002\000\030\005\040\006" +
    "\131\013\133\017\124\021\ufdf6\025\052\050\045\054\030" +
    "\056\135\064\036\065\053\001\002\000\030\005\040\006" +
    "\131\013\133\017\124\021\ufdfc\025\052\050\045\054\030" +
    "\056\135\064\036\065\053\001\002\000\004\064\300\001" +
    "\002\000\030\005\040\006\131\013\133\017\124\021\ufdf8" +
    "\025\052\050\045\054\030\056\135\064\036\065\053\001" +
    "\002\000\030\005\040\006\131\013\133\017\124\021\ufdf9" +
    "\025\052\050\045\054\030\056\135\064\036\065\053\001" +
    "\002\000\030\005\040\006\131\013\133\017\124\021\ufdf5" +
    "\025\052\050\045\054\030\056\135\064\036\065\053\001" +
    "\002\000\030\005\040\006\131\013\133\017\124\021\ufdfb" +
    "\025\052\050\045\054\030\056\135\064\036\065\053\001" +
    "\002\000\004\062\272\001\002\000\030\005\040\006\131" +
    "\013\133\017\124\021\ufdfa\025\052\050\045\054\030\056" +
    "\135\064\036\065\053\001\002\000\012\026\057\027\063" +
    "\064\060\065\053\001\002\000\004\021\140\001\002\000" +
    "\004\025\136\001\002\000\004\062\137\001\002\000\004" +
    "\021\ufdf4\001\002\000\004\062\141\001\002\000\044\003" +
    "\ufe07\005\ufe07\006\ufe07\013\ufe07\015\ufe07\016\ufe07\017\ufe07" +
    "\021\ufe07\024\ufe07\025\ufe07\026\ufe07\050\ufe07\054\ufe07\056" +
    "\ufe07\060\ufe07\064\ufe07\065\ufe07\001\002\000\004\014\143" +
    "\001\002\000\004\062\144\001\002\000\032\005\040\006" +
    "\156\013\133\015\146\016\145\017\124\025\052\050\045" +
    "\054\030\056\161\064\036\065\053\001\002\000\004\062" +
    "\267\001\002\000\012\026\057\027\063\064\060\065\053" +
    "\001\002\000\034\005\040\006\156\013\133\015\146\016" +
    "\145\017\124\025\052\050\045\054\030\056\161\060\ufe4d" +
    "\064\036\065\053\001\002\000\034\005\040\006\156\013" +
    "\133\015\146\016\145\017\124\025\052\050\045\054\030" +
    "\056\161\060\ufe4c\064\036\065\053\001\002\000\034\005" +
    "\040\006\156\013\133\015\146\016\145\017\124\025\052" +
    "\050\045\054\030\056\161\060\ufe49\064\036\065\053\001" +
    "\002\000\034\005\040\006\156\013\133\015\146\016\145" +
    "\017\124\025\052\050\045\054\030\056\161\060\ufe4e\064" +
    "\036\065\053\001\002\000\034\005\040\006\156\013\133" +
    "\015\146\016\145\017\124\025\052\050\045\054\030\056" +
    "\161\060\ufe4f\064\036\065\053\001\002\000\034\005\040" +
    "\006\156\013\133\015\146\016\145\017\124\025\052\050" +
    "\045\054\030\056\161\060\ufe4b\064\036\065\053\001\002" +
    "\000\034\005\040\006\156\013\133\015\146\016\145\017" +
    "\124\025\052\050\045\054\030\056\161\060\ufe4a\064\036" +
    "\065\053\001\002\000\004\062\170\001\002\000\004\060" +
    "\165\001\002\000\034\005\040\006\156\013\133\015\146" +
    "\016\145\017\124\025\052\050\045\054\030\056\161\060" +
    "\ufe50\064\036\065\053\001\002\000\004\025\162\001\002" +
    "\000\004\062\163\001\002\000\004\060\ufe48\001\002\000" +
    "\004\060\ufe5a\001\002\000\004\013\166\001\002\000\004" +
    "\062\167\001\002\000\040\005\ufe5c\006\ufe5c\013\ufe5c\015" +
    "\ufe5c\016\ufe5c\017\ufe5c\021\ufe5c\024\ufe5c\025\ufe5c\050\ufe5c" +
    "\054\ufe5c\056\ufe5c\060\ufe5c\064\ufe5c\065\ufe5c\001\002\000" +
    "\034\005\040\006\156\013\133\015\146\016\145\017\124" +
    "\025\052\050\045\054\030\056\161\060\ufe51\064\036\065" +
    "\053\001\002\000\004\060\ufe52\001\002\000\004\060\ufe54" +
    "\001\002\000\004\060\ufe56\001\002\000\004\060\ufe59\001" +
    "\002\000\004\060\ufe58\001\002\000\004\060\ufe53\001\002" +
    "\000\004\060\ufe55\001\002\000\004\060\ufe57\001\002\000" +
    "\004\060\ufe46\001\002\000\004\014\203\001\002\000\004" +
    "\062\204\001\002\000\032\005\040\006\217\013\133\015" +
    "\206\016\205\017\124\025\052\050\045\054\030\056\221" +
    "\064\036\065\053\001\002\000\004\062\237\001\002\000" +
    "\012\026\057\027\063\064\060\065\053\001\002\000\034" +
    "\005\040\006\217\013\133\015\206\016\205\017\124\025" +
    "\052\050\045\054\030\056\221\060\ufe35\064\036\065\053" +
    "\001\002\000\034\005\040\006\217\013\133\015\206\016" +
    "\205\017\124\025\052\050\045\054\030\056\221\060\ufe34" +
    "\064\036\065\053\001\002\000\034\005\040\006\217\013" +
    "\133\015\206\016\205\017\124\025\052\050\045\054\030" +
    "\056\221\060\ufe39\064\036\065\053\001\002\000\004\060" +
    "\ufe5b\001\002\000\034\005\040\006\217\013\133\015\206" +
    "\016\205\017\124\025\052\050\045\054\030\056\221\060" +
    "\ufe36\064\036\065\053\001\002\000\034\005\040\006\217" +
    "\013\133\015\206\016\205\017\124\025\052\050\045\054" +
    "\030\056\221\060\ufe37\064\036\065\053\001\002\000\034" +
    "\005\040\006\217\013\133\015\206\016\205\017\124\025" +
    "\052\050\045\054\030\056\221\060\ufe33\064\036\065\053" +
    "\001\002\000\034\005\040\006\217\013\133\015\206\016" +
    "\205\017\124\025\052\050\045\054\030\056\221\060\ufe32" +
    "\064\036\065\053\001\002\000\004\062\225\001\002\000" +
    "\034\005\040\006\217\013\133\015\206\016\205\017\124" +
    "\025\052\050\045\054\030\056\221\060\ufe38\064\036\065" +
    "\053\001\002\000\004\025\222\001\002\000\004\062\223" +
    "\001\002\000\004\060\ufe31\001\002\000\004\060\ufe44\001" +
    "\002\000\034\005\040\006\217\013\133\015\206\016\205" +
    "\017\124\025\052\050\045\054\030\056\221\060\ufe3a\064" +
    "\036\065\053\001\002\000\004\060\ufe3b\001\002\000\004" +
    "\060\ufe3c\001\002\000\004\060\ufe3e\001\002\000\004\060" +
    "\ufe43\001\002\000\004\060\ufe42\001\002\000\004\060\ufe45" +
    "\001\002\000\004\060\ufe3d\001\002\000\004\060\ufe41\001" +
    "\002\000\004\060\ufe3f\001\002\000\026\005\040\006\247" +
    "\013\133\017\124\025\052\050\045\054\030\056\251\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe22\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe26\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe21\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe23\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe24\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe20\064" +
    "\036\065\053\001\002\000\030\005\040\006\247\013\133" +
    "\017\124\025\052\050\045\054\030\056\251\060\ufe1f\064" +
    "\036\065\053\001\002\000\004\062\256\001\002\000\030" +
    "\005\040\006\247\013\133\017\124\025\052\050\045\054" +
    "\030\056\251\060\ufe25\064\036\065\053\001\002\000\004" +
    "\025\253\001\002\000\004\060\ufe40\001\002\000\004\062" +
    "\254\001\002\000\004\060\ufe1e\001\002\000\004\060\ufe2f" +
    "\001\002\000\030\005\040\006\247\013\133\017\124\025" +
    "\052\050\045\054\030\056\251\060\ufe27\064\036\065\053" +
    "\001\002\000\004\060\ufe28\001\002\000\004\060\ufe29\001" +
    "\002\000\004\060\ufe2b\001\002\000\004\060\ufe2e\001\002" +
    "\000\004\060\ufe2d\001\002\000\004\060\ufe2a\001\002\000" +
    "\004\060\ufe30\001\002\000\004\060\ufe2c\001\002\000\026" +
    "\005\040\006\247\013\133\017\124\025\052\050\045\054" +
    "\030\056\251\064\036\065\053\001\002\000\004\060\ufe47" +
    "\001\002\000\004\021\ufe04\001\002\000\030\005\040\006" +
    "\131\013\133\017\124\021\ufdfd\025\052\050\045\054\030" +
    "\056\135\064\036\065\053\001\002\000\004\021\ufdfe\001" +
    "\002\000\004\021\ufe05\001\002\000\004\021\ufdff\001\002" +
    "\000\004\021\ufe03\001\002\000\004\021\ufe02\001\002\000" +
    "\004\047\301\001\002\000\006\064\060\065\053\001\002" +
    "\000\004\020\303\001\002\000\010\050\045\064\060\065" +
    "\053\001\002\000\026\005\040\006\325\013\133\017\124" +
    "\025\052\050\045\054\030\056\327\064\036\065\053\001" +
    "\002\000\020\023\307\035\106\036\104\037\102\040\100" +
    "\041\101\042\105\001\002\000\024\035\106\036\104\037" +
    "\102\040\100\041\101\042\105\050\353\064\060\065\053" +
    "\001\002\000\006\036\312\065\311\001\002\000\004\062" +
    "\314\001\002\000\004\062\uff1e\001\002\000\004\065\313" +
    "\001\002\000\004\062\uff1f\001\002\000\026\005\040\006" +
    "\325\013\133\017\124\025\052\050\045\054\030\056\327" +
    "\064\036\065\053\001\002\000\030\005\040\006\325\013" +
    "\133\017\124\024\ufe0c\025\052\050\045\054\030\056\327" +
    "\064\036\065\053\001\002\000\030\005\040\006\325\013" +
    "\133\017\124\024\ufe0b\025\052\050\045\054\030\056\327" +
    "\064\036\065\053\001\002\000\030\005\040\006\325\013" +
    "\133\017\124\024\ufe11\025\052\050\045\054\030\056\327" +
    "\064\036\065\053\001\002\000\030\005\040\006\325\013" +
    "\133\017\124\024\ufe0d\025\052\050\045\054\030\056\327" +
    "\064\036\065\053\001\002\000\004\024\342\001\002\000" +
    "\030\005\040\006\325\013\133\017\124\024\ufe0e\025\052" +
    "\050\045\054\030\056\327\064\036\065\053\001\002\000" +
    "\030\005\040\006\325\013\133\017\124\024\ufe0a\025\052" +
    "\050\045\054\030\056\327\064\036\065\053\001\002\000" +
    "\030\005\040\006\325\013\133\017\124\024\ufe10\025\052" +
    "\050\045\054\030\056\327\064\036\065\053\001\002\000" +
    "\004\062\335\001\002\000\030\005\040\006\325\013\133" +
    "\017\124\024\ufe0f\025\052\050\045\054\030\056\327\064" +
    "\036\065\053\001\002\000\006\017\331\025\330\001\002" +
    "\000\004\062\333\001\002\000\004\062\332\001\002\000" +
    "\004\024\ufe08\001\002\000\004\024\ufe09\001\002\000\004" +
    "\024\ufe19\001\002\000\030\005\040\006\325\013\133\017" +
    "\124\024\ufe12\025\052\050\045\054\030\056\327\064\036" +
    "\065\053\001\002\000\004\024\ufe13\001\002\000\004\024" +
    "\ufe1a\001\002\000\004\024\ufe14\001\002\000\004\024\ufe18" +
    "\001\002\000\004\064\343\001\002\000\004\062\344\001" +
    "\002\000\040\005\ufe1d\006\ufe1d\013\ufe1d\015\ufe1d\016\ufe1d" +
    "\017\ufe1d\021\ufe1d\024\ufe1d\025\ufe1d\050\ufe1d\054\ufe1d\056" +
    "\ufe1d\060\ufe1d\064\ufe1d\065\ufe1d\001\002\000\004\024\ufe17" +
    "\001\002\000\004\024\ufe1b\001\002\000\004\024\ufe15\001" +
    "\002\000\004\024\ufe16\001\002\000\022\035\106\036\104" +
    "\037\102\040\100\041\101\042\105\051\363\062\365\001" +
    "\002\000\044\003\uff1d\005\uff1d\006\uff1d\013\uff1d\015\uff1d" +
    "\016\uff1d\017\uff1d\021\uff1d\024\uff1d\025\uff1d\026\uff1d\050" +
    "\uff1d\054\uff1d\056\uff1d\060\uff1d\064\uff1d\065\uff1d\001\002" +
    "\000\006\064\060\065\053\001\002\000\006\064\060\065" +
    "\053\001\002\000\026\035\106\036\104\037\102\040\100" +
    "\041\101\042\105\050\353\062\357\064\060\065\053\001" +
    "\002\000\044\003\uff19\005\uff19\006\uff19\013\uff19\015\uff19" +
    "\016\uff19\017\uff19\021\uff19\024\uff19\025\uff19\026\uff19\050" +
    "\uff19\054\uff19\056\uff19\060\uff19\064\uff19\065\uff19\001\002" +
    "\000\044\003\uff17\005\uff17\006\uff17\013\uff17\015\uff17\016" +
    "\uff17\017\uff17\021\uff17\024\uff17\025\uff17\026\uff17\050\uff17" +
    "\054\uff17\056\uff17\060\uff17\064\uff17\065\uff17\001\002\000" +
    "\016\035\106\036\104\037\102\040\100\041\101\042\105" +
    "\001\002\000\024\035\106\036\104\037\102\040\100\041" +
    "\101\042\105\050\353\064\060\065\053\001\002\000\044" +
    "\003\uff1a\005\uff1a\006\uff1a\013\uff1a\015\uff1a\016\uff1a\017" +
    "\uff1a\021\uff1a\024\uff1a\025\uff1a\026\uff1a\050\uff1a\054\uff1a" +
    "\056\uff1a\060\uff1a\064\uff1a\065\uff1a\001\002\000\026\035" +
    "\106\036\104\037\102\040\100\041\101\042\105\050\353" +
    "\062\370\064\060\065\053\001\002\000\024\035\106\036" +
    "\104\037\102\040\100\041\101\042\105\050\353\064\060" +
    "\065\053\001\002\000\044\003\uff15\005\uff15\006\uff15\013" +
    "\uff15\015\uff15\016\uff15\017\uff15\021\uff15\024\uff15\025\uff15" +
    "\026\uff15\050\uff15\054\uff15\056\uff15\060\uff15\064\uff15\065" +
    "\uff15\001\002\000\044\003\uff1b\005\uff1b\006\uff1b\013\uff1b" +
    "\015\uff1b\016\uff1b\017\uff1b\021\uff1b\024\uff1b\025\uff1b\026" +
    "\uff1b\050\uff1b\054\uff1b\056\uff1b\060\uff1b\064\uff1b\065\uff1b" +
    "\001\002\000\044\003\uff18\005\uff18\006\uff18\013\uff18\015" +
    "\uff18\016\uff18\017\uff18\021\uff18\024\uff18\025\uff18\026\uff18" +
    "\050\uff18\054\uff18\056\uff18\060\uff18\064\uff18\065\uff18\001" +
    "\002\000\044\003\uff16\005\uff16\006\uff16\013\uff16\015\uff16" +
    "\016\uff16\017\uff16\021\uff16\024\uff16\025\uff16\026\uff16\050" +
    "\uff16\054\uff16\056\uff16\060\uff16\064\uff16\065\uff16\001\002" +
    "\000\004\024\372\001\002\000\004\064\373\001\002\000" +
    "\004\062\374\001\002\000\040\005\ufe1c\006\ufe1c\013\ufe1c" +
    "\015\ufe1c\016\ufe1c\017\ufe1c\021\ufe1c\024\ufe1c\025\ufe1c\050" +
    "\ufe1c\054\ufe1c\056\ufe1c\060\ufe1c\064\ufe1c\065\ufe1c\001\002" +
    "\000\004\021\ufe06\001\002\000\004\021\ufe00\001\002\000" +
    "\004\021\ufe01\001\002\000\030\003\051\005\040\013\047" +
    "\017\034\025\052\026\004\050\045\054\030\060\046\064" +
    "\036\065\053\001\002\000\004\062\u0102\001\002\000\010" +
    "\003\uffdb\033\uffdb\060\uffdb\001\002\000\020\002\uff45\003" +
    "\uff45\026\uff45\031\uff45\033\uff45\060\uff45\064\uff45\001\002" +
    "\000\020\002\uff4e\003\uff4e\026\uff4e\031\uff4e\033\uff4e\060" +
    "\uff4e\064\uff4e\001\002\000\004\014\u0106\001\002\000\004" +
    "\062\u0107\001\002\000\030\005\040\006\u0112\013\047\015" +
    "\u010b\016\u0108\017\034\025\052\050\045\054\030\064\036" +
    "\065\053\001\002\000\004\062\u0151\001\002\000\032\005" +
    "\040\006\u0112\013\047\015\u010b\016\u0108\017\034\025\052" +
    "\050\045\054\030\060\ufeef\064\036\065\053\001\002\000" +
    "\032\005\040\006\u0112\013\047\015\u010b\016\u0108\017\034" +
    "\025\052\050\045\054\030\060\ufef2\064\036\065\053\001" +
    "\002\000\012\026\057\027\063\064\060\065\053\001\002" +
    "\000\032\005\040\006\u0112\013\047\015\u010b\016\u0108\017" +
    "\034\025\052\050\045\054\030\060\ufef1\064\036\065\053" +
    "\001\002\000\032\005\040\006\u0112\013\047\015\u010b\016" +
    "\u0108\017\034\025\052\050\045\054\030\060\ufeee\064\036" +
    "\065\053\001\002\000\032\005\040\006\u0112\013\047\015" +
    "\u010b\016\u0108\017\034\025\052\050\045\054\030\060\ufef3" +
    "\064\036\065\053\001\002\000\032\005\040\006\u0112\013" +
    "\047\015\u010b\016\u0108\017\034\025\052\050\045\054\030" +
    "\060\ufef4\064\036\065\053\001\002\000\032\005\040\006" +
    "\u0112\013\047\015\u010b\016\u0108\017\034\025\052\050\045" +
    "\054\030\060\ufef0\064\036\065\053\001\002\000\004\060" +
    "\u0117\001\002\000\004\062\u0115\001\002\000\032\005\040" +
    "\006\u0112\013\047\015\u010b\016\u0108\017\034\025\052\050" +
    "\045\054\030\060\ufef5\064\036\065\053\001\002\000\004" +
    "\060\ufeff\001\002\000\032\005\040\006\u0112\013\047\015" +
    "\u010b\016\u0108\017\034\025\052\050\045\054\030\060\ufef6" +
    "\064\036\065\053\001\002\000\004\060\ufef7\001\002\000" +
    "\004\013\u0118\001\002\000\004\062\u0119\001\002\000\036" +
    "\003\uff01\005\uff01\006\uff01\013\uff01\015\uff01\016\uff01\017" +
    "\uff01\025\uff01\026\uff01\050\uff01\054\uff01\060\uff01\064\uff01" +
    "\065\uff01\001\002\000\004\060\ufefb\001\002\000\004\060" +
    "\ufefe\001\002\000\004\060\ufefd\001\002\000\004\060\ufef8" +
    "\001\002\000\004\060\ufefa\001\002\000\004\014\u0121\001" +
    "\002\000\004\060\ufeec\001\002\000\004\062\u0122\001\002" +
    "\000\030\005\040\006\u012d\013\047\015\u0125\016\u0123\017" +
    "\034\025\052\050\045\054\030\064\036\065\053\001\002" +
    "\000\004\062\u013a\001\002\000\032\005\040\006\u012d\013" +
    "\047\015\u0125\016\u0123\017\034\025\052\050\045\054\030" +
    "\060\ufec7\064\036\065\053\001\002\000\012\026\057\027" +
    "\063\064\060\065\053\001\002\000\032\005\040\006\u012d" +
    "\013\047\015\u0125\016\u0123\017\034\025\052\050\045\054" +
    "\030\060\ufeca\064\036\065\053\001\002\000\032\005\040" +
    "\006\u012d\013\047\015\u0125\016\u0123\017\034\025\052\050" +
    "\045\054\030\060\ufec9\064\036\065\053\001\002\000\032" +
    "\005\040\006\u012d\013\047\015\u0125\016\u0123\017\034\025" +
    "\052\050\045\054\030\060\ufec6\064\036\065\053\001\002" +
    "\000\032\005\040\006\u012d\013\047\015\u0125\016\u0123\017" +
    "\034\025\052\050\045\054\030\060\ufecb\064\036\065\053" +
    "\001\002\000\032\005\040\006\u012d\013\047\015\u0125\016" +
    "\u0123\017\034\025\052\050\045\054\030\060\ufecc\064\036" +
    "\065\053\001\002\000\032\005\040\006\u012d\013\047\015" +
    "\u0125\016\u0123\017\034\025\052\050\045\054\030\060\ufec8" +
    "\064\036\065\053\001\002\000\004\060\uff00\001\002\000" +
    "\004\062\u0130\001\002\000\032\005\040\006\u012d\013\047" +
    "\015\u0125\016\u0123\017\034\025\052\050\045\054\030\060" +
    "\ufecd\064\036\065\053\001\002\000\004\060\ufed9\001\002" +
    "\000\032\005\040\006\u012d\013\047\015\u0125\016\u0123\017" +
    "\034\025\052\050\045\054\030\060\ufece\064\036\065\053" +
    "\001\002\000\004\060\ufecf\001\002\000\004\060\ufed3\001" +
    "\002\000\004\060\ufed8\001\002\000\004\060\ufed7\001\002" +
    "\000\004\060\ufed0\001\002\000\004\060\ufed2\001\002\000" +
    "\004\060\ufed6\001\002\000\004\060\ufed4\001\002\000\004" +
    "\060\ufed1\001\002\000\024\005\040\006\u0142\013\047\017" +
    "\034\025\052\050\045\054\030\064\036\065\053\001\002" +
    "\000\026\005\040\006\u0142\013\047\017\034\025\052\050" +
    "\045\054\030\060\ufedb\064\036\065\053\001\002\000\026" +
    "\005\040\006\u0142\013\047\017\034\025\052\050\045\054" +
    "\030\060\ufede\064\036\065\053\001\002\000\026\005\040" +
    "\006\u0142\013\047\017\034\025\052\050\045\054\030\060" +
    "\ufedd\064\036\065\053\001\002\000\026\005\040\006\u0142" +
    "\013\047\017\034\025\052\050\045\054\030\060\ufeda\064" +
    "\036\065\053\001\002\000\026\005\040\006\u0142\013\047" +
    "\017\034\025\052\050\045\054\030\060\ufedf\064\036\065" +
    "\053\001\002\000\026\005\040\006\u0142\013\047\017\034" +
    "\025\052\050\045\054\030\060\ufee0\064\036\065\053\001" +
    "\002\000\026\005\040\006\u0142\013\047\017\034\025\052" +
    "\050\045\054\030\060\ufedc\064\036\065\053\001\002\000" +
    "\004\062\u0146\001\002\000\026\005\040\006\u0142\013\047" +
    "\017\034\025\052\050\045\054\030\060\ufee1\064\036\065" +
    "\053\001\002\000\004\060\ufed5\001\002\000\004\060\ufeeb" +
    "\001\002\000\026\005\040\006\u0142\013\047\017\034\025" +
    "\052\050\045\054\030\060\ufee2\064\036\065\053\001\002" +
    "\000\004\060\ufee3\001\002\000\004\060\ufee7\001\002\000" +
    "\004\060\ufeea\001\002\000\004\060\ufee9\001\002\000\004" +
    "\060\ufee4\001\002\000\004\060\ufee6\001\002\000\004\060" +
    "\ufee8\001\002\000\004\060\ufee5\001\002\000\004\060\ufefc" +
    "\001\002\000\004\060\ufef9\001\002\000\024\005\040\006" +
    "\u0142\013\047\017\034\025\052\050\045\054\030\064\036" +
    "\065\053\001\002\000\004\060\ufeed\001\002\000\004\062" +
    "\u0156\001\002\000\004\062\u0155\001\002\000\010\003\uffdc" +
    "\033\uffdc\060\uffdc\001\002\000\010\003\uffda\033\uffda\060" +
    "\uffda\001\002\000\016\035\106\036\104\037\102\040\100" +
    "\041\101\042\105\001\002\000\024\035\106\036\104\037" +
    "\102\040\100\041\101\042\105\050\353\064\060\065\053" +
    "\001\002\000\044\003\uff1c\005\uff1c\006\uff1c\013\uff1c\015" +
    "\uff1c\016\uff1c\017\uff1c\021\uff1c\024\uff1c\025\uff1c\026\uff1c" +
    "\050\uff1c\054\uff1c\056\uff1c\060\uff1c\064\uff1c\065\uff1c\001" +
    "\002\000\010\003\u015e\033\016\060\u015d\001\002\000\010" +
    "\003\u015e\033\016\060\u015d\001\002\000\020\002\uff46\003" +
    "\uff46\026\uff46\031\uff46\033\uff46\060\uff46\064\uff46\001\002" +
    "\000\006\003\u0288\034\u0289\001\002\000\014\030\u0162\031" +
    "\u0164\032\u0165\034\u0166\062\u0163\001\002\000\010\003\u015e" +
    "\033\016\060\u015d\001\002\000\020\002\uffd1\003\uffd1\026" +
    "\uffd1\031\uffd1\033\uffd1\060\uffd1\064\uffd1\001\002\000\020" +
    "\002\uffd3\003\uffd3\026\uffd3\031\uffd3\033\uffd3\060\uffd3\064" +
    "\uffd3\001\002\000\004\064\u01bf\001\002\000\010\003\u015e" +
    "\033\016\060\u015d\001\002\000\004\064\u01b9\001\002\000" +
    "\004\064\u0168\001\002\000\004\062\u0167\001\002\000\020" +
    "\002\uffe4\003\uffe4\026\uffe4\031\uffe4\033\uffe4\060\uffe4\064" +
    "\uffe4\001\002\000\004\062\u0169\001\002\000\014\003\u016d" +
    "\026\004\033\u0170\060\u016f\064\u016c\001\002\000\014\003" +
    "\u016d\026\004\033\u0170\060\u016f\064\u016c\001\002\000\012" +
    "\003\ufff2\031\ufff2\033\ufff2\060\ufff2\001\002\000\004\055" +
    "\u01a9\001\002\000\010\031\u0164\032\u01a6\062\u01a5\001\002" +
    "\000\014\003\u016d\026\004\033\u0170\060\u016f\064\u016c\001" +
    "\002\000\006\003\u01a0\032\u01a1\001\002\000\006\003\u0174" +
    "\031\u0175\001\002\000\014\003\u016d\026\004\033\u0170\060" +
    "\u016f\064\u016c\001\002\000\012\003\uffcc\031\uffcc\033\uffcc" +
    "\060\uffcc\001\002\000\012\003\uffce\031\uffce\033\uffce\060" +
    "\uffce\001\002\000\004\064\u019b\001\002\000\006\003\u0177" +
    "\064\u0176\001\002\000\006\003\u0193\050\u0194\001\002\000" +
    "\004\050\u0178\001\002\000\012\012\u017b\051\u017a\052\u017c" +
    "\064\u0179\001\002\000\004\055\u0190\001\002\000\010\003" +
    "\uff40\055\uff40\062\uff40\001\002\000\004\064\u018c\001\002" +
    "\000\006\012\u0181\064\u0180\001\002\000\004\062\u017e\001" +
    "\002\000\030\003\051\005\040\013\047\017\034\025\052" +
    "\026\004\050\045\054\030\060\046\064\036\065\053\001" +
    "\002\000\016\003\uffec\026\uffec\031\uffec\033\uffec\060\uffec" +
    "\064\uffec\001\002\000\004\055\u0189\001\002\000\004\064" +
    "\u0182\001\002\000\004\055\u0183\001\002\000\010\007\u0184" +
    "\010\u0186\011\u0185\001\002\000\016\012\uff2d\047\uff2d\051" +
    "\uff2d\052\uff2d\062\uff2d\064\uff2d\001\002\000\016\012\uff2e" +
    "\047\uff2e\051\uff2e\052\uff2e\062\uff2e\064\uff2e\001\002\000" +
    "\016\012\uff2c\047\uff2c\051\uff2c\052\uff2c\062\uff2c\064\uff2c" +
    "\001\002\000\012\012\u017b\051\u017a\052\u017c\064\u0179\001" +
    "\002\000\010\003\uff42\055\uff42\062\uff42\001\002\000\010" +
    "\007\u0184\010\u0186\011\u0185\001\002\000\012\012\u017b\051" +
    "\u017a\052\u017c\064\u0179\001\002\000\010\003\uff41\055\uff41" +
    "\062\uff41\001\002\000\004\055\u018d\001\002\000\010\007" +
    "\u0184\010\u0186\011\u0185\001\002\000\012\012\u017b\051\u017a" +
    "\052\u017c\064\u0179\001\002\000\010\003\uff44\055\uff44\062" +
    "\uff44\001\002\000\010\007\u0184\010\u0186\011\u0185\001\002" +
    "\000\012\012\u017b\051\u017a\052\u017c\064\u0179\001\002\000" +
    "\010\003\uff43\055\uff43\062\uff43\001\002\000\012\012\u017b" +
    "\051\u017a\052\u017c\064\u0179\001\002\000\012\012\u017b\051" +
    "\u017a\052\u017c\064\u0179\001\002\000\004\062\u0196\001\002" +
    "\000\030\003\051\005\040\013\047\017\034\025\052\026" +
    "\004\050\045\054\030\060\046\064\036\065\053\001\002" +
    "\000\016\003\uffef\026\uffef\031\uffef\033\uffef\060\uffef\064" +
    "\uffef\001\002\000\004\062\u0199\001\002\000\030\003\051" +
    "\005\040\013\047\017\034\025\052\026\004\050\045\054" +
    "\030\060\046\064\036\065\053\001\002\000\016\003\uffeb" +
    "\026\uffeb\031\uffeb\033\uffeb\060\uffeb\064\uffeb\001\002\000" +
    "\004\050\u019c\001\002\000\012\012\u017b\051\u017a\052\u017c" +
    "\064\u0179\001\002\000\004\062\u019e\001\002\000\030\003" +
    "\051\005\040\013\047\017\034\025\052\026\004\050\045" +
    "\054\030\060\046\064\036\065\053\001\002\000\016\003" +
    "\uffed\026\uffed\031\uffed\033\uffed\060\uffed\064\uffed\001\002" +
    "\000\004\062\u01a3\001\002\000\004\062\u01a2\001\002\000" +
    "\012\003\uffdf\031\uffdf\033\uffdf\060\uffdf\001\002\000\012" +
    "\003\uffdd\031\uffdd\033\uffdd\060\uffdd\001\002\000\012\003" +
    "\uffcd\031\uffcd\033\uffcd\060\uffcd\001\002\000\014\003\u016d" +
    "\026\004\033\u0170\060\u016f\064\u016c\001\002\000\004\062" +
    "\u01a7\001\002\000\012\003\uffde\031\uffde\033\uffde\060\uffde" +
    "\001\002\000\012\003\uffcb\031\uffcb\033\uffcb\060\uffcb\001" +
    "\002\000\010\007\u01aa\010\u01ad\011\u01ab\001\002\000\006" +
    "\047\u01b5\062\uff2d\001\002\000\006\047\u01b2\062\uff2e\001" +
    "\002\000\004\062\u01b1\001\002\000\006\047\u01ae\062\uff2c" +
    "\001\002\000\006\026\057\027\063\001\002\000\004\062" +
    "\u01b0\001\002\000\014\003\uffc9\026\uffc9\033\uffc9\060\uffc9" +
    "\064\uffc9\001\002\000\014\003\uffca\026\uffca\033\uffca\060" +
    "\uffca\064\uffca\001\002\000\004\063\u01b3\001\002\000\004" +
    "\062\u01b4\001\002\000\014\003\uffc8\026\uffc8\033\uffc8\060" +
    "\uffc8\064\uffc8\001\002\000\004\065\u01b6\001\002\000\004" +
    "\062\u01b7\001\002\000\014\003\uffc7\026\uffc7\033\uffc7\060" +
    "\uffc7\064\uffc7\001\002\000\012\003\uffcf\031\uffcf\033\uffcf" +
    "\060\uffcf\001\002\000\004\050\u01ba\001\002\000\012\012" +
    "\u017b\051\u017a\052\u017c\064\u0179\001\002\000\004\062\u01bc" +
    "\001\002\000\030\003\051\005\040\013\047\017\034\025" +
    "\052\026\004\050\045\054\030\060\046\064\036\065\053" +
    "\001\002\000\016\003\uffee\026\uffee\031\uffee\033\uffee\060" +
    "\uffee\064\uffee\001\002\000\020\002\uffd0\003\uffd0\026\uffd0" +
    "\031\uffd0\033\uffd0\060\uffd0\064\uffd0\001\002\000\004\050" +
    "\u01c0\001\002\000\012\012\u017b\051\u017a\052\u017c\064\u0179" +
    "\001\002\000\004\055\u01c2\001\002\000\010\007\u0184\010" +
    "\u0186\011\u0185\001\002\000\004\062\u01c4\001\002\000\030" +
    "\003\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050" +
    "\045\054\030\060\u01cf\064\036\065\053\001\002\000\030" +
    "\003\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050" +
    "\045\054\030\060\u01cf\064\036\065\053\001\002\000\030" +
    "\003\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050" +
    "\045\054\030\060\u01cf\064\036\065\053\001\002\000\030" +
    "\003\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050" +
    "\045\054\030\060\u01cf\064\036\065\053\001\002\000\004" +
    "\064\u025a\001\002\000\030\003\u01d1\005\040\013\u01d0\017" +
    "\u01c8\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036" +
    "\065\053\001\002\000\030\003\u01d1\005\040\013\u01d0\017" +
    "\u01c8\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036" +
    "\065\053\001\002\000\030\003\u01d1\005\040\013\u01d0\017" +
    "\u01c8\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036" +
    "\065\053\001\002\000\030\003\u01d1\005\040\013\u01d0\017" +
    "\u01c8\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036" +
    "\065\053\001\002\000\012\003\ufff8\031\ufff8\033\ufff8\060" +
    "\ufff8\001\002\000\012\003\uffbd\031\uffbd\033\uffbd\060\uffbd" +
    "\001\002\000\006\003\u0253\030\u0252\001\002\000\012\026" +
    "\057\027\063\064\060\065\053\001\002\000\006\030\u01f7" +
    "\062\u01f8\001\002\000\004\022\u01d7\001\002\000\030\003" +
    "\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050\045" +
    "\054\030\060\u01cf\064\036\065\053\001\002\000\030\003" +
    "\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050\045" +
    "\054\030\060\u01cf\064\036\065\053\001\002\000\012\003" +
    "\uffc6\031\uffc6\033\uffc6\060\uffc6\001\002\000\012\003\uffbe" +
    "\031\uffbe\033\uffbe\060\uffbe\001\002\000\012\026\057\027" +
    "\063\064\060\065\053\001\002\000\004\062\u01d9\001\002" +
    "\000\026\005\040\006\u01e1\013\u01d0\017\u01c8\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff6d\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff70\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff6c\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff6a\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff6e\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff6f\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\030" +
    "\005\040\006\u01e1\013\u01d0\017\u01c8\021\uff6b\025\u01d2\050" +
    "\045\054\030\056\u01e4\064\036\065\053\001\002\000\004" +
    "\062\u01ee\001\002\000\004\021\u01ec\001\002\000\030\005" +
    "\040\006\u01e1\013\u01d0\017\u01c8\021\uff71\025\u01d2\050\045" +
    "\054\030\056\u01e4\064\036\065\053\001\002\000\010\017" +
    "\u01e7\025\u01e6\030\u01e5\001\002\000\004\062\u01ea\001\002" +
    "\000\004\062\u01e9\001\002\000\004\062\u01e8\001\002\000" +
    "\004\021\uff67\001\002\000\004\021\uff69\001\002\000\004" +
    "\021\uff68\001\002\000\004\021\uff7b\001\002\000\004\062" +
    "\u01ed\001\002\000\044\003\uff7c\005\uff7c\006\uff7c\013\uff7c" +
    "\015\uff7c\016\uff7c\017\uff7c\021\uff7c\024\uff7c\025\uff7c\026" +
    "\uff7c\050\uff7c\054\uff7c\056\uff7c\060\uff7c\064\uff7c\065\uff7c" +
    "\001\002\000\030\005\040\006\u01e1\013\u01d0\017\u01c8\021" +
    "\uff72\025\u01d2\050\045\054\030\056\u01e4\064\036\065\053" +
    "\001\002\000\004\021\uff73\001\002\000\004\021\uff75\001" +
    "\002\000\004\021\uff79\001\002\000\004\021\uff78\001\002" +
    "\000\004\021\uff74\001\002\000\004\021\uff76\001\002\000" +
    "\004\021\uff7a\001\002\000\004\021\uff77\001\002\000\004" +
    "\062\u01fa\001\002\000\030\003\u01d1\005\040\013\u01d0\017" +
    "\u01c8\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036" +
    "\065\053\001\002\000\012\003\uffbc\031\uffbc\033\uffbc\060" +
    "\uffbc\001\002\000\012\003\uffe1\031\uffe1\033\uffe1\060\uffe1" +
    "\001\002\000\004\014\u01fc\001\002\000\004\062\u01fd\001" +
    "\002\000\032\005\040\006\u0208\013\u01d0\015\u0200\016\u01fe" +
    "\017\u01c8\025\u01d2\050\045\054\030\056\u020a\064\036\065" +
    "\053\001\002\000\004\062\u0250\001\002\000\034\005\040" +
    "\006\u0208\013\u01d0\015\u0200\016\u01fe\017\u01c8\025\u01d2\050" +
    "\045\054\030\056\u020a\060\uffac\064\036\065\053\001\002" +
    "\000\012\026\057\027\063\064\060\065\053\001\002\000" +
    "\034\005\040\006\u0208\013\u01d0\015\u0200\016\u01fe\017\u01c8" +
    "\025\u01d2\050\045\054\030\056\u020a\060\uffaf\064\036\065" +
    "\053\001\002\000\034\005\040\006\u0208\013\u01d0\015\u0200" +
    "\016\u01fe\017\u01c8\025\u01d2\050\045\054\030\056\u020a\060" +
    "\uffab\064\036\065\053\001\002\000\034\005\040\006\u0208" +
    "\013\u01d0\015\u0200\016\u01fe\017\u01c8\025\u01d2\050\045\054" +
    "\030\056\u020a\060\uffa8\064\036\065\053\001\002\000\034" +
    "\005\040\006\u0208\013\u01d0\015\u0200\016\u01fe\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u020a\060\uffad\064\036\065\053" +
    "\001\002\000\034\005\040\006\u0208\013\u01d0\015\u0200\016" +
    "\u01fe\017\u01c8\025\u01d2\050\045\054\030\056\u020a\060\uffae" +
    "\064\036\065\053\001\002\000\034\005\040\006\u0208\013" +
    "\u01d0\015\u0200\016\u01fe\017\u01c8\025\u01d2\050\045\054\030" +
    "\056\u020a\060\uffaa\064\036\065\053\001\002\000\004\060" +
    "\u0210\001\002\000\004\062\u020e\001\002\000\034\005\040" +
    "\006\u0208\013\u01d0\015\u0200\016\u01fe\017\u01c8\025\u01d2\050" +
    "\045\054\030\056\u020a\060\uffa9\064\036\065\053\001\002" +
    "\000\004\030\u020b\001\002\000\004\062\u020c\001\002\000" +
    "\004\060\uffa7\001\002\000\004\060\uffb3\001\002\000\034" +
    "\005\040\006\u0208\013\u01d0\015\u0200\016\u01fe\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u020a\060\uffb0\064\036\065\053" +
    "\001\002\000\004\060\uffb1\001\002\000\004\013\u0211\001" +
    "\002\000\004\062\u0212\001\002\000\044\003\uffbb\005\uffbb" +
    "\006\uffbb\013\uffbb\015\uffbb\016\uffbb\017\uffbb\021\uffbb\024" +
    "\uffbb\025\uffbb\026\uffbb\050\uffbb\054\uffbb\056\uffbb\060\uffbb" +
    "\064\uffbb\065\uffbb\001\002\000\004\060\uffb5\001\002\000" +
    "\004\060\uffb8\001\002\000\004\060\uffb7\001\002\000\004" +
    "\060\uffb2\001\002\000\004\060\uffb4\001\002\000\004\060" +
    "\uffb9\001\002\000\004\014\u021b\001\002\000\004\060\uffa5" +
    "\001\002\000\004\062\u021c\001\002\000\032\005\040\006" +
    "\u0227\013\u01d0\015\u021e\016\u021d\017\u01c8\025\u01d2\050\045" +
    "\054\030\056\u0229\064\036\065\053\001\002\000\004\062" +
    "\u0237\001\002\000\012\026\057\027\063\064\060\065\053" +
    "\001\002\000\034\005\040\006\u0227\013\u01d0\015\u021e\016" +
    "\u021d\017\u01c8\025\u01d2\050\045\054\030\056\u0229\060\uff82" +
    "\064\036\065\053\001\002\000\034\005\040\006\u0227\013" +
    "\u01d0\015\u021e\016\u021d\017\u01c8\025\u01d2\050\045\054\030" +
    "\056\u0229\060\uff85\064\036\065\053\001\002\000\034\005" +
    "\040\006\u0227\013\u01d0\015\u021e\016\u021d\017\u01c8\025\u01d2" +
    "\050\045\054\030\056\u0229\060\uff81\064\036\065\053\001" +
    "\002\000\034\005\040\006\u0227\013\u01d0\015\u021e\016\u021d" +
    "\017\u01c8\025\u01d2\050\045\054\030\056\u0229\060\uff7e\064" +
    "\036\065\053\001\002\000\034\005\040\006\u0227\013\u01d0" +
    "\015\u021e\016\u021d\017\u01c8\025\u01d2\050\045\054\030\056" +
    "\u0229\060\uff83\064\036\065\053\001\002\000\034\005\040" +
    "\006\u0227\013\u01d0\015\u021e\016\u021d\017\u01c8\025\u01d2\050" +
    "\045\054\030\056\u0229\060\uff84\064\036\065\053\001\002" +
    "\000\034\005\040\006\u0227\013\u01d0\015\u021e\016\u021d\017" +
    "\u01c8\025\u01d2\050\045\054\030\056\u0229\060\uff80\064\036" +
    "\065\053\001\002\000\004\060\uffba\001\002\000\004\062" +
    "\u022d\001\002\000\034\005\040\006\u0227\013\u01d0\015\u021e" +
    "\016\u021d\017\u01c8\025\u01d2\050\045\054\030\056\u0229\060" +
    "\uff7f\064\036\065\053\001\002\000\004\030\u022a\001\002" +
    "\000\004\062\u022b\001\002\000\004\060\uff7d\001\002\000" +
    "\004\060\uff89\001\002\000\034\005\040\006\u0227\013\u01d0" +
    "\015\u021e\016\u021d\017\u01c8\025\u01d2\050\045\054\030\056" +
    "\u0229\060\uff86\064\036\065\053\001\002\000\004\060\uff87" +
    "\001\002\000\004\060\uff8b\001\002\000\004\060\uff90\001" +
    "\002\000\004\060\uff8f\001\002\000\004\060\uff88\001\002" +
    "\000\004\060\uff8a\001\002\000\004\060\uff91\001\002\000" +
    "\004\060\uff8e\001\002\000\004\060\uff8c\001\002\000\026" +
    "\005\040\006\u0240\013\u01d0\017\u01c8\025\u01d2\050\045\054" +
    "\030\056\u0242\064\036\065\053\001\002\000\004\060\uff8d" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff97\064\036\065\053" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff9a\064\036\065\053" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff96\064\036\065\053" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff93\064\036\065\053" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff98\064\036\065\053" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff99\064\036\065\053" +
    "\001\002\000\030\005\040\006\u0240\013\u01d0\017\u01c8\025" +
    "\u01d2\050\045\054\030\056\u0242\060\uff95\064\036\065\053" +
    "\001\002\000\004\062\u0246\001\002\000\030\005\040\006" +
    "\u0240\013\u01d0\017\u01c8\025\u01d2\050\045\054\030\056\u0242" +
    "\060\uff94\064\036\065\053\001\002\000\004\030\u0243\001" +
    "\002\000\004\062\u0244\001\002\000\004\060\uff92\001\002" +
    "\000\004\060\uff9e\001\002\000\030\005\040\006\u0240\013" +
    "\u01d0\017\u01c8\025\u01d2\050\045\054\030\056\u0242\060\uff9b" +
    "\064\036\065\053\001\002\000\004\060\uff9c\001\002\000" +
    "\004\060\uffa0\001\002\000\004\060\uffa3\001\002\000\004" +
    "\060\uffa2\001\002\000\004\060\uff9d\001\002\000\004\060" +
    "\uff9f\001\002\000\004\060\uffa4\001\002\000\004\060\uffa1" +
    "\001\002\000\004\060\uffb6\001\002\000\026\005\040\006" +
    "\u0240\013\u01d0\017\u01c8\025\u01d2\050\045\054\030\056\u0242" +
    "\064\036\065\053\001\002\000\004\060\uffa6\001\002\000" +
    "\004\062\u0255\001\002\000\004\062\u0254\001\002\000\012" +
    "\003\uffe0\031\uffe0\033\uffe0\060\uffe0\001\002\000\012\003" +
    "\uffe2\031\uffe2\033\uffe2\060\uffe2\001\002\000\012\003\uffbf" +
    "\031\uffbf\033\uffbf\060\uffbf\001\002\000\012\003\uffc3\031" +
    "\uffc3\033\uffc3\060\uffc3\001\002\000\012\003\uffc2\031\uffc2" +
    "\033\uffc2\060\uffc2\001\002\000\012\003\uffc5\031\uffc5\033" +
    "\uffc5\060\uffc5\001\002\000\004\047\u025b\001\002\000\006" +
    "\064\060\065\053\001\002\000\004\020\u025d\001\002\000" +
    "\010\050\045\064\060\065\053\001\002\000\026\005\040" +
    "\006\u026a\013\u01d0\017\u01c8\025\u01d2\050\045\054\030\056" +
    "\u026d\064\036\065\053\001\002\000\020\023\u0260\035\106" +
    "\036\104\037\102\040\100\041\101\042\105\001\002\000" +
    "\006\036\312\065\311\001\002\000\004\062\u0262\001\002" +
    "\000\026\005\040\006\u026a\013\u01d0\017\u01c8\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff55\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff58\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff54\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff5a\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff56\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff57\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\030" +
    "\005\040\006\u026a\013\u01d0\017\u01c8\024\uff53\025\u01d2\050" +
    "\045\054\030\056\u026d\064\036\065\053\001\002\000\004" +
    "\062\u0278\001\002\000\004\024\u0275\001\002\000\030\005" +
    "\040\006\u026a\013\u01d0\017\u01c8\024\uff59\025\u01d2\050\045" +
    "\054\030\056\u026d\064\036\065\053\001\002\000\010\017" +
    "\u0270\025\u026f\030\u026e\001\002\000\004\062\u0273\001\002" +
    "\000\004\062\u0272\001\002\000\004\062\u0271\001\002\000" +
    "\004\024\uff50\001\002\000\004\024\uff52\001\002\000\004" +
    "\024\uff51\001\002\000\004\024\uff63\001\002\000\004\064" +
    "\u0276\001\002\000\004\062\u0277\001\002\000\044\003\uff66" +
    "\005\uff66\006\uff66\013\uff66\015\uff66\016\uff66\017\uff66\021" +
    "\uff66\024\uff66\025\uff66\026\uff66\050\uff66\054\uff66\056\uff66" +
    "\060\uff66\064\uff66\065\uff66\001\002\000\030\005\040\006" +
    "\u026a\013\u01d0\017\u01c8\024\uff5b\025\u01d2\050\045\054\030" +
    "\056\u026d\064\036\065\053\001\002\000\004\024\uff5c\001" +
    "\002\000\004\024\uff5d\001\002\000\004\024\uff61\001\002" +
    "\000\004\024\uff60\001\002\000\004\024\uff64\001\002\000" +
    "\004\024\uff5e\001\002\000\004\024\uff62\001\002\000\004" +
    "\024\uff5f\001\002\000\004\024\u0282\001\002\000\004\064" +
    "\u0283\001\002\000\004\062\u0284\001\002\000\044\003\uff65" +
    "\005\uff65\006\uff65\013\uff65\015\uff65\016\uff65\017\uff65\021" +
    "\uff65\024\uff65\025\uff65\026\uff65\050\uff65\054\uff65\056\uff65" +
    "\060\uff65\064\uff65\065\uff65\001\002\000\012\003\uffc0\031" +
    "\uffc0\033\uffc0\060\uffc0\001\002\000\012\003\uffc4\031\uffc4" +
    "\033\uffc4\060\uffc4\001\002\000\012\003\uffc1\031\uffc1\033" +
    "\uffc1\060\uffc1\001\002\000\004\062\u028b\001\002\000\004" +
    "\062\u028a\001\002\000\020\002\uffe5\003\uffe5\026\uffe5\031" +
    "\uffe5\033\uffe5\060\uffe5\064\uffe5\001\002\000\020\002\uffe3" +
    "\003\uffe3\026\uffe3\031\uffe3\033\uffe3\060\uffe3\064\uffe3\001" +
    "\002\000\020\002\uffd4\003\uffd4\026\uffd4\031\uffd4\033\uffd4" +
    "\060\uffd4\064\uffd4\001\002\000\020\002\uffd2\003\uffd2\026" +
    "\uffd2\031\uffd2\033\uffd2\060\uffd2\064\uffd2\001\002\000\020" +
    "\002\uff49\003\uff49\026\uff49\031\uff49\033\uff49\060\uff49\064" +
    "\uff49\001\002\000\020\002\uff4d\003\uff4d\026\uff4d\031\uff4d" +
    "\033\uff4d\060\uff4d\064\uff4d\001\002\000\006\004\u0292\057" +
    "\u0291\001\002\000\004\050\u029a\001\002\000\004\050\u0293" +
    "\001\002\000\006\063\u0295\064\u0294\001\002\000\004\051" +
    "\u0298\001\002\000\004\051\u0296\001\002\000\004\062\u0297" +
    "\001\002\000\044\003\uff03\005\uff03\006\uff03\013\uff03\015" +
    "\uff03\016\uff03\017\uff03\021\uff03\024\uff03\025\uff03\026\uff03" +
    "\050\uff03\054\uff03\056\uff03\060\uff03\064\uff03\065\uff03\001" +
    "\002\000\004\062\u0299\001\002\000\044\003\uff02\005\uff02" +
    "\006\uff02\013\uff02\015\uff02\016\uff02\017\uff02\021\uff02\024" +
    "\uff02\025\uff02\026\uff02\050\uff02\054\uff02\056\uff02\060\uff02" +
    "\064\uff02\065\uff02\001\002\000\004\051\u029b\001\002\000" +
    "\004\062\u029c\001\002\000\044\003\uff32\005\uff32\006\uff32" +
    "\013\uff32\015\uff32\016\uff32\017\uff32\021\uff32\024\uff32\025" +
    "\uff32\026\uff32\050\uff32\054\uff32\056\uff32\060\uff32\064\uff32" +
    "\065\uff32\001\002\000\020\002\uff4c\003\uff4c\026\uff4c\031" +
    "\uff4c\033\uff4c\060\uff4c\064\uff4c\001\002\000\004\064\u02c0" +
    "\001\002\000\012\050\u02b7\051\u02b6\064\060\065\053\001" +
    "\002\000\006\052\u02b1\062\u02b0\001\002\000\020\005\u02a4" +
    "\026\057\027\063\050\045\063\u02a7\064\u02a5\065\053\001" +
    "\002\000\004\062\u02af\001\002\000\020\035\106\036\104" +
    "\037\102\040\100\041\101\042\105\062\uff3e\001\002\000" +
    "\004\053\u02aa\001\002\000\026\035\uff26\036\uff26\037\uff26" +
    "\040\uff26\041\uff26\042\uff26\050\u029f\062\uff26\064\060\065" +
    "\053\001\002\000\044\003\uff34\005\uff34\006\uff34\013\uff34" +
    "\015\uff34\016\uff34\017\uff34\021\uff34\024\uff34\025\uff34\026" +
    "\uff34\050\uff34\054\uff34\056\uff34\060\uff34\064\uff34\065\uff34" +
    "\001\002\000\004\062\uff3d\001\002\000\044\003\uff35\005" +
    "\uff35\006\uff35\013\uff35\015\uff35\016\uff35\017\uff35\021\uff35" +
    "\024\uff35\025\uff35\026\uff35\050\uff35\054\uff35\056\uff35\060" +
    "\uff35\064\uff35\065\uff35\001\002\000\004\062\uff3f\001\002" +
    "\000\004\057\u02ab\001\002\000\004\050\u02ac\001\002\000" +
    "\004\051\u02ad\001\002\000\004\062\u02ae\001\002\000\044" +
    "\003\uff33\005\uff33\006\uff33\013\uff33\015\uff33\016\uff33\017" +
    "\uff33\021\uff33\024\uff33\025\uff33\026\uff33\050\uff33\054\uff33" +
    "\056\uff33\060\uff33\064\uff33\065\uff33\001\002\000\044\003" +
    "\uff36\005\uff36\006\uff36\013\uff36\015\uff36\016\uff36\017\uff36" +
    "\021\uff36\024\uff36\025\uff36\026\uff36\050\uff36\054\uff36\056" +
    "\uff36\060\uff36\064\uff36\065\uff36\001\002\000\044\003\uff06" +
    "\005\uff06\006\uff06\013\uff06\015\uff06\016\uff06\017\uff06\021" +
    "\uff06\024\uff06\025\uff06\026\uff06\050\uff06\054\uff06\056\uff06" +
    "\060\uff06\064\uff06\065\uff06\001\002\000\006\064\060\065" +
    "\053\001\002\000\004\062\u02b3\001\002\000\044\003\uff07" +
    "\005\uff07\006\uff07\013\uff07\015\uff07\016\uff07\017\uff07\021" +
    "\uff07\024\uff07\025\uff07\026\uff07\050\uff07\054\uff07\056\uff07" +
    "\060\uff07\064\uff07\065\uff07\001\002\000\006\052\u02b1\062" +
    "\uff0a\001\002\000\004\062\uff0b\001\002\000\004\062\u02bf" +
    "\001\002\000\006\064\060\065\053\001\002\000\006\052" +
    "\u02b1\062\u02b9\001\002\000\044\003\uff09\005\uff09\006\uff09" +
    "\013\uff09\015\uff09\016\uff09\017\uff09\021\uff09\024\uff09\025" +
    "\uff09\026\uff09\050\uff09\054\uff09\056\uff09\060\uff09\064\uff09" +
    "\065\uff09\001\002\000\004\062\u02bb\001\002\000\044\003" +
    "\uff04\005\uff04\006\uff04\013\uff04\015\uff04\016\uff04\017\uff04" +
    "\021\uff04\024\uff04\025\uff04\026\uff04\050\uff04\054\uff04\056" +
    "\uff04\060\uff04\064\uff04\065\uff04\001\002\000\004\051\u02bd" +
    "\001\002\000\004\062\u02be\001\002\000\044\003\uff05\005" +
    "\uff05\006\uff05\013\uff05\015\uff05\016\uff05\017\uff05\021\uff05" +
    "\024\uff05\025\uff05\026\uff05\050\uff05\054\uff05\056\uff05\060" +
    "\uff05\064\uff05\065\uff05\001\002\000\044\003\uff08\005\uff08" +
    "\006\uff08\013\uff08\015\uff08\016\uff08\017\uff08\021\uff08\024" +
    "\uff08\025\uff08\026\uff08\050\uff08\054\uff08\056\uff08\060\uff08" +
    "\064\uff08\065\uff08\001\002\000\004\047\u02c1\001\002\000" +
    "\016\005\u02c4\026\057\027\063\063\u02a7\064\060\065\053" +
    "\001\002\000\004\062\u02ca\001\002\000\004\062\uff3e\001" +
    "\002\000\004\053\u02c5\001\002\000\004\057\u02c6\001\002" +
    "\000\004\050\u02c7\001\002\000\004\051\u02c8\001\002\000" +
    "\004\062\u02c9\001\002\000\044\003\uff31\005\uff31\006\uff31" +
    "\013\uff31\015\uff31\016\uff31\017\uff31\021\uff31\024\uff31\025" +
    "\uff31\026\uff31\050\uff31\054\uff31\056\uff31\060\uff31\064\uff31" +
    "\065\uff31\001\002\000\044\003\uff37\005\uff37\006\uff37\013" +
    "\uff37\015\uff37\016\uff37\017\uff37\021\uff37\024\uff37\025\uff37" +
    "\026\uff37\050\uff37\054\uff37\056\uff37\060\uff37\064\uff37\065" +
    "\uff37\001\002\000\004\047\u02cc\001\002\000\006\064\060" +
    "\065\053\001\002\000\004\020\u02ce\001\002\000\010\050" +
    "\045\064\060\065\053\001\002\000\026\005\040\006\u02db" +
    "\013\u02dd\017\034\025\u02de\050\045\054\030\056\u02e0\064" +
    "\036\065\053\001\002\000\020\023\u02d1\035\106\036\104" +
    "\037\102\040\100\041\101\042\105\001\002\000\006\036" +
    "\312\065\311\001\002\000\004\062\u02d3\001\002\000\026" +
    "\005\040\006\u02db\013\u02dd\017\034\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\030\005\040" +
    "\006\u02db\013\u02dd\017\034\024\ufeb9\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\030\005\040" +
    "\006\u02db\013\u02dd\017\034\024\ufeb5\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\030\005\040" +
    "\006\u02db\013\u02dd\017\034\024\ufeb4\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\030\005\040" +
    "\006\u02db\013\u02dd\017\034\024\ufeb6\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\030\005\040" +
    "\006\u02db\013\u02dd\017\034\024\ufeb7\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\030\005\040" +
    "\006\u02db\013\u02dd\017\034\024\ufeb3\025\u02de\050\045\054" +
    "\030\056\u02e0\064\036\065\053\001\002\000\004\024\u035c" +
    "\001\002\000\004\062\u035a\001\002\000\030\005\040\006" +
    "\u02db\013\u02dd\017\034\024\ufeb2\025\u02de\050\045\054\030" +
    "\056\u02e0\064\036\065\053\001\002\000\012\026\057\027" +
    "\063\064\060\065\053\001\002\000\004\022\u02e4\001\002" +
    "\000\030\005\040\006\u02db\013\u02dd\017\034\024\ufeb8\025" +
    "\u02de\050\045\054\030\056\u02e0\064\036\065\053\001\002" +
    "\000\004\017\u02e1\001\002\000\004\062\u02e2\001\002\000" +
    "\004\024\ufeb1\001\002\000\004\024\ufec2\001\002\000\012" +
    "\026\057\027\063\064\060\065\053\001\002\000\004\062" +
    "\u02e6\001\002\000\026\005\040\006\u02ed\013\u02dd\017\034" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe66" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe63" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe62" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe64" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe61" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe65" +
    "\025\u02de\050\045\054\030\056\u02f1\064\036\065\053\001" +
    "\002\000\004\062\u02fa\001\002\000\004\021\u02f8\001\002" +
    "\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe5f\025" +
    "\u02de\050\045\054\030\056\u02f1\064\036\065\053\001\002" +
    "\000\030\005\040\006\u02ed\013\u02dd\017\034\021\ufe60\025" +
    "\u02de\050\045\054\030\056\u02f1\064\036\065\053\001\002" +
    "\000\006\017\u02f3\025\u02f2\001\002\000\004\062\u02f5\001" +
    "\002\000\004\062\u02f4\001\002\000\004\021\ufe5d\001\002" +
    "\000\004\021\ufe5e\001\002\000\004\021\ufe69\001\002\000" +
    "\004\021\ufe6a\001\002\000\004\062\u02f9\001\002\000\040" +
    "\005\ufe71\006\ufe71\013\ufe71\015\ufe71\016\ufe71\017\ufe71\021" +
    "\ufe71\024\ufe71\025\ufe71\050\ufe71\054\ufe71\056\ufe71\060\ufe71" +
    "\064\ufe71\065\ufe71\001\002\000\030\005\040\006\u02ed\013" +
    "\u02dd\017\034\021\ufe67\025\u02de\050\045\054\030\056\u02f1" +
    "\064\036\065\053\001\002\000\004\021\ufe68\001\002\000" +
    "\004\021\ufe6f\001\002\000\004\021\ufe6b\001\002\000\004" +
    "\021\ufe6e\001\002\000\004\021\ufe6c\001\002\000\004\021" +
    "\ufe6d\001\002\000\004\021\ufe70\001\002\000\004\014\u0303" +
    "\001\002\000\004\062\u0304\001\002\000\032\005\040\006" +
    "\u030e\013\u02dd\015\u0308\016\u0305\017\034\025\u02de\050\045" +
    "\054\030\056\u0311\064\036\065\053\001\002\000\004\062" +
    "\u0357\001\002\000\034\005\040\006\u030e\013\u02dd\015\u0308" +
    "\016\u0305\017\034\025\u02de\050\045\054\030\056\u0311\060" +
    "\ufe9e\064\036\065\053\001\002\000\034\005\040\006\u030e" +
    "\013\u02dd\015\u0308\016\u0305\017\034\025\u02de\050\045\054" +
    "\030\056\u0311\060\ufea1\064\036\065\053\001\002\000\012" +
    "\026\057\027\063\064\060\065\053\001\002\000\034\005" +
    "\040\006\u030e\013\u02dd\015\u0308\016\u0305\017\034\025\u02de" +
    "\050\045\054\030\056\u0311\060\ufea0\064\036\065\053\001" +
    "\002\000\034\005\040\006\u030e\013\u02dd\015\u0308\016\u0305" +
    "\017\034\025\u02de\050\045\054\030\056\u0311\060\ufea2\064" +
    "\036\065\053\001\002\000\034\005\040\006\u030e\013\u02dd" +
    "\015\u0308\016\u0305\017\034\025\u02de\050\045\054\030\056" +
    "\u0311\060\ufea3\064\036\065\053\001\002\000\034\005\040" +
    "\006\u030e\013\u02dd\015\u0308\016\u0305\017\034\025\u02de\050" +
    "\045\054\030\056\u0311\060\ufe9f\064\036\065\053\001\002" +
    "\000\004\060\u0318\001\002\000\004\062\u0316\001\002\000" +
    "\034\005\040\006\u030e\013\u02dd\015\u0308\016\u0305\017\034" +
    "\025\u02de\050\045\054\030\056\u0311\060\ufe9d\064\036\065" +
    "\053\001\002\000\034\005\040\006\u030e\013\u02dd\015\u0308" +
    "\016\u0305\017\034\025\u02de\050\045\054\030\056\u0311\060" +
    "\ufea4\064\036\065\053\001\002\000\004\017\u0312\001\002" +
    "\000\004\062\u0313\001\002\000\004\060\ufe9c\001\002\000" +
    "\004\060\ufeae\001\002\000\004\060\ufea7\001\002\000\034" +
    "\005\040\006\u030e\013\u02dd\015\u0308\016\u0305\017\034\025" +
    "\u02de\050\045\054\030\056\u0311\060\ufea5\064\036\065\053" +
    "\001\002\000\004\060\ufea6\001\002\000\004\013\u0319\001" +
    "\002\000\004\062\u031a\001\002\000\040\005\ufeb0\006\ufeb0" +
    "\013\ufeb0\015\ufeb0\016\ufeb0\017\ufeb0\021\ufeb0\024\ufeb0\025" +
    "\ufeb0\050\ufeb0\054\ufeb0\056\ufeb0\060\ufeb0\064\ufeb0\065\ufeb0" +
    "\001\002\000\004\060\ufeaa\001\002\000\004\060\ufead\001" +
    "\002\000\004\060\ufeac\001\002\000\004\060\ufea9\001\002" +
    "\000\004\014\u0321\001\002\000\004\060\ufe9a\001\002\000" +
    "\004\062\u0322\001\002\000\032\005\040\006\u032b\013\u02dd" +
    "\015\u0325\016\u0323\017\034\025\u02de\050\045\054\030\056" +
    "\u032f\064\036\065\053\001\002\000\004\062\u033d\001\002" +
    "\000\034\005\040\006\u032b\013\u02dd\015\u0325\016\u0323\017" +
    "\034\025\u02de\050\045\054\030\056\u032f\060\ufe87\064\036" +
    "\065\053\001\002\000\012\026\057\027\063\064\060\065" +
    "\053\001\002\000\034\005\040\006\u032b\013\u02dd\015\u0325" +
    "\016\u0323\017\034\025\u02de\050\045\054\030\056\u032f\060" +
    "\ufe8a\064\036\065\053\001\002\000\034\005\040\006\u032b" +
    "\013\u02dd\015\u0325\016\u0323\017\034\025\u02de\050\045\054" +
    "\030\056\u032f\060\ufe89\064\036\065\053\001\002\000\034" +
    "\005\040\006\u032b\013\u02dd\015\u0325\016\u0323\017\034\025" +
    "\u02de\050\045\054\030\056\u032f\060\ufe8b\064\036\065\053" +
    "\001\002\000\034\005\040\006\u032b\013\u02dd\015\u0325\016" +
    "\u0323\017\034\025\u02de\050\045\054\030\056\u032f\060\ufe8c" +
    "\064\036\065\053\001\002\000\034\005\040\006\u032b\013" +
    "\u02dd\015\u0325\016\u0323\017\034\025\u02de\050\045\054\030" +
    "\056\u032f\060\ufe88\064\036\065\053\001\002\000\004\062" +
    "\u0334\001\002\000\034\005\040\006\u032b\013\u02dd\015\u0325" +
    "\016\u0323\017\034\025\u02de\050\045\054\030\056\u032f\060" +
    "\ufe86\064\036\065\053\001\002\000\004\060\ufeaf\001\002" +
    "\000\034\005\040\006\u032b\013\u02dd\015\u0325\016\u0323\017" +
    "\034\025\u02de\050\045\054\030\056\u032f\060\ufe8d\064\036" +
    "\065\053\001\002\000\004\017\u0330\001\002\000\004\062" +
    "\u0331\001\002\000\004\060\ufe85\001\002\000\004\060\ufe99" +
    "\001\002\000\004\060\ufe90\001\002\000\034\005\040\006" +
    "\u032b\013\u02dd\015\u0325\016\u0323\017\034\025\u02de\050\045" +
    "\054\030\056\u032f\060\ufe8e\064\036\065\053\001\002\000" +
    "\004\060\ufe8f\001\002\000\004\060\ufe93\001\002\000\004" +
    "\060\ufe98\001\002\000\004\060\ufe97\001\002\000\004\060" +
    "\ufe92\001\002\000\004\060\ufe96\001\002\000\004\060\ufe94" +
    "\001\002\000\004\060\ufe91\001\002\000\026\005\040\006" +
    "\u0344\013\u02dd\017\034\025\u02de\050\045\054\030\056\u0348" +
    "\064\036\065\053\001\002\000\030\005\040\006\u0344\013" +
    "\u02dd\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe74" +
    "\064\036\065\053\001\002\000\030\005\040\006\u0344\013" +
    "\u02dd\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe77" +
    "\064\036\065\053\001\002\000\030\005\040\006\u0344\013" +
    "\u02dd\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe76" +
    "\064\036\065\053\001\002\000\030\005\040\006\u0344\013" +
    "\u02dd\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe78" +
    "\064\036\065\053\001\002\000\030\005\040\006\u0344\013" +
    "\u02dd\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe79" +
    "\064\036\065\053\001\002\000\030\005\040\006\u0344\013" +
    "\u02dd\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe75" +
    "\064\036\065\053\001\002\000\004\062\u034d\001\002\000" +
    "\004\060\ufe95\001\002\000\030\005\040\006\u0344\013\u02dd" +
    "\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe73\064" +
    "\036\065\053\001\002\000\030\005\040\006\u0344\013\u02dd" +
    "\017\034\025\u02de\050\045\054\030\056\u0348\060\ufe7a\064" +
    "\036\065\053\001\002\000\004\017\u0349\001\002\000\004" +
    "\062\u034a\001\002\000\004\060\ufe72\001\002\000\004\060" +
    "\ufe84\001\002\000\004\060\ufe7d\001\002\000\030\005\040" +
    "\006\u0344\013\u02dd\017\034\025\u02de\050\045\054\030\056" +
    "\u0348\060\ufe7b\064\036\065\053\001\002\000\004\060\ufe7c" +
    "\001\002\000\004\060\ufe80\001\002\000\004\060\ufe83\001" +
    "\002\000\004\060\ufe82\001\002\000\004\060\ufe7f\001\002" +
    "\000\004\060\ufe81\001\002\000\004\060\ufe7e\001\002\000" +
    "\004\060\ufeab\001\002\000\004\060\ufea8\001\002\000\026" +
    "\005\040\006\u0344\013\u02dd\017\034\025\u02de\050\045\054" +
    "\030\056\u0348\064\036\065\053\001\002\000\004\060\ufe9b" +
    "\001\002\000\004\024\ufebc\001\002\000\030\005\040\006" +
    "\u02db\013\u02dd\017\034\024\ufeba\025\u02de\050\045\054\030" +
    "\056\u02e0\064\036\065\053\001\002\000\004\024\ufebb\001" +
    "\002\000\004\064\u035d\001\002\000\004\062\u035e\001\002" +
    "\000\044\003\ufec5\005\ufec5\006\ufec5\013\ufec5\015\ufec5\016" +
    "\ufec5\017\ufec5\021\ufec5\024\ufec5\025\ufec5\026\ufec5\050\ufec5" +
    "\054\ufec5\056\ufec5\060\ufec5\064\ufec5\065\ufec5\001\002\000" +
    "\004\024\ufebd\001\002\000\004\024\ufec1\001\002\000\004" +
    "\024\ufec0\001\002\000\004\024\ufebe\001\002\000\004\024" +
    "\ufebf\001\002\000\004\024\ufec3\001\002\000\004\024\u0366" +
    "\001\002\000\004\064\u0367\001\002\000\004\062\u0368\001" +
    "\002\000\044\003\ufec4\005\ufec4\006\ufec4\013\ufec4\015\ufec4" +
    "\016\ufec4\017\ufec4\021\ufec4\024\ufec4\025\ufec4\026\ufec4\050" +
    "\ufec4\054\ufec4\056\ufec4\060\ufec4\064\ufec4\065\ufec4\001\002" +
    "\000\020\002\uff4a\003\uff4a\026\uff4a\031\uff4a\033\uff4a\060" +
    "\uff4a\064\uff4a\001\002\000\020\002\uff48\003\uff48\026\uff48" +
    "\031\uff48\033\uff48\060\uff48\064\uff48\001\002\000\020\002" +
    "\uff4b\003\uff4b\026\uff4b\031\uff4b\033\uff4b\060\uff4b\064\uff4b" +
    "\001\002\000\006\047\u036e\055\u036d\001\002\000\010\007" +
    "\u0184\010\u0186\011\u0185\001\002\000\016\026\057\027\063" +
    "\050\045\063\u02a7\064\060\065\053\001\002\000\004\062" +
    "\u0371\001\002\000\044\003\uff38\005\uff38\006\uff38\013\uff38" +
    "\015\uff38\016\uff38\017\uff38\021\uff38\024\uff38\025\uff38\026" +
    "\uff38\050\uff38\054\uff38\056\uff38\060\uff38\064\uff38\065\uff38" +
    "\001\002\000\044\003\uff39\005\uff39\006\uff39\013\uff39\015" +
    "\uff39\016\uff39\017\uff39\021\uff39\024\uff39\025\uff39\026\uff39" +
    "\050\uff39\054\uff39\056\uff39\060\uff39\064\uff39\065\uff39\001" +
    "\002\000\006\047\u0374\062\u0373\001\002\000\044\003\uff3c" +
    "\005\uff3c\006\uff3c\013\uff3c\015\uff3c\016\uff3c\017\uff3c\021" +
    "\uff3c\024\uff3c\025\uff3c\026\uff3c\050\uff3c\054\uff3c\056\uff3c" +
    "\060\uff3c\064\uff3c\065\uff3c\001\002\000\014\026\057\027" +
    "\063\063\u02a7\064\u02a5\065\053\001\002\000\004\062\u0377" +
    "\001\002\000\044\003\uff3a\005\uff3a\006\uff3a\013\uff3a\015" +
    "\uff3a\016\uff3a\017\uff3a\021\uff3a\024\uff3a\025\uff3a\026\uff3a" +
    "\050\uff3a\054\uff3a\056\uff3a\060\uff3a\064\uff3a\065\uff3a\001" +
    "\002\000\044\003\uff3b\005\uff3b\006\uff3b\013\uff3b\015\uff3b" +
    "\016\uff3b\017\uff3b\021\uff3b\024\uff3b\025\uff3b\026\uff3b\050" +
    "\uff3b\054\uff3b\056\uff3b\060\uff3b\064\uff3b\065\uff3b\001\002" +
    "\000\020\002\uff4f\003\uff4f\026\uff4f\031\uff4f\033\uff4f\060" +
    "\uff4f\064\uff4f\001\002\000\004\051\u0381\001\002\000\006" +
    "\003\u037c\051\u037b\001\002\000\004\062\u037f\001\002\000" +
    "\004\062\u037d\001\002\000\030\003\051\005\040\013\047" +
    "\017\034\025\052\026\004\050\045\054\030\060\046\064" +
    "\036\065\053\001\002\000\004\002\uffe6\001\002\000\030" +
    "\003\051\005\040\013\047\017\034\025\052\026\004\050" +
    "\045\054\030\060\046\064\036\065\053\001\002\000\004" +
    "\002\uffea\001\002\000\004\062\u0382\001\002\000\030\003" +
    "\051\005\040\013\047\017\034\025\052\026\004\050\045" +
    "\054\030\060\046\064\036\065\053\001\002\000\004\002" +
    "\uffe7\001\002\000\006\003\u0397\064\u0396\001\002\000\004" +
    "\064\u038d\001\002\000\006\003\u0388\064\u0387\001\002\000" +
    "\004\062\u038b\001\002\000\004\062\u0389\001\002\000\014" +
    "\003\u016d\026\004\033\u0170\060\u016f\064\u016c\001\002\000" +
    "\012\003\ufff0\031\ufff0\033\ufff0\060\ufff0\001\002\000\014" +
    "\003\u016d\026\004\033\u0170\060\u016f\064\u016c\001\002\000" +
    "\012\003\ufff3\031\ufff3\033\ufff3\060\ufff3\001\002\000\006" +
    "\050\u038f\062\u038e\001\002\000\014\003\u016d\026\004\033" +
    "\u0170\060\u016f\064\u016c\001\002\000\012\012\u017b\051\u017a" +
    "\052\u017c\064\u0179\001\002\000\006\055\u0391\062\u019e\001" +
    "\002\000\010\007\u0184\010\u0186\011\u0185\001\002\000\004" +
    "\062\u0393\001\002\000\030\003\u01d1\005\040\013\u01d0\017" +
    "\u01c8\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036" +
    "\065\053\001\002\000\012\003\ufff7\031\ufff7\033\ufff7\060" +
    "\ufff7\001\002\000\012\003\ufff1\031\ufff1\033\ufff1\060\ufff1" +
    "\001\002\000\006\003\u039e\050\u039f\001\002\000\004\050" +
    "\u0398\001\002\000\012\012\u017b\051\u017a\052\u017c\064\u0179" +
    "\001\002\000\004\055\u039a\001\002\000\010\007\u0184\010" +
    "\u0186\011\u0185\001\002\000\004\062\u039c\001\002\000\030" +
    "\003\u01d1\005\040\013\u01d0\017\u01c8\025\u01d2\026\004\050" +
    "\045\054\030\060\u01cf\064\036\065\053\001\002\000\012" +
    "\003\ufff6\031\ufff6\033\ufff6\060\ufff6\001\002\000\012\012" +
    "\u017b\051\u017a\052\u017c\064\u0179\001\002\000\012\012\u017b" +
    "\051\u017a\052\u017c\064\u0179\001\002\000\006\003\u03a1\055" +
    "\u03a2\001\002\000\010\007\u0184\010\u0186\011\u0185\001\002" +
    "\000\010\007\u0184\010\u0186\011\u0185\001\002\000\004\062" +
    "\u03a4\001\002\000\030\003\u01d1\005\040\013\u01d0\017\u01c8" +
    "\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036\065" +
    "\053\001\002\000\012\003\ufff9\031\ufff9\033\ufff9\060\ufff9" +
    "\001\002\000\004\062\u03a7\001\002\000\030\003\u01d1\005" +
    "\040\013\u01d0\017\u01c8\025\u01d2\026\004\050\045\054\030" +
    "\060\u01cf\064\036\065\053\001\002\000\012\003\ufff4\031" +
    "\ufff4\033\ufff4\060\ufff4\001\002\000\004\055\u03aa\001\002" +
    "\000\010\007\u0184\010\u0186\011\u0185\001\002\000\004\062" +
    "\u03ac\001\002\000\030\003\u01d1\005\040\013\u01d0\017\u01c8" +
    "\025\u01d2\026\004\050\045\054\030\060\u01cf\064\036\065" +
    "\053\001\002\000\012\003\ufff5\031\ufff5\033\ufff5\060\ufff5" +
    "\001\002\000\004\050\u03b1\001\002\000\010\003\013\031" +
    "\017\033\016\001\002\000\004\002\uffd5\001\002\000\004" +
    "\051\u03b2\001\002\000\004\062\u03b3\001\002\000\030\003" +
    "\051\005\040\013\047\017\034\025\052\026\004\050\045" +
    "\054\030\060\046\064\036\065\053\001\002\000\004\002" +
    "\uffe9\001\002\000\004\002\uffd9\001\002\000\004\002\uffd7" +
    "\001\002\000\004\064\u03bf\001\002\000\006\003\u03ba\064" +
    "\u03b9\001\002\000\004\062\u03bd\001\002\000\004\062\u03bb" +
    "\001\002\000\010\003\013\031\017\033\016\001\002\000" +
    "\004\002\ufffd\001\002\000\010\003\013\031\017\033\016" +
    "\001\002\000\004\002\000\001\002\000\004\062\u03c0\001" +
    "\002\000\010\003\013\031\017\033\016\001\002\000\004" +
    "\002\ufffe\001\002\000\010\003\013\031\017\033\016\001" +
    "\002\000\004\064\u03c4\001\002\000\004\062\u03c5\001\002" +
    "\000\010\003\013\031\017\033\016\001\002\000\004\002" +
    "\uffff\001\002\000\004\002\ufffb\001\002\000\004\002\001" +
    "\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u03c6\000\006\050\004\060\007\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\002\013\042\014\070\011\071\017\072\010\001" +
    "\001\000\014\002\u03b5\042\014\070\011\071\017\072\010" +
    "\001\001\000\014\002\u03b4\042\014\070\011\071\017\072" +
    "\010\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\002" +
    "\020\042\014\070\011\071\017\072\010\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\004\040\005\030\006\032" +
    "\012\034\014\047\022\026\025\031\026\042\031\036\034" +
    "\041\044\043\060\053\001\001\000\032\004\040\005\030" +
    "\006\032\012\u0377\014\047\022\026\025\031\026\042\031" +
    "\036\034\041\044\043\060\053\001\001\000\002\001\001" +
    "\000\032\004\040\005\030\006\032\012\u036a\014\047\022" +
    "\026\025\031\026\042\031\036\034\041\044\043\060\053" +
    "\001\001\000\032\004\040\005\030\006\032\012\u0369\014" +
    "\047\022\026\025\031\026\042\031\036\034\041\044\043" +
    "\060\053\001\001\000\032\004\040\005\030\006\032\012" +
    "\u0368\014\047\022\026\025\031\026\042\031\036\034\041" +
    "\044\043\060\053\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\026\u029f\001\001\000\032\004\040\005\030" +
    "\006\032\012\u029c\014\047\022\026\025\031\026\042\031" +
    "\036\034\041\044\043\060\053\001\001\000\002\001\001" +
    "\000\032\004\040\005\030\006\032\012\u028e\014\047\022" +
    "\026\025\031\026\042\031\036\034\041\044\043\060\053" +
    "\001\001\000\032\004\040\005\030\006\032\012\u028d\014" +
    "\047\022\026\025\031\026\042\031\036\034\041\044\043" +
    "\060\053\001\001\000\004\035\305\001\001\000\014\043" +
    "\u015f\047\u015b\070\u015a\071\u015e\072\u0159\001\001\000\004" +
    "\026\u0156\001\001\000\002\001\001\000\010\010\061\021" +
    "\u0104\026\063\001\001\000\032\004\040\005\030\006\032" +
    "\012\u0103\014\047\022\026\025\031\026\042\031\036\034" +
    "\041\044\043\060\053\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\004\040\005\030\006" +
    "\032\012\054\014\047\022\026\025\031\026\042\031\036" +
    "\034\041\044\043\060\053\001\001\000\002\001\001\000" +
    "\010\010\061\021\060\026\063\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\064\001\001\000\006\010\073" +
    "\026\075\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\076\001\001\000" +
    "\002\001\001\000\004\035\102\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\026\106\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\026\112\032" +
    "\111\001\001\000\002\001\001\000\004\033\114\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\026\112\032" +
    "\116\001\001\000\002\001\001\000\026\004\125\005\120" +
    "\006\121\025\122\026\042\031\124\034\126\040\133\051" +
    "\131\057\127\001\001\000\026\004\125\005\120\006\121" +
    "\025\122\026\042\031\124\034\126\040\376\051\131\057" +
    "\127\001\001\000\026\004\125\005\120\006\121\025\122" +
    "\026\042\031\124\034\126\040\375\051\131\057\127\001" +
    "\001\000\026\004\125\005\120\006\121\025\122\026\042" +
    "\031\124\034\126\040\374\051\131\057\127\001\001\000" +
    "\002\001\001\000\026\004\125\005\120\006\121\025\122" +
    "\026\042\031\124\034\126\040\276\051\131\057\127\001" +
    "\001\000\026\004\125\005\120\006\121\025\122\026\042" +
    "\031\124\034\126\040\275\051\131\057\127\001\001\000" +
    "\026\004\125\005\120\006\121\025\122\026\042\031\124" +
    "\034\126\040\274\051\131\057\127\001\001\000\026\004" +
    "\125\005\120\006\121\025\122\026\042\031\124\034\126" +
    "\040\273\051\131\057\127\001\001\000\002\001\001\000" +
    "\026\004\125\005\120\006\121\025\122\026\042\031\124" +
    "\034\126\040\270\051\131\057\127\001\001\000\010\010" +
    "\061\021\141\026\063\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\004\152\005\146\006\147\025\150\026\042\031" +
    "\151\034\153\051\157\052\156\057\154\001\001\000\002" +
    "\001\001\000\012\010\061\021\201\026\063\055\200\001" +
    "\001\000\026\004\152\005\146\006\147\025\150\026\042" +
    "\031\151\034\153\051\157\052\177\057\154\001\001\000" +
    "\026\004\152\005\146\006\147\025\150\026\042\031\151" +
    "\034\153\051\157\052\176\057\154\001\001\000\026\004" +
    "\152\005\146\006\147\025\150\026\042\031\151\034\153" +
    "\051\157\052\175\057\154\001\001\000\026\004\152\005" +
    "\146\006\147\025\150\026\042\031\151\034\153\051\157" +
    "\052\174\057\154\001\001\000\026\004\152\005\146\006" +
    "\147\025\150\026\042\031\151\034\153\051\157\052\173" +
    "\057\154\001\001\000\026\004\152\005\146\006\147\025" +
    "\150\026\042\031\151\034\153\051\157\052\172\057\154" +
    "\001\001\000\026\004\152\005\146\006\147\025\150\026" +
    "\042\031\151\034\153\051\157\052\171\057\154\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\152\005" +
    "\146\006\147\025\150\026\042\031\151\034\153\051\157" +
    "\052\163\057\154\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\152\005" +
    "\146\006\147\025\150\026\042\031\151\034\153\051\157" +
    "\052\170\057\154\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\213\005\206\006\207\025\210\026\042\031\212\034" +
    "\214\051\217\054\211\057\215\001\001\000\002\001\001" +
    "\000\012\010\061\021\201\026\063\055\235\001\001\000" +
    "\026\004\213\005\206\006\207\025\210\026\042\031\212" +
    "\034\214\051\217\054\234\057\215\001\001\000\026\004" +
    "\213\005\206\006\207\025\210\026\042\031\212\034\214" +
    "\051\217\054\233\057\215\001\001\000\026\004\213\005" +
    "\206\006\207\025\210\026\042\031\212\034\214\051\217" +
    "\054\232\057\215\001\001\000\002\001\001\000\026\004" +
    "\213\005\206\006\207\025\210\026\042\031\212\034\214" +
    "\051\217\054\231\057\215\001\001\000\026\004\213\005" +
    "\206\006\207\025\210\026\042\031\212\034\214\051\217" +
    "\054\230\057\215\001\001\000\026\004\213\005\206\006" +
    "\207\025\210\026\042\031\212\034\214\051\217\054\227" +
    "\057\215\001\001\000\026\004\213\005\206\006\207\025" +
    "\210\026\042\031\212\034\214\051\217\054\226\057\215" +
    "\001\001\000\002\001\001\000\026\004\213\005\206\006" +
    "\207\025\210\026\042\031\212\034\214\051\217\054\223" +
    "\057\215\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\004\213\005\206" +
    "\006\207\025\210\026\042\031\212\034\214\051\217\054" +
    "\225\057\215\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\004\243\005\237\006\241\025\240\026" +
    "\042\031\242\034\244\051\247\053\251\057\245\001\001" +
    "\000\026\004\243\005\237\006\241\025\240\026\042\031" +
    "\242\034\244\051\247\053\265\057\245\001\001\000\026" +
    "\004\243\005\237\006\241\025\240\026\042\031\242\034" +
    "\244\051\247\053\264\057\245\001\001\000\026\004\243" +
    "\005\237\006\241\025\240\026\042\031\242\034\244\051" +
    "\247\053\263\057\245\001\001\000\026\004\243\005\237" +
    "\006\241\025\240\026\042\031\242\034\244\051\247\053" +
    "\262\057\245\001\001\000\026\004\243\005\237\006\241" +
    "\025\240\026\042\031\242\034\244\051\247\053\261\057" +
    "\245\001\001\000\026\004\243\005\237\006\241\025\240" +
    "\026\042\031\242\034\244\051\247\053\260\057\245\001" +
    "\001\000\026\004\243\005\237\006\241\025\240\026\042" +
    "\031\242\034\244\051\247\053\257\057\245\001\001\000" +
    "\002\001\001\000\026\004\243\005\237\006\241\025\240" +
    "\026\042\031\242\034\244\051\247\053\254\057\245\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\243\005" +
    "\237\006\241\025\240\026\042\031\242\034\244\051\247" +
    "\053\256\057\245\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\004\243\005\237\006\241\025\240\026\042\031\242" +
    "\034\244\051\247\053\267\057\245\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\125\005\120\006\121" +
    "\025\122\026\042\031\124\034\126\040\272\051\131\057" +
    "\127\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\026\301\001\001\000\002\001\001\000\006" +
    "\026\304\034\303\001\001\000\026\004\321\005\314\006" +
    "\315\025\316\026\042\031\317\034\322\051\325\056\370" +
    "\057\323\001\001\000\004\035\305\001\001\000\010\026" +
    "\350\035\353\041\351\001\001\000\004\024\307\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\321\005\314\006\315\025\316" +
    "\026\042\031\317\034\322\051\325\056\320\057\323\001" +
    "\001\000\026\004\321\005\314\006\315\025\316\026\042" +
    "\031\317\034\322\051\325\056\347\057\323\001\001\000" +
    "\026\004\321\005\314\006\315\025\316\026\042\031\317" +
    "\034\322\051\325\056\346\057\323\001\001\000\026\004" +
    "\321\005\314\006\315\025\316\026\042\031\317\034\322" +
    "\051\325\056\345\057\323\001\001\000\026\004\321\005" +
    "\314\006\315\025\316\026\042\031\317\034\322\051\325" +
    "\056\344\057\323\001\001\000\002\001\001\000\026\004" +
    "\321\005\314\006\315\025\316\026\042\031\317\034\322" +
    "\051\325\056\340\057\323\001\001\000\026\004\321\005" +
    "\314\006\315\025\316\026\042\031\317\034\322\051\325" +
    "\056\337\057\323\001\001\000\026\004\321\005\314\006" +
    "\315\025\316\026\042\031\317\034\322\051\325\056\336" +
    "\057\323\001\001\000\002\001\001\000\026\004\321\005" +
    "\314\006\315\025\316\026\042\031\317\034\322\051\325" +
    "\056\333\057\323\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\321\005\314\006\315\025" +
    "\316\026\042\031\317\034\322\051\325\056\335\057\323" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\035\363\001\001" +
    "\000\002\001\001\000\004\026\357\001\001\000\004\026" +
    "\354\001\001\000\010\026\350\035\353\041\355\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\035\360\001" +
    "\001\000\010\026\350\035\353\041\361\001\001\000\002" +
    "\001\001\000\010\026\350\035\353\041\366\001\001\000" +
    "\010\026\350\035\353\041\365\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\004\040\005\030\006\032\012\u0102\014\047" +
    "\022\026\025\031\026\042\031\036\034\041\044\043\060" +
    "\053\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\004\u010e\005\u0109\006\u010b\014\u0112\015\u0110" +
    "\022\u0108\025\u010c\026\042\031\u010d\034\u010f\001\001\000" +
    "\002\001\001\000\026\004\u010e\005\u0109\006\u010b\014\u0112" +
    "\015\u014f\022\u0108\025\u010c\026\042\031\u010d\034\u010f\001" +
    "\001\000\026\004\u010e\005\u0109\006\u010b\014\u0112\015\u014e" +
    "\022\u0108\025\u010c\026\042\031\u010d\034\u010f\001\001\000" +
    "\012\010\061\020\u011f\021\u011e\026\063\001\001\000\026" +
    "\004\u010e\005\u0109\006\u010b\014\u0112\015\u011d\022\u0108\025" +
    "\u010c\026\042\031\u010d\034\u010f\001\001\000\026\004\u010e" +
    "\005\u0109\006\u010b\014\u0112\015\u011c\022\u0108\025\u010c\026" +
    "\042\031\u010d\034\u010f\001\001\000\026\004\u010e\005\u0109" +
    "\006\u010b\014\u0112\015\u011b\022\u0108\025\u010c\026\042\031" +
    "\u010d\034\u010f\001\001\000\026\004\u010e\005\u0109\006\u010b" +
    "\014\u0112\015\u011a\022\u0108\025\u010c\026\042\031\u010d\034" +
    "\u010f\001\001\000\026\004\u010e\005\u0109\006\u010b\014\u0112" +
    "\015\u0119\022\u0108\025\u010c\026\042\031\u010d\034\u010f\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u010e" +
    "\005\u0109\006\u010b\014\u0112\015\u0113\022\u0108\025\u010c\026" +
    "\042\031\u010d\034\u010f\001\001\000\002\001\001\000\026" +
    "\004\u010e\005\u0109\006\u010b\014\u0112\015\u0115\022\u0108\025" +
    "\u010c\026\042\031\u010d\034\u010f\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\u0129\005\u0125\006\u0126" +
    "\014\u012d\017\u012b\022\u0123\025\u0127\026\042\031\u0128\034" +
    "\u012a\001\001\000\002\001\001\000\026\004\u0129\005\u0125" +
    "\006\u0126\014\u012d\017\u0138\022\u0123\025\u0127\026\042\031" +
    "\u0128\034\u012a\001\001\000\012\010\061\020\u0137\021\u011e" +
    "\026\063\001\001\000\026\004\u0129\005\u0125\006\u0126\014" +
    "\u012d\017\u0136\022\u0123\025\u0127\026\042\031\u0128\034\u012a" +
    "\001\001\000\026\004\u0129\005\u0125\006\u0126\014\u012d\017" +
    "\u0135\022\u0123\025\u0127\026\042\031\u0128\034\u012a\001\001" +
    "\000\026\004\u0129\005\u0125\006\u0126\014\u012d\017\u0134\022" +
    "\u0123\025\u0127\026\042\031\u0128\034\u012a\001\001\000\026" +
    "\004\u0129\005\u0125\006\u0126\014\u012d\017\u0133\022\u0123\025" +
    "\u0127\026\042\031\u0128\034\u012a\001\001\000\026\004\u0129" +
    "\005\u0125\006\u0126\014\u012d\017\u0132\022\u0123\025\u0127\026" +
    "\042\031\u0128\034\u012a\001\001\000\026\004\u0129\005\u0125" +
    "\006\u0126\014\u012d\017\u0131\022\u0123\025\u0127\026\042\031" +
    "\u0128\034\u012a\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\004\u0129\005\u0125\006\u0126\014\u012d\017\u012e\022" +
    "\u0123\025\u0127\026\042\031\u0128\034\u012a\001\001\000\002" +
    "\001\001\000\026\004\u0129\005\u0125\006\u0126\014\u012d\017" +
    "\u0130\022\u0123\025\u0127\026\042\031\u0128\034\u012a\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\004" +
    "\u013f\005\u013b\006\u013c\014\u0142\016\u0143\022\u013a\025\u013d" +
    "\026\042\031\u013e\034\u0140\001\001\000\026\004\u013f\005" +
    "\u013b\006\u013c\014\u0142\016\u014d\022\u013a\025\u013d\026\042" +
    "\031\u013e\034\u0140\001\001\000\026\004\u013f\005\u013b\006" +
    "\u013c\014\u0142\016\u014c\022\u013a\025\u013d\026\042\031\u013e" +
    "\034\u0140\001\001\000\026\004\u013f\005\u013b\006\u013c\014" +
    "\u0142\016\u014b\022\u013a\025\u013d\026\042\031\u013e\034\u0140" +
    "\001\001\000\026\004\u013f\005\u013b\006\u013c\014\u0142\016" +
    "\u014a\022\u013a\025\u013d\026\042\031\u013e\034\u0140\001\001" +
    "\000\026\004\u013f\005\u013b\006\u013c\014\u0142\016\u0149\022" +
    "\u013a\025\u013d\026\042\031\u013e\034\u0140\001\001\000\026" +
    "\004\u013f\005\u013b\006\u013c\014\u0142\016\u0148\022\u013a\025" +
    "\u013d\026\042\031\u013e\034\u0140\001\001\000\026\004\u013f" +
    "\005\u013b\006\u013c\014\u0142\016\u0147\022\u013a\025\u013d\026" +
    "\042\031\u013e\034\u0140\001\001\000\002\001\001\000\026" +
    "\004\u013f\005\u013b\006\u013c\014\u0142\016\u0144\022\u013a\025" +
    "\u013d\026\042\031\u013e\034\u0140\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\u013f\005\u013b\006\u013c\014" +
    "\u0142\016\u0146\022\u013a\025\u013d\026\042\031\u013e\034\u0140" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u013f\005\u013b\006\u013c\014\u0142" +
    "\016\u0151\022\u013a\025\u013d\026\042\031\u013e\034\u0140\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\035\u0157\001" +
    "\001\000\010\026\350\035\353\041\u0158\001\001\000\002" +
    "\001\001\000\014\043\u015f\047\u028c\070\u015a\071\u015e\072" +
    "\u0159\001\001\000\014\043\u015f\047\u028b\070\u015a\071\u015e" +
    "\072\u0159\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\043\u015f\047\u0160\070\u015a\071\u015e" +
    "\072\u0159\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\043\u015f\047\u01bd\070\u015a\071\u015e" +
    "\072\u0159\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\013\u016a\030\u0169\045\u0171\060\u0170\072\u016d\001\001\000" +
    "\014\013\u01b7\030\u0169\045\u0171\060\u0170\072\u016d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\013\u01a3\030\u0169\045\u0171\060\u0170\072\u016d\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\013\u0172\030" +
    "\u0169\045\u0171\060\u0170\072\u016d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\003\u017c\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\032\004\040\005\030" +
    "\006\032\012\u017e\014\047\022\026\025\031\026\042\031" +
    "\036\034\041\044\043\060\053\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\007\u0186\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\003\u0187\001\001\000\002\001" +
    "\001\000\004\007\u0189\001\001\000\004\003\u018a\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\u018d\001" +
    "\001\000\004\003\u018e\001\001\000\002\001\001\000\004" +
    "\007\u0190\001\001\000\004\003\u0191\001\001\000\002\001" +
    "\001\000\004\003\u0197\001\001\000\004\003\u0194\001\001" +
    "\000\002\001\001\000\032\004\040\005\030\006\032\012" +
    "\u0196\014\047\022\026\025\031\026\042\031\036\034\041" +
    "\044\043\060\053\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\004\040\005\030\006\032\012\u0199\014\047" +
    "\022\026\025\031\026\042\031\036\034\041\044\043\060" +
    "\053\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u019c\001\001\000\002\001\001\000\032\004\040\005" +
    "\030\006\032\012\u019e\014\047\022\026\025\031\026\042" +
    "\031\036\034\041\044\043\060\053\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\013\u01a7\030" +
    "\u0169\045\u0171\060\u0170\072\u016d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\007\u01ab\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\u01ae\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\u01ba\001\001\000\002\001\001\000" +
    "\032\004\040\005\030\006\032\012\u01bc\014\047\022\026" +
    "\025\031\026\042\031\036\034\041\044\043\060\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\003\u01c0\001\001\000\002\001\001\000\004\007" +
    "\u01c2\001\001\000\002\001\001\000\032\004\u01ca\005\u01c4" +
    "\006\u01c6\011\u01cc\026\042\031\u01c9\034\u01cb\046\u01cd\060" +
    "\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001\000\032\004\u01ca" +
    "\005\u01c4\006\u01c6\011\u0286\026\042\031\u01c9\034\u01cb\046" +
    "\u01cd\060\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001\000\032" +
    "\004\u01ca\005\u01c4\006\u01c6\011\u0285\026\042\031\u01c9\034" +
    "\u01cb\046\u01cd\060\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001" +
    "\000\032\004\u01ca\005\u01c4\006\u01c6\011\u0284\026\042\031" +
    "\u01c9\034\u01cb\046\u01cd\060\u01d2\073\u01c8\075\u01c5\103\u01d3" +
    "\001\001\000\002\001\001\000\032\004\u01ca\005\u01c4\006" +
    "\u01c6\011\u0258\026\042\031\u01c9\034\u01cb\046\u01cd\060\u01d2" +
    "\073\u01c8\075\u01c5\103\u01d3\001\001\000\032\004\u01ca\005" +
    "\u01c4\006\u01c6\011\u0257\026\042\031\u01c9\034\u01cb\046\u01cd" +
    "\060\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001\000\032\004" +
    "\u01ca\005\u01c4\006\u01c6\011\u0256\026\042\031\u01c9\034\u01cb" +
    "\046\u01cd\060\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001\000" +
    "\032\004\u01ca\005\u01c4\006\u01c6\011\u0255\026\042\031\u01c9" +
    "\034\u01cb\046\u01cd\060\u01d2\073\u01c8\075\u01c5\103\u01d3\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\010\061\021\u01fa\026\063\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\004\u01ca\005\u01c4\006\u01c6" +
    "\011\u01d5\026\042\031\u01c9\034\u01cb\046\u01cd\060\u01d2\073" +
    "\u01c8\075\u01c5\103\u01d3\001\001\000\032\004\u01ca\005\u01c4" +
    "\006\u01c6\011\u01d4\026\042\031\u01c9\034\u01cb\046\u01cd\060" +
    "\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\010\061\021\u01d7\026\063\001" +
    "\001\000\002\001\001\000\026\004\u01de\005\u01d9\006\u01db" +
    "\026\042\031\u01dd\034\u01df\073\u01dc\074\u01e1\075\u01da\103" +
    "\u01e2\001\001\000\026\004\u01de\005\u01d9\006\u01db\026\042" +
    "\031\u01dd\034\u01df\073\u01dc\074\u01f5\075\u01da\103\u01e2\001" +
    "\001\000\026\004\u01de\005\u01d9\006\u01db\026\042\031\u01dd" +
    "\034\u01df\073\u01dc\074\u01f4\075\u01da\103\u01e2\001\001\000" +
    "\026\004\u01de\005\u01d9\006\u01db\026\042\031\u01dd\034\u01df" +
    "\073\u01dc\074\u01f3\075\u01da\103\u01e2\001\001\000\026\004" +
    "\u01de\005\u01d9\006\u01db\026\042\031\u01dd\034\u01df\073\u01dc" +
    "\074\u01f2\075\u01da\103\u01e2\001\001\000\026\004\u01de\005" +
    "\u01d9\006\u01db\026\042\031\u01dd\034\u01df\073\u01dc\074\u01f1" +
    "\075\u01da\103\u01e2\001\001\000\026\004\u01de\005\u01d9\006" +
    "\u01db\026\042\031\u01dd\034\u01df\073\u01dc\074\u01f0\075\u01da" +
    "\103\u01e2\001\001\000\026\004\u01de\005\u01d9\006\u01db\026" +
    "\042\031\u01dd\034\u01df\073\u01dc\074\u01ef\075\u01da\103\u01e2" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\004" +
    "\u01de\005\u01d9\006\u01db\026\042\031\u01dd\034\u01df\073\u01dc" +
    "\074\u01ea\075\u01da\103\u01e2\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u01de" +
    "\005\u01d9\006\u01db\026\042\031\u01dd\034\u01df\073\u01dc\074" +
    "\u01ee\075\u01da\103\u01e2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\032\004\u01ca\005\u01c4\006\u01c6\011" +
    "\u01f8\026\042\031\u01c9\034\u01cb\046\u01cd\060\u01d2\073\u01c8" +
    "\075\u01c5\103\u01d3\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u0204" +
    "\005\u01fe\006\u0201\026\042\031\u0203\034\u0205\073\u0202\075" +
    "\u0200\077\u0206\103\u0208\001\001\000\002\001\001\000\026" +
    "\004\u0204\005\u01fe\006\u0201\026\042\031\u0203\034\u0205\073" +
    "\u0202\075\u0200\077\u024e\103\u0208\001\001\000\012\010\061" +
    "\021\u0218\026\063\076\u0219\001\001\000\026\004\u0204\005" +
    "\u01fe\006\u0201\026\042\031\u0203\034\u0205\073\u0202\075\u0200" +
    "\077\u0217\103\u0208\001\001\000\026\004\u0204\005\u01fe\006" +
    "\u0201\026\042\031\u0203\034\u0205\073\u0202\075\u0200\077\u0216" +
    "\103\u0208\001\001\000\026\004\u0204\005\u01fe\006\u0201\026" +
    "\042\031\u0203\034\u0205\073\u0202\075\u0200\077\u0215\103\u0208" +
    "\001\001\000\026\004\u0204\005\u01fe\006\u0201\026\042\031" +
    "\u0203\034\u0205\073\u0202\075\u0200\077\u0214\103\u0208\001\001" +
    "\000\026\004\u0204\005\u01fe\006\u0201\026\042\031\u0203\034" +
    "\u0205\073\u0202\075\u0200\077\u0213\103\u0208\001\001\000\026" +
    "\004\u0204\005\u01fe\006\u0201\026\042\031\u0203\034\u0205\073" +
    "\u0202\075\u0200\077\u0212\103\u0208\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\004\u0204\005\u01fe\006\u0201\026" +
    "\042\031\u0203\034\u0205\073\u0202\075\u0200\077\u020c\103\u0208" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\u0204\005\u01fe\006\u0201" +
    "\026\042\031\u0203\034\u0205\073\u0202\075\u0200\077\u020e\103" +
    "\u0208\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u0223\005\u021e\006\u0220\026\042" +
    "\031\u0222\034\u0224\073\u0221\075\u021f\100\u0225\103\u0227\001" +
    "\001\000\002\001\001\000\012\010\061\021\u0218\026\063" +
    "\076\u0235\001\001\000\026\004\u0223\005\u021e\006\u0220\026" +
    "\042\031\u0222\034\u0224\073\u0221\075\u021f\100\u0234\103\u0227" +
    "\001\001\000\026\004\u0223\005\u021e\006\u0220\026\042\031" +
    "\u0222\034\u0224\073\u0221\075\u021f\100\u0233\103\u0227\001\001" +
    "\000\026\004\u0223\005\u021e\006\u0220\026\042\031\u0222\034" +
    "\u0224\073\u0221\075\u021f\100\u0232\103\u0227\001\001\000\026" +
    "\004\u0223\005\u021e\006\u0220\026\042\031\u0222\034\u0224\073" +
    "\u0221\075\u021f\100\u0231\103\u0227\001\001\000\026\004\u0223" +
    "\005\u021e\006\u0220\026\042\031\u0222\034\u0224\073\u0221\075" +
    "\u021f\100\u0230\103\u0227\001\001\000\026\004\u0223\005\u021e" +
    "\006\u0220\026\042\031\u0222\034\u0224\073\u0221\075\u021f\100" +
    "\u022f\103\u0227\001\001\000\026\004\u0223\005\u021e\006\u0220" +
    "\026\042\031\u0222\034\u0224\073\u0221\075\u021f\100\u022e\103" +
    "\u0227\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u0223\005\u021e\006\u0220\026\042\031\u0222\034\u0224\073" +
    "\u0221\075\u021f\100\u022b\103\u0227\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\004\u0223\005\u021e\006\u0220\026\042\031\u0222\034\u0224" +
    "\073\u0221\075\u021f\100\u022d\103\u0227\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\004\u023d\005\u0238" +
    "\006\u023a\026\042\031\u023c\034\u023e\073\u023b\075\u0239\101" +
    "\u0237\103\u0240\001\001\000\002\001\001\000\026\004\u023d" +
    "\005\u0238\006\u023a\026\042\031\u023c\034\u023e\073\u023b\075" +
    "\u0239\101\u024d\103\u0240\001\001\000\026\004\u023d\005\u0238" +
    "\006\u023a\026\042\031\u023c\034\u023e\073\u023b\075\u0239\101" +
    "\u024c\103\u0240\001\001\000\026\004\u023d\005\u0238\006\u023a" +
    "\026\042\031\u023c\034\u023e\073\u023b\075\u0239\101\u024b\103" +
    "\u0240\001\001\000\026\004\u023d\005\u0238\006\u023a\026\042" +
    "\031\u023c\034\u023e\073\u023b\075\u0239\101\u024a\103\u0240\001" +
    "\001\000\026\004\u023d\005\u0238\006\u023a\026\042\031\u023c" +
    "\034\u023e\073\u023b\075\u0239\101\u0249\103\u0240\001\001\000" +
    "\026\004\u023d\005\u0238\006\u023a\026\042\031\u023c\034\u023e" +
    "\073\u023b\075\u0239\101\u0248\103\u0240\001\001\000\026\004" +
    "\u023d\005\u0238\006\u023a\026\042\031\u023c\034\u023e\073\u023b" +
    "\075\u0239\101\u0247\103\u0240\001\001\000\002\001\001\000" +
    "\026\004\u023d\005\u0238\006\u023a\026\042\031\u023c\034\u023e" +
    "\073\u023b\075\u0239\101\u0244\103\u0240\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\004\u023d\005\u0238\006\u023a\026\042\031\u023c\034" +
    "\u023e\073\u023b\075\u0239\101\u0246\103\u0240\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\u023d\005" +
    "\u0238\006\u023a\026\042\031\u023c\034\u023e\073\u023b\075\u0239" +
    "\101\u0250\103\u0240\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\026\u025b\001\001" +
    "\000\002\001\001\000\006\026\u025e\034\u025d\001\001\000" +
    "\026\004\u0267\005\u0262\006\u0264\026\042\031\u0266\034\u0268" +
    "\073\u0265\075\u0263\102\u0280\103\u026b\001\001\000\004\035" +
    "\305\001\001\000\004\024\u0260\001\001\000\002\001\001" +
    "\000\026\004\u0267\005\u0262\006\u0264\026\042\031\u0266\034" +
    "\u0268\073\u0265\075\u0263\102\u026a\103\u026b\001\001\000\026" +
    "\004\u0267\005\u0262\006\u0264\026\042\031\u0266\034\u0268\073" +
    "\u0265\075\u0263\102\u027f\103\u026b\001\001\000\026\004\u0267" +
    "\005\u0262\006\u0264\026\042\031\u0266\034\u0268\073\u0265\075" +
    "\u0263\102\u027e\103\u026b\001\001\000\026\004\u0267\005\u0262" +
    "\006\u0264\026\042\031\u0266\034\u0268\073\u0265\075\u0263\102" +
    "\u027d\103\u026b\001\001\000\026\004\u0267\005\u0262\006\u0264" +
    "\026\042\031\u0266\034\u0268\073\u0265\075\u0263\102\u027c\103" +
    "\u026b\001\001\000\026\004\u0267\005\u0262\006\u0264\026\042" +
    "\031\u0266\034\u0268\073\u0265\075\u0263\102\u027b\103\u026b\001" +
    "\001\000\026\004\u0267\005\u0262\006\u0264\026\042\031\u0266" +
    "\034\u0268\073\u0265\075\u0263\102\u027a\103\u026b\001\001\000" +
    "\026\004\u0267\005\u0262\006\u0264\026\042\031\u0266\034\u0268" +
    "\073\u0265\075\u0263\102\u0279\103\u026b\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\u0267\005\u0262\006\u0264" +
    "\026\042\031\u0266\034\u0268\073\u0265\075\u0263\102\u0273\103" +
    "\u026b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\004\u0267\005" +
    "\u0262\006\u0264\026\042\031\u0266\034\u0268\073\u0265\075\u0263" +
    "\102\u0278\103\u026b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\026\112\032\u02b7\001\001\000\004\036" +
    "\u02b1\001\001\000\014\010\u02a8\026\u02a2\027\u02a1\031\u02a5" +
    "\034\u02a7\001\001\000\002\001\001\000\004\035\305\001" +
    "\001\000\002\001\001\000\004\026\u029f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\026\u02b3\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\036\u02b4\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\026\112\032\u02bb\001\001" +
    "\000\004\036\u02b9\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\010\u02a8\026\u02c2\027\u02c1\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\026" +
    "\u02cc\001\001\000\002\001\001\000\006\026\u02cf\034\u02ce" +
    "\001\001\000\026\004\u02d7\005\u02d4\006\u02d5\022\u02d3\026" +
    "\042\031\u02d6\034\u02d8\037\u0364\061\u02db\063\u02de\001\001" +
    "\000\004\035\305\001\001\000\004\024\u02d1\001\001\000" +
    "\002\001\001\000\026\004\u02d7\005\u02d4\006\u02d5\022\u02d3" +
    "\026\042\031\u02d6\034\u02d8\037\u02d9\061\u02db\063\u02de\001" +
    "\001\000\026\004\u02d7\005\u02d4\006\u02d5\022\u02d3\026\042" +
    "\031\u02d6\034\u02d8\037\u0363\061\u02db\063\u02de\001\001\000" +
    "\026\004\u02d7\005\u02d4\006\u02d5\022\u02d3\026\042\031\u02d6" +
    "\034\u02d8\037\u0362\061\u02db\063\u02de\001\001\000\026\004" +
    "\u02d7\005\u02d4\006\u02d5\022\u02d3\026\042\031\u02d6\034\u02d8" +
    "\037\u0361\061\u02db\063\u02de\001\001\000\026\004\u02d7\005" +
    "\u02d4\006\u02d5\022\u02d3\026\042\031\u02d6\034\u02d8\037\u0360" +
    "\061\u02db\063\u02de\001\001\000\026\004\u02d7\005\u02d4\006" +
    "\u02d5\022\u02d3\026\042\031\u02d6\034\u02d8\037\u035f\061\u02db" +
    "\063\u02de\001\001\000\026\004\u02d7\005\u02d4\006\u02d5\022" +
    "\u02d3\026\042\031\u02d6\034\u02d8\037\u035e\061\u02db\063\u02de" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\004" +
    "\u02d7\005\u02d4\006\u02d5\022\u02d3\026\042\031\u02d6\034\u02d8" +
    "\037\u0358\061\u02db\063\u02de\001\001\000\010\010\061\021" +
    "\u0301\026\063\001\001\000\002\001\001\000\026\004\u02d7" +
    "\005\u02d4\006\u02d5\022\u02d3\026\042\031\u02d6\034\u02d8\037" +
    "\u02e2\061\u02db\063\u02de\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\010" +
    "\061\021\u02e4\026\063\001\001\000\002\001\001\000\026" +
    "\004\u02eb\005\u02e7\006\u02e8\022\u02e6\026\042\031\u02e9\034" +
    "\u02ea\061\u02ee\062\u02ed\063\u02ef\001\001\000\026\004\u02eb" +
    "\005\u02e7\006\u02e8\022\u02e6\026\042\031\u02e9\034\u02ea\061" +
    "\u02ee\062\u0300\063\u02ef\001\001\000\026\004\u02eb\005\u02e7" +
    "\006\u02e8\022\u02e6\026\042\031\u02e9\034\u02ea\061\u02ee\062" +
    "\u02ff\063\u02ef\001\001\000\026\004\u02eb\005\u02e7\006\u02e8" +
    "\022\u02e6\026\042\031\u02e9\034\u02ea\061\u02ee\062\u02fe\063" +
    "\u02ef\001\001\000\026\004\u02eb\005\u02e7\006\u02e8\022\u02e6" +
    "\026\042\031\u02e9\034\u02ea\061\u02ee\062\u02fd\063\u02ef\001" +
    "\001\000\026\004\u02eb\005\u02e7\006\u02e8\022\u02e6\026\042" +
    "\031\u02e9\034\u02ea\061\u02ee\062\u02fc\063\u02ef\001\001\000" +
    "\026\004\u02eb\005\u02e7\006\u02e8\022\u02e6\026\042\031\u02e9" +
    "\034\u02ea\061\u02ee\062\u02fb\063\u02ef\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\u02eb\005\u02e7\006\u02e8" +
    "\022\u02e6\026\042\031\u02e9\034\u02ea\061\u02ee\062\u02f6\063" +
    "\u02ef\001\001\000\026\004\u02eb\005\u02e7\006\u02e8\022\u02e6" +
    "\026\042\031\u02e9\034\u02ea\061\u02ee\062\u02f5\063\u02ef\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u02eb\005\u02e7\006\u02e8\022\u02e6\026\042\031\u02e9\034" +
    "\u02ea\061\u02ee\062\u02fa\063\u02ef\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\u030a\005\u0306\006" +
    "\u0308\022\u0305\026\042\031\u0309\034\u030b\061\u030e\063\u030f" +
    "\065\u030c\001\001\000\002\001\001\000\026\004\u030a\005" +
    "\u0306\006\u0308\022\u0305\026\042\031\u0309\034\u030b\061\u030e" +
    "\063\u030f\065\u0355\001\001\000\026\004\u030a\005\u0306\006" +
    "\u0308\022\u0305\026\042\031\u0309\034\u030b\061\u030e\063\u030f" +
    "\065\u0354\001\001\000\012\010\061\021\u031e\026\063\064" +
    "\u031f\001\001\000\026\004\u030a\005\u0306\006\u0308\022\u0305" +
    "\026\042\031\u0309\034\u030b\061\u030e\063\u030f\065\u031d\001" +
    "\001\000\026\004\u030a\005\u0306\006\u0308\022\u0305\026\042" +
    "\031\u0309\034\u030b\061\u030e\063\u030f\065\u031c\001\001\000" +
    "\026\004\u030a\005\u0306\006\u0308\022\u0305\026\042\031\u0309" +
    "\034\u030b\061\u030e\063\u030f\065\u031b\001\001\000\026\004" +
    "\u030a\005\u0306\006\u0308\022\u0305\026\042\031\u0309\034\u030b" +
    "\061\u030e\063\u030f\065\u031a\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\004\u030a\005\u0306\006\u0308\022\u0305" +
    "\026\042\031\u0309\034\u030b\061\u030e\063\u030f\065\u0314\001" +
    "\001\000\026\004\u030a\005\u0306\006\u0308\022\u0305\026\042" +
    "\031\u0309\034\u030b\061\u030e\063\u030f\065\u0313\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\004\u030a\005\u0306\006" +
    "\u0308\022\u0305\026\042\031\u0309\034\u030b\061\u030e\063\u030f" +
    "\065\u0316\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u0328" +
    "\005\u0325\006\u0326\022\u0323\026\042\031\u0327\034\u0329\061" +
    "\u032b\063\u032d\066\u032c\001\001\000\002\001\001\000\026" +
    "\004\u0328\005\u0325\006\u0326\022\u0323\026\042\031\u0327\034" +
    "\u0329\061\u032b\063\u032d\066\u033b\001\001\000\012\010\061" +
    "\021\u031e\026\063\064\u033a\001\001\000\026\004\u0328\005" +
    "\u0325\006\u0326\022\u0323\026\042\031\u0327\034\u0329\061\u032b" +
    "\063\u032d\066\u0339\001\001\000\026\004\u0328\005\u0325\006" +
    "\u0326\022\u0323\026\042\031\u0327\034\u0329\061\u032b\063\u032d" +
    "\066\u0338\001\001\000\026\004\u0328\005\u0325\006\u0326\022" +
    "\u0323\026\042\031\u0327\034\u0329\061\u032b\063\u032d\066\u0337" +
    "\001\001\000\026\004\u0328\005\u0325\006\u0326\022\u0323\026" +
    "\042\031\u0327\034\u0329\061\u032b\063\u032d\066\u0336\001\001" +
    "\000\026\004\u0328\005\u0325\006\u0326\022\u0323\026\042\031" +
    "\u0327\034\u0329\061\u032b\063\u032d\066\u0335\001\001\000\002" +
    "\001\001\000\026\004\u0328\005\u0325\006\u0326\022\u0323\026" +
    "\042\031\u0327\034\u0329\061\u032b\063\u032d\066\u0332\001\001" +
    "\000\002\001\001\000\026\004\u0328\005\u0325\006\u0326\022" +
    "\u0323\026\042\031\u0327\034\u0329\061\u032b\063\u032d\066\u0331" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\004\u0328" +
    "\005\u0325\006\u0326\022\u0323\026\042\031\u0327\034\u0329\061" +
    "\u032b\063\u032d\066\u0334\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\004\u0341\005\u033e\006\u033f\022\u033d\026\042\031" +
    "\u0340\034\u0342\061\u0345\063\u0346\067\u0344\001\001\000\026" +
    "\004\u0341\005\u033e\006\u033f\022\u033d\026\042\031\u0340\034" +
    "\u0342\061\u0345\063\u0346\067\u0353\001\001\000\026\004\u0341" +
    "\005\u033e\006\u033f\022\u033d\026\042\031\u0340\034\u0342\061" +
    "\u0345\063\u0346\067\u0352\001\001\000\026\004\u0341\005\u033e" +
    "\006\u033f\022\u033d\026\042\031\u0340\034\u0342\061\u0345\063" +
    "\u0346\067\u0351\001\001\000\026\004\u0341\005\u033e\006\u033f" +
    "\022\u033d\026\042\031\u0340\034\u0342\061\u0345\063\u0346\067" +
    "\u0350\001\001\000\026\004\u0341\005\u033e\006\u033f\022\u033d" +
    "\026\042\031\u0340\034\u0342\061\u0345\063\u0346\067\u034f\001" +
    "\001\000\026\004\u0341\005\u033e\006\u033f\022\u033d\026\042" +
    "\031\u0340\034\u0342\061\u0345\063\u0346\067\u034e\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\004\u0341\005\u033e" +
    "\006\u033f\022\u033d\026\042\031\u0340\034\u0342\061\u0345\063" +
    "\u0346\067\u034b\001\001\000\026\004\u0341\005\u033e\006\u033f" +
    "\022\u033d\026\042\031\u0340\034\u0342\061\u0345\063\u0346\067" +
    "\u034a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\004" +
    "\u0341\005\u033e\006\u033f\022\u033d\026\042\031\u0340\034\u0342" +
    "\061\u0345\063\u0346\067\u034d\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\004\u0341\005\u033e\006\u033f" +
    "\022\u033d\026\042\031\u0340\034\u0342\061\u0345\063\u0346\067" +
    "\u0357\001\001\000\002\001\001\000\002\001\001\000\026" +
    "\004\u02d7\005\u02d4\006\u02d5\022\u02d3\026\042\031\u02d6\034" +
    "\u02d8\037\u035a\061\u02db\063\u02de\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\007\u0371\001\001\000\012\010\u02a8" +
    "\026\u02a2\027\u036e\034\u036f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\010\u02a8\026\u02c2\027\u0374\031\u0375\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\032\004\040\005\030" +
    "\006\032\012\u037d\014\047\022\026\025\031\026\042\031" +
    "\036\034\041\044\043\060\053\001\001\000\002\001\001" +
    "\000\032\004\040\005\030\006\032\012\u037f\014\047\022" +
    "\026\025\031\026\042\031\036\034\041\044\043\060\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\032\004" +
    "\040\005\030\006\032\012\u0382\014\047\022\026\025\031" +
    "\026\042\031\036\034\041\044\043\060\053\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\013" +
    "\u0389\030\u0169\045\u0171\060\u0170\072\u016d\001\001\000\002" +
    "\001\001\000\014\013\u038b\030\u0169\045\u0171\060\u0170\072" +
    "\u016d\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\013\u0394\030\u0169\045\u0171\060\u0170\072\u016d\001\001\000" +
    "\004\003\u038f\001\001\000\002\001\001\000\004\007\u0391" +
    "\001\001\000\002\001\001\000\032\004\u01ca\005\u01c4\006" +
    "\u01c6\011\u0393\026\042\031\u01c9\034\u01cb\046\u01cd\060\u01d2" +
    "\073\u01c8\075\u01c5\103\u01d3\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\003\u0398\001\001\000\002\001\001\000\004\007\u039a\001" +
    "\001\000\002\001\001\000\032\004\u01ca\005\u01c4\006\u01c6" +
    "\011\u039c\026\042\031\u01c9\034\u01cb\046\u01cd\060\u01d2\073" +
    "\u01c8\075\u01c5\103\u01d3\001\001\000\002\001\001\000\004" +
    "\003\u03a8\001\001\000\004\003\u039f\001\001\000\002\001" +
    "\001\000\004\007\u03a5\001\001\000\004\007\u03a2\001\001" +
    "\000\002\001\001\000\032\004\u01ca\005\u01c4\006\u01c6\011" +
    "\u03a4\026\042\031\u01c9\034\u01cb\046\u01cd\060\u01d2\073\u01c8" +
    "\075\u01c5\103\u01d3\001\001\000\002\001\001\000\002\001" +
    "\001\000\032\004\u01ca\005\u01c4\006\u01c6\011\u03a7\026\042" +
    "\031\u01c9\034\u01cb\046\u01cd\060\u01d2\073\u01c8\075\u01c5\103" +
    "\u01d3\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\u03aa\001\001\000\002\001\001\000\032\004\u01ca\005" +
    "\u01c4\006\u01c6\011\u03ac\026\042\031\u01c9\034\u01cb\046\u01cd" +
    "\060\u01d2\073\u01c8\075\u01c5\103\u01d3\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\002\u03af\042\014\070\011" +
    "\071\017\072\010\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\032\004\040\005\030\006\032" +
    "\012\u03b3\014\047\022\026\025\031\026\042\031\036\034" +
    "\041\044\043\060\053\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\002\u03bb" +
    "\042\014\070\011\071\017\072\010\001\001\000\002\001" +
    "\001\000\014\002\u03bd\042\014\070\011\071\017\072\010" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\002" +
    "\u03c0\042\014\070\011\071\017\072\010\001\001\000\002" +
    "\001\001\000\014\002\u03c6\042\014\070\011\071\017\072" +
    "\010\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\002\u03c5\042\014\070\011\071\017\072\010\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    private Symbol cur_token;
    String unrecovered = "";
    String errorSintax = "";

    public String resultado="";
    public Nodo padre;
    public int contador = 1;

    ArrayList<String> listaRecover = new ArrayList<String>();

    @Override
    public void syntax_error(Symbol sym){
       listaRecover.add("\n Error Sintactico en la Linea " + (sym.right+1) +" Columna "+ (sym.left) + ". Palabras/Simbolo " + (sym.value) + " no reconocido \n") ;
    }

    public ArrayList<String> getSintax(){
        return listaRecover;
    }

    @Override
    public void unrecovered_syntax_error(Symbol cur_token){
       unrecovered = "Error Sintactico IRRECUPERABLE en la Linea: " + (cur_token.right+1)+ " Columna "+cur_token.left+". Palabras/Simbolo " + cur_token.value + " no reconocido"; 
    }

    public String getS(){
        return unrecovered;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= MODULE EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // MODULE ::= tk_public tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
        Nodo tmp = new Nodo("INICIO");
        tmp.setNumNodo(parser.contador++);
        tmp.addHijo((Nodo)inmod);
        parser.padre = (Nodo) tmp;
        System.out.println("OK");
        RESULT=tmp;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // MODULE ::= error tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // MODULE ::= tk_public error tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // MODULE ::= tk_public tk_module error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // MODULE ::= COMENTARIO OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // MODULE ::= error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MODULE",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // COMENTARIO ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("COMENTARIO",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // FUNC ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).right;
		Object param = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)).value;
		int infuncleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int infuncright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object infunc = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("FUNCION");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)param);
            tmp.addHijo((Nodo)infunc);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // FUNC ::= error tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // FUNC ::= tk_public error tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // FUNC ::= tk_public tk_function error tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // FUNC ::= tk_public tk_function tk_Identificador error PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // FUNC ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS error TIPOD tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("FUNC",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // STRUCT ::= tk_public tk_structure tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;
		int instructleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int instructright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object instruct = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("STRUCT");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)instruct);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // STRUCT ::= error tk_structure tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // STRUCT ::= tk_public error tk_Identificador tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // STRUCT ::= tk_public tk_structure error tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("STRUCT",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SUBPROCESS ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;
		int paramleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).left;
		int paramright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).right;
		Object param = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)).value;
		int inproleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inproright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inpro = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("SUBPROCESS");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)param);
            tmp.addHijo((Nodo)inpro);
            RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SUBPROCESS ::= error tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SUBPROCESS ::= tk_public error tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SUBPROCESS ::= tk_public tk_sub error tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SUBPROCESS ::= tk_public tk_sub tk_Identificador error PARAMETROS tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SUBPROCESS",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // MAIN ::= tk_sub tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;
		int inmainleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmainright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmain = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("MAIN");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)inmain);
            RESULT=tmp;

        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // MAIN ::= error tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // MAIN ::= tk_sub error tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // MAIN ::= tk_sub tk_main error tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // MAIN ::= tk_sub tk_main tk_ParentesisA error tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("MAIN",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ENDMODULE ::= tk_end tk_module tk_Linea 
            {
              Object RESULT =null;
		 
         Nodo tmp = new Nodo("ENDMODULE");
         tmp.setNumNodo(parser.contador++);
         RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ENDMODULE ::= error tk_module tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // ENDMODULE ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDMODULE",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // ENDFUNC ::= tk_end tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // ENDFUNC ::= error tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // ENDFUNC ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDFUNC",36, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // ENDSTRUCT ::= tk_end tk_structure tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // ENDSTRUCT ::= error tk_structure tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // ENDSTRUCT ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSTRUCT",35, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // ENDSUB ::= tk_end tk_sub tk_Linea 
            {
              Object RESULT =null;
		 
         Nodo tmp = new Nodo("ENDSUB");
         tmp.setNumNodo(parser.contador++);
         RESULT=tmp;

        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ENDSUB ::= error tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ENDSUB ::= tk_end error tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ENDSUB",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // OPCPROCESO ::= FUNC OPCPROCESO 
            {
              Object RESULT =null;
		int funcleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int funcright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object func = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("MODULE");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)func);
            tmp.addHijo((Nodo)inmod);
            RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // OPCPROCESO ::= STRUCT OPCPROCESO 
            {
              Object RESULT =null;
		int strtleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int strtright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object strt = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("MODULE");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)strt);
            tmp.addHijo((Nodo)inmod);
            RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OPCPROCESO ::= SUBPROCESS OPCPROCESO 
            {
              Object RESULT =null;
		int subproleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int subproright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object subpro = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("MODULE");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)subpro);
            tmp.addHijo((Nodo)inmod);
            RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // OPCPROCESO ::= MAIN 
            {
              Object RESULT =null;
		int mainleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int mainright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object main = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("MODULE");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)main);
            RESULT=tmp;
             
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // OPCPROCESO ::= error tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // OPCPROCESOAUX ::= FUNC OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // OPCPROCESOAUX ::= STRUCT OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // OPCPROCESOAUX ::= SUBPROCESS OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // OPCPROCESOAUX ::= ENDMODULE 
            {
              Object RESULT =null;
		int endmleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int endmright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object endm = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		 
            Nodo tmp = new Nodo("INMODULE");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)endm);
            RESULT=tmp;
            
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // OPCPROCESOAUX ::= error tk_Linea OPCPROCESOAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESOAUX",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // CUERPOSTRUC ::= VARIABLESTRUC CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // CUERPOSTRUC ::= COMENTARIO CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // CUERPOSTRUC ::= SUBPROCESS CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // CUERPOSTRUC ::= ENDSTRUCT 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // CUERPOSTRUC ::= error tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // VARIABLESTRUC ::= tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // VARIABLESTRUC ::= tk_Identificador tk_as tk_boolean tk_Igual OPCBOOL tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // VARIABLESTRUC ::= tk_Identificador tk_as tk_String tk_Igual tk_valorString tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // VARIABLESTRUC ::= tk_Identificador tk_as tk_integer tk_Igual tk_Numero tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CUERPOFUNC ::= SINTAXFOR_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CUERPOFUNC ::= SINTAXWHILE_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CUERPOFUNC ::= SINTAXIF_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // CUERPOFUNC ::= VARIABLE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // CUERPOFUNC ::= LLAMADAFUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CUERPOFUNC ::= ASIGNACIONVAL CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CUERPOFUNC ::= CONSOLEWRITE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CUERPOFUNC ::= OPERACIONES CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // CUERPOFUNC ::= COMENTARIO CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // CUERPOFUNC ::= ENDFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // CUERPOFUNC ::= error tk_Linea CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // SINTAXIF_FUNC ::= tk_if CONDICION tk_then tk_Linea INIF_FUNC tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // SINTAXELSEIF_FUNC ::= CONDICION tk_then tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // INIF_FUNC ::= SINTAXIF_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INIF_FUNC ::= VARIABLE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // INIF_FUNC ::= LLAMADAFUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // INIF_FUNC ::= ASIGNACIONVAL INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // INIF_FUNC ::= OPERACIONES INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // INIF_FUNC ::= CONSOLEWRITE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // INIF_FUNC ::= SINTAXFOR_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // INIF_FUNC ::= SINTAXWHILE_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // INIF_FUNC ::= tk_comentario tk_Linea INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // INIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // INIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // INIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // INIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // INIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // INIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // INIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // INIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // INIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // INIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // INIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // INIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // INELSE_FUNC ::= SINTAXIF_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // INELSE_FUNC ::= VARIABLE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // INELSE_FUNC ::= LLAMADAFUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // INELSE_FUNC ::= ASIGNACIONVAL INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // INELSE_FUNC ::= OPERACIONES INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // INELSE_FUNC ::= CONSOLEWRITE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // INELSE_FUNC ::= SINTAXFOR_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // INELSE_FUNC ::= SINTAXWHILE_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // INELSE_FUNC ::= tk_comentario tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // INELSE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // INELSE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // INELSE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // INELSE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // INELSE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // INELSE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // INELSE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // INELSE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // INELSE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // INELSE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // INELSEIF_FUNC ::= SINTAXIF_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // INELSEIF_FUNC ::= VARIABLE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // INELSEIF_FUNC ::= LLAMADAFUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // INELSEIF_FUNC ::= ASIGNACIONVAL INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // INELSEIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // INELSEIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // INELSEIF_FUNC ::= OPERACIONES INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // INELSEIF_FUNC ::= CONSOLEWRITE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // INELSEIF_FUNC ::= SINTAXFOR_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // INELSEIF_FUNC ::= tk_comentario tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // INELSEIF_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // INELSEIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // INELSEIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // INELSEIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // INELSEIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // INELSEIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // INELSEIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // INELSEIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // INELSEIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // SINTAXWHILE_FUNC ::= tk_do tk_while CONDICION tk_Linea INWHILE_FUNC tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FUNC",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // INWHILE_FUNC ::= SINTAXFOR_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // INWHILE_FUNC ::= SINTAXIF_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // INWHILE_FUNC ::= VARIABLE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // INWHILE_FUNC ::= LLAMADAFUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // INWHILE_FUNC ::= ASIGNACIONVAL INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // INWHILE_FUNC ::= CONSOLEWRITE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // INWHILE_FUNC ::= OPERACIONES INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // INWHILE_FUNC ::= SINTAXWHILE_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // INWHILE_FUNC ::= tk_comentario tk_Linea INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // INWHILE_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // INWHILE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // INWHILE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // INWHILE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // INWHILE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // INWHILE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // INWHILE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // INWHILE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // INWHILE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // INWHILE_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // INWHILE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // INWHILE_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // INFOR_FUNC ::= SINTAXWHILE_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // INFOR_FUNC ::= SINTAXFOR_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // INFOR_FUNC ::= SINTAXIF_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // INFOR_FUNC ::= VARIABLE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // INFOR_FUNC ::= LLAMADAFUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // INFOR_FUNC ::= ASIGNACIONVAL INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // INFOR_FUNC ::= CONSOLEWRITE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // INFOR_FUNC ::= OPERACIONES INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // INFOR_FUNC ::= tk_comentario tk_Linea INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // INFOR_FUNC ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // INFOR_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // INFOR_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // INFOR_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // INFOR_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // INFOR_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // INFOR_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // INFOR_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // INFOR_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // INFOR_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // INFOR_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // INFOR_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // CUERPOPRO ::= SINTAXFOR CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // CUERPOPRO ::= SINTAXIF CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // CUERPOPRO ::= VARIABLE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // CUERPOPRO ::= LLAMADAFUNC CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // CUERPOPRO ::= ASIGNACIONVAL CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // CUERPOPRO ::= CONSOLEWRITE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // CUERPOPRO ::= OPERACIONES CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // CUERPOPRO ::= SINTAXWHILE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // CUERPOPRO ::= COMENTARIO CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // CUERPOPRO ::= ENDSUB OPCPROCESOAUX 
            {
              Object RESULT =null;
		int endsleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int endsright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object ends = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		int inmodleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).left;
		int inmodright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()).right;
		Object inmod = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.peek()).value;
		
            Nodo tmp = new Nodo("INMAIN");
            tmp.setNumNodo(parser.contador++);
            tmp.addHijo((Nodo)ends);
            tmp.addHijo((Nodo)inmod);
            RESULT=tmp;
        
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // CUERPOPRO ::= error tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // PARAMETROS ::= tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // PARAMETROS ::= tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // PARAMETROS ::= tk_Coma tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // PARAMETROS ::= tk_Coma tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // PARAMETROS ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // VALOR ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // VARIABLE ::= tk_dim tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // VARIABLE ::= tk_dim tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // VARIABLE ::= tk_Identificador tk_punto tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // ASIGNACIONVAL ::= tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // ASIGNACIONVAL ::= tk_Identificador tk_Igual OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // ASIGNACIONVAL ::= tk_Identificador tk_Igual LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // ASIGNACIONVAL ::= tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // ASIGNACIONVAL ::= tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // ASIGNACIONVAL ::= tk_Identificador tk_punto tk_Identificador tk_Igual tk_cs tk_punto tk_readline tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // TIPOD ::= tk_String 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",5, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // CONDICION ::= iDNUM OPCRELACIONALES tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // CONDICION ::= iDNUM OPCRELACIONALES tk_ParentesisA iDNUM OPEARITMETICA iDNUM tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // OPERACIONES ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // OPERACIONES ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // OPERACIONAUX ::= iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // OPERACIONAUX ::= tk_ParentesisA iDNUM OPEARITMETICA OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // OPERACIONAUX ::= OPEARITMETICA iDNUM OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // OPERACIONAUX ::= iDNUM tk_ParentesisC OPERACIONAUX 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // OPERACIONAUX ::= OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // OPERACIONAUX ::= iDNUM tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // OPERACIONAUX ::= iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONAUX",31, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // OPEARITMETICA ::= tk_Signomod 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // OPEARITMETICA ::= tk_Potencia 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",27, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // IDENTIFICADORES ::= iDNUM IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",24, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // IDENTIFICADORESPRIMA ::= tk_Coma IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // IDENTIFICADORESPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // IDENTIFICADORESUB ::= tk_Coma iDNUM IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // IDENTIFICADORESUB ::= tk_Coma iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",28, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // LLAMADAFUNC ::= tk_Identificador iDNUM IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // LLAMADAFUNC ::= tk_Identificador iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_valorString tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_Identificador tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // SINTAXIF ::= tk_if CONDICION tk_then tk_Linea INIF tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // SINTAXELSEIF ::= CONDICION tk_then tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // INIF ::= SINTAXIF INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // INIF ::= VARIABLE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // INIF ::= LLAMADAFUNC INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // INIF ::= ASIGNACIONVAL INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // INIF ::= OPERACIONES INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // INIF ::= CONSOLEWRITE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // INIF ::= SINTAXFOR INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // INIF ::= SINTAXWHILE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // INIF ::= tk_comentario tk_Linea INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // INIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // INIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // INIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // INIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // INIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // INIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // INIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // INIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // INIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // INIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // INIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",11, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // INELSE ::= SINTAXIF INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // INELSE ::= VARIABLE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // INELSE ::= LLAMADAFUNC INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // INELSE ::= ASIGNACIONVAL INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // INELSE ::= OPERACIONES INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // INELSE ::= CONSOLEWRITE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // INELSE ::= SINTAXFOR INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // INELSE ::= SINTAXWHILE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // INELSE ::= tk_comentario tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // INELSE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // INELSE ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // INELSE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // INELSE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // INELSE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // INELSE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // INELSE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // INELSE ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // INELSE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // INELSEIF ::= SINTAXIF INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // INELSEIF ::= VARIABLE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // INELSEIF ::= LLAMADAFUNC INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // INELSEIF ::= ASIGNACIONVAL INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000001(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // INELSEIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // INELSEIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // INELSEIF ::= OPERACIONES INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INELSEIF ::= CONSOLEWRITE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INELSEIF ::= SINTAXFOR INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // INELSEIF ::= SINTAXWHILE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // INELSEIF ::= tk_comentario tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // INELSEIF ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // INELSEIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // INELSEIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // INELSEIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // INELSEIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // INELSEIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // INELSEIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INELSEIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INELSEIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // INFOR ::= SINTAXFOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INFOR ::= SINTAXIF_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INFOR ::= VARIABLE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INFOR ::= LLAMADAFUNC INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INFOR ::= ASIGNACIONVAL INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // INFOR ::= CONSOLEWRITE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // INFOR ::= OPERACIONES INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // INFOR ::= SINTAXWHILE_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // INFOR ::= tk_comentario tk_Linea INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // INFOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // INFOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // INFOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // INFOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // INFOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // INFOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // INFOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // INFOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // INFOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // INFOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",29, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // SINTAXIF_FOR ::= tk_if CONDICION tk_then tk_Linea INIF_FOR tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FOR",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // SINTAXELSEIF_FOR ::= CONDICION tk_then tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FOR",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // INIF_FOR ::= SINTAXIF_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // INIF_FOR ::= VARIABLE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // INIF_FOR ::= LLAMADAFUNC INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // INIF_FOR ::= ASIGNACIONVAL INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // INIF_FOR ::= OPERACIONES INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // INIF_FOR ::= CONSOLEWRITE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // INIF_FOR ::= SINTAXFOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // INIF_FOR ::= SINTAXWHILE_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // INIF_FOR ::= tk_comentario tk_Linea INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // INIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // INIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // INIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // INIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // INIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // INIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // INIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // INIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // INIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // INIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // INIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // INIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // INELSEIF_FOR ::= SINTAXIF_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // INELSEIF_FOR ::= VARIABLE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // INELSEIF_FOR ::= LLAMADAFUNC INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // INELSEIF_FOR ::= ASIGNACIONVAL INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // INELSEIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // INELSEIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // INELSEIF_FOR ::= OPERACIONES INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // INELSEIF_FOR ::= CONSOLEWRITE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // INELSEIF_FOR ::= SINTAXFOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // INELSEIF_FOR ::= SINTAXWHILE_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // INELSEIF_FOR ::= tk_comentario tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // INELSEIF_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // INELSEIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // INELSEIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // INELSEIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // INELSEIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // INELSEIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // INELSEIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // INELSEIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // INELSEIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // INELSEIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // INELSE_FOR ::= SINTAXIF_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // INELSE_FOR ::= VARIABLE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // INELSE_FOR ::= LLAMADAFUNC INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // INELSE_FOR ::= ASIGNACIONVAL INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // INELSE_FOR ::= OPERACIONES INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // INELSE_FOR ::= CONSOLEWRITE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // INELSE_FOR ::= SINTAXFOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // INELSE_FOR ::= SINTAXWHILE_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // INELSE_FOR ::= tk_comentario tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // INELSE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // INELSE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // INELSE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // INELSE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // INELSE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // INELSE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // INELSE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // INELSE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // INELSE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // INELSE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // SINTAXWHILE_FOR ::= tk_do tk_while CONDICION tk_Linea INWHILE_FOR tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FOR",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // INWHILE_FOR ::= SINTAXFOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // INWHILE_FOR ::= VARIABLE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // INWHILE_FOR ::= LLAMADAFUNC INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // INWHILE_FOR ::= ASIGNACIONVAL INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // INWHILE_FOR ::= CONSOLEWRITE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // INWHILE_FOR ::= OPERACIONES INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // INWHILE_FOR ::= SINTAXWHILE_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // INWHILE_FOR ::= SINTAXIF_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // INWHILE_FOR ::= tk_comentario tk_Linea INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // INWHILE_FOR ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // INWHILE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // INWHILE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // INWHILE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // INWHILE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // INWHILE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // INWHILE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // INWHILE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // INWHILE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // INWHILE_FOR ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // INWHILE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // SINTAXIF_WHILE ::= tk_if CONDICION tk_then tk_Linea INIF_WHILE tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_WHILE",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // SINTAXELSEIF_WHILE ::= CONDICION tk_then tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_WHILE",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // INIF_WHILE ::= SINTAXIF_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INIF_WHILE ::= VARIABLE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INIF_WHILE ::= LLAMADAFUNC INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INIF_WHILE ::= ASIGNACIONVAL INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INIF_WHILE ::= OPERACIONES INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INIF_WHILE ::= CONSOLEWRITE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INIF_WHILE ::= SINTAXFOR_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INIF_WHILE ::= SINTAXWHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INIF_WHILE ::= tk_comentario tk_Linea INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // INIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // INIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // INIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // INIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // INIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // INIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // INIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",40, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // INELSEIF_WHILE ::= SINTAXWHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // INELSEIF_WHILE ::= SINTAXIF_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // INELSEIF_WHILE ::= VARIABLE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // INELSEIF_WHILE ::= LLAMADAFUNC INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // INELSEIF_WHILE ::= ASIGNACIONVAL INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // INELSEIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // INELSEIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // INELSEIF_WHILE ::= OPERACIONES INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // INELSEIF_WHILE ::= CONSOLEWRITE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // INELSEIF_WHILE ::= SINTAXFOR_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // INELSEIF_WHILE ::= tk_comentario tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // INELSEIF_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // INELSEIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // INELSEIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // INELSEIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // INELSEIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // INELSEIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // INELSEIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // INELSEIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // INELSEIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // INELSEIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",42, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // INELSE_WHILE ::= SINTAXWHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // INELSE_WHILE ::= SINTAXIF_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // INELSE_WHILE ::= VARIABLE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // INELSE_WHILE ::= LLAMADAFUNC INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // INELSE_WHILE ::= ASIGNACIONVAL INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // INELSE_WHILE ::= OPERACIONES INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // INELSE_WHILE ::= CONSOLEWRITE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // INELSE_WHILE ::= SINTAXFOR_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // INELSE_WHILE ::= tk_comentario tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // INELSE_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // INELSE_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // INELSE_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // INELSE_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // INELSE_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // INELSE_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // INELSE_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // INELSE_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // INELSE_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // INELSE_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",41, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // INFOR_WHILE ::= SINTAXWHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // INFOR_WHILE ::= SINTAXFOR_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // INFOR_WHILE ::= SINTAXIF_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // INFOR_WHILE ::= VARIABLE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // INFOR_WHILE ::= LLAMADAFUNC INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // INFOR_WHILE ::= ASIGNACIONVAL INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // INFOR_WHILE ::= CONSOLEWRITE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // INFOR_WHILE ::= OPERACIONES INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // INFOR_WHILE ::= tk_comentario tk_Linea INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // INFOR_WHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // INFOR_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // INFOR_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // INFOR_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // INFOR_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // INFOR_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // INFOR_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // INFOR_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // INFOR_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // INFOR_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // INFOR_WHILE ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_Linea INWHILE tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // INWHILE ::= SINTAXWHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // INWHILE ::= SINTAXFOR_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // INWHILE ::= SINTAXIF_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // INWHILE ::= VARIABLE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // INWHILE ::= LLAMADAFUNC INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // INWHILE ::= ASIGNACIONVAL INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // INWHILE ::= CONSOLEWRITE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // INWHILE ::= OPERACIONES INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // INWHILE ::= tk_comentario tk_Linea INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // INWHILE ::= tk_comentario tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // INWHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // INWHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // INWHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // INWHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // INWHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // INWHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // INWHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // INWHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // INWHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Gramatica$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Gramatica$do_action_part00000001(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
