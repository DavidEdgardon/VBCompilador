
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores;

import java_cup.runtime.Symbol;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Gramatica extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public Gramatica() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Gramatica(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Gramatica(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01b5\000\002\002\004\000\002\002\007\000\002\003" +
    "\012\000\002\003\017\000\002\003\011\000\002\003\013" +
    "\000\002\016\005\000\002\040\005\000\002\040\004\000" +
    "\002\013\004\000\002\013\004\000\002\013\004\000\002" +
    "\013\004\000\002\013\004\000\002\013\004\000\002\013" +
    "\004\000\002\013\004\000\002\013\003\000\002\013\003" +
    "\000\002\013\003\000\002\013\003\000\002\013\003\000" +
    "\002\013\003\000\002\013\003\000\002\013\003\000\002" +
    "\013\005\000\002\077\012\000\002\100\006\000\002\101" +
    "\004\000\002\101\004\000\002\101\004\000\002\101\004" +
    "\000\002\101\004\000\002\101\004\000\002\101\004\000" +
    "\002\101\004\000\002\101\003\000\002\101\003\000\002" +
    "\101\003\000\002\101\003\000\002\101\003\000\002\101" +
    "\003\000\002\101\003\000\002\101\003\000\002\101\005" +
    "\000\002\101\005\000\002\101\004\000\002\103\004\000" +
    "\002\103\004\000\002\103\004\000\002\103\004\000\002" +
    "\103\004\000\002\103\004\000\002\103\004\000\002\103" +
    "\004\000\002\103\003\000\002\103\003\000\002\103\003" +
    "\000\002\103\003\000\002\103\003\000\002\103\003\000" +
    "\002\103\003\000\002\103\003\000\002\103\005\000\002" +
    "\102\004\000\002\102\004\000\002\102\004\000\002\102" +
    "\004\000\002\102\005\000\002\102\004\000\002\102\004" +
    "\000\002\102\004\000\002\102\004\000\002\102\004\000" +
    "\002\102\003\000\002\102\003\000\002\102\003\000\002" +
    "\102\003\000\002\102\003\000\002\102\003\000\002\102" +
    "\003\000\002\102\003\000\002\102\005\000\002\075\011" +
    "\000\002\076\004\000\002\076\004\000\002\076\004\000" +
    "\002\076\004\000\002\076\004\000\002\076\004\000\002" +
    "\076\004\000\002\076\004\000\002\076\003\000\002\076" +
    "\003\000\002\076\003\000\002\076\003\000\002\076\003" +
    "\000\002\076\003\000\002\076\003\000\002\076\003\000" +
    "\002\076\005\000\002\076\005\000\002\076\005\000\002" +
    "\105\017\000\002\105\014\000\002\104\004\000\002\104" +
    "\004\000\002\104\004\000\002\104\004\000\002\104\004" +
    "\000\002\104\004\000\002\104\004\000\002\104\004\000" +
    "\002\104\003\000\002\104\003\000\002\104\003\000\002" +
    "\104\003\000\002\104\003\000\002\104\003\000\002\104" +
    "\003\000\002\104\003\000\002\104\005\000\002\104\005" +
    "\000\002\104\005\000\002\014\004\000\002\014\004\000" +
    "\002\014\004\000\002\014\004\000\002\014\004\000\002" +
    "\014\004\000\002\014\004\000\002\014\004\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\014\003" +
    "\000\002\014\003\000\002\014\003\000\002\014\003\000" +
    "\002\014\003\000\002\014\005\000\002\004\007\000\002" +
    "\004\006\000\002\004\010\000\002\004\007\000\002\004" +
    "\003\000\002\034\003\000\002\034\003\000\002\034\003" +
    "\000\002\005\007\000\002\005\011\000\002\005\011\000" +
    "\002\005\007\000\002\005\010\000\002\006\006\000\002" +
    "\006\010\000\002\012\003\000\002\012\003\000\002\011" +
    "\003\000\002\011\003\000\002\011\003\000\002\017\003" +
    "\000\002\017\003\000\002\027\003\000\002\027\003\000" +
    "\002\027\003\000\002\027\003\000\002\027\003\000\002" +
    "\033\003\000\002\033\003\000\002\025\005\000\002\025" +
    "\005\000\002\025\007\000\002\025\003\000\002\025\011" +
    "\000\002\030\004\000\002\030\003\000\002\047\006\000" +
    "\002\050\003\000\002\050\003\000\002\050\003\000\002" +
    "\050\003\000\002\043\004\000\002\044\004\000\002\044" +
    "\003\000\002\051\005\000\002\051\004\000\002\042\006" +
    "\000\002\042\006\000\002\042\005\000\002\042\010\000" +
    "\002\042\007\000\002\010\011\000\002\020\012\000\002" +
    "\024\006\000\002\021\004\000\002\021\004\000\002\021" +
    "\004\000\002\021\004\000\002\021\004\000\002\021\004" +
    "\000\002\021\004\000\002\021\004\000\002\021\003\000" +
    "\002\021\003\000\002\021\003\000\002\021\003\000\002" +
    "\021\003\000\002\021\003\000\002\021\003\000\002\021" +
    "\003\000\002\021\005\000\002\021\004\000\002\022\004" +
    "\000\002\022\004\000\002\022\004\000\002\022\004\000" +
    "\002\022\004\000\002\022\004\000\002\022\004\000\002" +
    "\022\004\000\002\022\003\000\002\022\003\000\002\022" +
    "\003\000\002\022\003\000\002\022\003\000\002\022\003" +
    "\000\002\022\003\000\002\022\003\000\002\023\004\000" +
    "\002\023\004\000\002\023\004\000\002\023\004\000\002" +
    "\023\005\000\002\023\004\000\002\023\004\000\002\023" +
    "\004\000\002\023\004\000\002\023\004\000\002\023\003" +
    "\000\002\023\003\000\002\023\003\000\002\023\003\000" +
    "\002\023\003\000\002\023\003\000\002\023\003\000\002" +
    "\023\003\000\002\026\017\000\002\026\014\000\002\055" +
    "\004\000\002\055\004\000\002\055\004\000\002\055\004" +
    "\000\002\055\004\000\002\055\004\000\002\055\004\000" +
    "\002\055\004\000\002\055\003\000\002\055\003\000\002" +
    "\055\003\000\002\055\003\000\002\055\003\000\002\055" +
    "\003\000\002\055\003\000\002\055\003\000\002\055\005" +
    "\000\002\070\012\000\002\071\006\000\002\072\004\000" +
    "\002\072\004\000\002\072\004\000\002\072\004\000\002" +
    "\072\004\000\002\072\004\000\002\072\004\000\002\072" +
    "\004\000\002\072\003\000\002\072\003\000\002\072\003" +
    "\000\002\072\003\000\002\072\003\000\002\072\003\000" +
    "\002\072\003\000\002\072\003\000\002\072\005\000\002" +
    "\072\005\000\002\072\004\000\002\073\004\000\002\073" +
    "\004\000\002\073\004\000\002\073\004\000\002\073\005" +
    "\000\002\073\004\000\002\073\004\000\002\073\004\000" +
    "\002\073\004\000\002\073\004\000\002\073\003\000\002" +
    "\073\003\000\002\073\003\000\002\073\003\000\002\073" +
    "\003\000\002\073\003\000\002\073\003\000\002\073\003" +
    "\000\002\073\005\000\002\074\004\000\002\074\004\000" +
    "\002\074\004\000\002\074\004\000\002\074\004\000\002" +
    "\074\004\000\002\074\004\000\002\074\004\000\002\074" +
    "\003\000\002\074\003\000\002\074\003\000\002\074\003" +
    "\000\002\074\003\000\002\074\003\000\002\074\003\000" +
    "\002\074\003\000\002\074\005\000\002\066\011\000\002" +
    "\067\004\000\002\067\004\000\002\067\004\000\002\067" +
    "\004\000\002\067\004\000\002\067\004\000\002\067\004" +
    "\000\002\067\004\000\002\067\003\000\002\067\003\000" +
    "\002\067\003\000\002\067\003\000\002\067\003\000\002" +
    "\067\003\000\002\067\003\000\002\067\003\000\002\067" +
    "\005\000\002\067\005\000\002\057\012\000\002\063\006" +
    "\000\002\060\004\000\002\060\004\000\002\060\004\000" +
    "\002\060\004\000\002\060\004\000\002\060\004\000\002" +
    "\060\004\000\002\060\004\000\002\060\003\000\002\060" +
    "\003\000\002\060\003\000\002\060\003\000\002\060\003" +
    "\000\002\060\003\000\002\060\003\000\002\060\003\000" +
    "\002\060\005\000\002\060\005\000\002\060\004\000\002" +
    "\062\004\000\002\062\004\000\002\062\004\000\002\062" +
    "\004\000\002\062\004\000\002\062\005\000\002\062\004" +
    "\000\002\062\004\000\002\062\004\000\002\062\004\000" +
    "\002\062\003\000\002\062\003\000\002\062\003\000\002" +
    "\062\003\000\002\062\003\000\002\062\003\000\002\062" +
    "\003\000\002\062\003\000\002\062\005\000\002\061\004" +
    "\000\002\061\004\000\002\061\004\000\002\061\004\000" +
    "\002\061\004\000\002\061\004\000\002\061\004\000\002" +
    "\061\004\000\002\061\003\000\002\061\003\000\002\061" +
    "\003\000\002\061\003\000\002\061\003\000\002\061\003" +
    "\000\002\061\003\000\002\061\003\000\002\061\005\000" +
    "\002\065\017\000\002\065\014\000\002\064\004\000\002" +
    "\064\004\000\002\064\004\000\002\064\004\000\002\064" +
    "\004\000\002\064\004\000\002\064\004\000\002\064\004" +
    "\000\002\064\003\000\002\064\003\000\002\064\003\000" +
    "\002\064\003\000\002\064\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\003\000\002\064\005\000\002\064" +
    "\005\000\002\031\011\000\002\056\004\000\002\056\004" +
    "\000\002\056\004\000\002\056\004\000\002\056\004\000" +
    "\002\056\004\000\002\056\004\000\002\056\004\000\002" +
    "\056\003\000\002\056\003\000\002\056\003\000\002\056" +
    "\003\000\002\056\003\000\002\056\003\000\002\056\003" +
    "\000\002\056\003\000\002\056\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02be\000\004\037\005\001\002\000\004\002\u02c0\001" +
    "\002\000\010\034\006\035\007\036\010\001\002\000\004" +
    "\076\u020c\001\002\000\006\073\031\076\032\001\002\000" +
    "\004\076\011\001\002\000\004\074\012\001\002\000\004" +
    "\076\013\001\002\000\004\065\021\001\002\000\004\072" +
    "\015\001\002\000\004\036\016\001\002\000\004\074\017" +
    "\001\002\000\004\037\005\001\002\000\004\002\ufffc\001" +
    "\002\000\010\012\023\013\025\014\024\001\002\000\004" +
    "\072\ufffb\001\002\000\016\015\uff62\056\uff62\060\uff62\061" +
    "\uff62\074\uff62\076\uff62\001\002\000\016\015\uff63\056\uff63" +
    "\060\uff63\061\uff63\074\uff63\076\uff63\001\002\000\016\015" +
    "\uff61\056\uff61\060\uff61\061\uff61\074\uff61\076\uff61\001\002" +
    "\000\004\074\027\001\002\000\006\072\ufff9\076\013\001" +
    "\002\000\004\072\ufffa\001\002\000\004\057\u0208\001\002" +
    "\000\004\057\033\001\002\000\012\015\036\060\035\061" +
    "\037\076\034\001\002\000\004\065\u0205\001\002\000\006" +
    "\065\uff70\074\uff70\001\002\000\004\076\u0201\001\002\000" +
    "\006\015\u01f9\076\u01f8\001\002\000\004\074\041\001\002" +
    "\000\022\007\053\016\060\022\047\031\062\064\043\072" +
    "\057\076\051\077\063\001\002\000\026\002\uff7d\007\053" +
    "\016\060\022\047\031\062\037\uff7d\064\043\072\057\076" +
    "\051\077\063\001\002\000\004\076\u01ea\001\002\000\026" +
    "\002\uff79\007\053\016\060\022\047\031\062\037\uff79\064" +
    "\043\072\057\076\051\077\063\001\002\000\026\002\uff78" +
    "\007\053\016\060\022\047\031\062\037\uff78\064\043\072" +
    "\057\076\051\077\063\001\002\000\026\002\uff76\007\053" +
    "\016\060\022\047\031\062\037\uff76\064\043\072\057\076" +
    "\051\077\063\001\002\000\004\076\u0158\001\002\000\004" +
    "\037\005\001\002\000\024\041\uff59\042\uff59\043\uff59\044" +
    "\uff59\056\u013b\057\u0139\063\u0138\076\066\077\063\001\002" +
    "\000\026\002\uff7a\007\053\016\060\022\047\031\062\037" +
    "\uff7a\064\043\072\057\076\051\077\063\001\002\000\004" +
    "\063\u0131\001\002\000\026\002\uff7b\007\053\016\060\022" +
    "\047\031\062\037\uff7b\064\043\072\057\076\051\077\063" +
    "\001\002\000\026\002\uff77\007\053\016\060\022\047\031" +
    "\062\037\uff77\064\043\072\057\076\051\077\063\001\002" +
    "\000\012\041\112\042\111\043\107\044\106\001\002\000" +
    "\004\035\u012d\001\002\000\012\032\065\033\071\076\066" +
    "\077\063\001\002\000\026\002\uff7c\007\053\016\060\022" +
    "\047\031\062\037\uff7c\064\043\072\057\076\051\077\063" +
    "\001\002\000\004\025\064\001\002\000\040\017\uff58\023" +
    "\uff58\026\uff58\041\uff58\042\uff58\043\uff58\044\uff58\052\uff58" +
    "\053\uff58\054\uff58\055\uff58\056\uff58\060\uff58\061\uff58\074" +
    "\uff58\001\002\000\012\032\065\033\071\076\066\077\063" +
    "\001\002\000\006\017\uff65\074\uff65\001\002\000\036\023" +
    "\uff59\026\uff59\041\uff59\042\uff59\043\uff59\044\uff59\052\uff59" +
    "\053\uff59\054\uff59\055\uff59\056\uff59\060\uff59\061\uff59\074" +
    "\uff59\001\002\000\004\074\124\001\002\000\006\017\uff54" +
    "\074\uff54\001\002\000\006\017\uff64\074\uff64\001\002\000" +
    "\014\052\100\053\074\054\076\055\075\056\077\001\002" +
    "\000\014\032\065\033\071\057\103\076\101\077\063\001" +
    "\002\000\014\032\uff5d\033\uff5d\057\uff5d\076\uff5d\077\uff5d" +
    "\001\002\000\014\032\uff5b\033\uff5b\057\uff5b\076\uff5b\077" +
    "\uff5b\001\002\000\014\032\uff5c\033\uff5c\057\uff5c\076\uff5c" +
    "\077\uff5c\001\002\000\014\032\uff5a\033\uff5a\057\uff5a\076" +
    "\uff5a\077\uff5a\001\002\000\014\032\uff5e\033\uff5e\057\uff5e" +
    "\076\uff5e\077\uff5e\001\002\000\010\017\uff59\057\115\074" +
    "\uff59\001\002\000\006\017\uff56\074\uff56\001\002\000\006" +
    "\076\066\077\063\001\002\000\006\017\uff57\074\uff57\001" +
    "\002\000\012\041\112\042\111\043\107\044\106\001\002" +
    "\000\006\076\uff4c\077\uff4c\001\002\000\006\076\uff4d\077" +
    "\uff4d\001\002\000\006\076\066\077\063\001\002\000\006" +
    "\076\uff4e\077\uff4e\001\002\000\006\076\uff4f\077\uff4f\001" +
    "\002\000\004\060\114\001\002\000\006\017\uff53\074\uff53" +
    "\001\002\000\006\076\066\077\063\001\002\000\006\017" +
    "\uff55\074\uff55\001\002\000\006\060\120\061\122\001\002" +
    "\000\012\017\uff49\060\uff49\061\uff49\074\uff49\001\002\000" +
    "\012\017\uff4b\060\uff4b\061\uff4b\074\uff4b\001\002\000\006" +
    "\076\066\077\063\001\002\000\012\017\uff4a\060\uff4a\061" +
    "\uff4a\074\uff4a\001\002\000\022\007\053\016\136\022\130" +
    "\031\062\064\043\066\140\076\051\077\063\001\002\000" +
    "\024\007\053\016\136\022\130\024\ufe50\031\062\064\043" +
    "\066\140\076\051\077\063\001\002\000\024\007\053\016" +
    "\136\022\130\024\ufe4f\031\062\064\043\066\140\076\051" +
    "\077\063\001\002\000\024\007\053\016\136\022\130\024" +
    "\ufe55\031\062\064\043\066\140\076\051\077\063\001\002" +
    "\000\004\076\270\001\002\000\024\007\053\016\136\022" +
    "\130\024\ufe51\031\062\064\043\066\140\076\051\077\063" +
    "\001\002\000\024\007\053\016\136\022\130\024\ufe52\031" +
    "\062\064\043\066\140\076\051\077\063\001\002\000\024" +
    "\007\053\016\136\022\130\024\ufe4e\031\062\064\043\066" +
    "\140\076\051\077\063\001\002\000\024\007\053\016\136" +
    "\022\130\024\ufe54\031\062\064\043\066\140\076\051\077" +
    "\063\001\002\000\024\007\053\016\136\022\130\024\ufe53" +
    "\031\062\064\043\066\140\076\051\077\063\001\002\000" +
    "\012\032\065\033\071\076\066\077\063\001\002\000\004" +
    "\024\143\001\002\000\004\031\141\001\002\000\004\074" +
    "\142\001\002\000\004\024\ufe4d\001\002\000\004\074\144" +
    "\001\002\000\040\002\ufe5e\007\ufe5e\016\ufe5e\020\ufe5e\021" +
    "\ufe5e\022\ufe5e\024\ufe5e\030\ufe5e\031\ufe5e\037\ufe5e\064\ufe5e" +
    "\066\ufe5e\072\ufe5e\076\ufe5e\077\ufe5e\001\002\000\004\017" +
    "\146\001\002\000\004\074\147\001\002\000\026\007\053" +
    "\016\136\020\151\021\150\022\130\031\062\064\043\066" +
    "\163\076\051\077\063\001\002\000\004\074\261\001\002" +
    "\000\012\032\065\033\071\076\066\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufe9e\076\051\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufe9d\076\051\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufe9a\076\051\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufe9f\076\051\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufe9c\076\051\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufea0\076\051\077\063\001\002\000" +
    "\030\007\053\016\136\020\151\021\150\022\130\031\062" +
    "\064\043\066\163\072\ufe9b\076\051\077\063\001\002\000" +
    "\004\072\167\001\002\000\030\007\053\016\136\020\151" +
    "\021\150\022\130\031\062\064\043\066\163\072\ufea1\076" +
    "\051\077\063\001\002\000\004\031\164\001\002\000\004" +
    "\074\165\001\002\000\004\072\ufe99\001\002\000\004\072" +
    "\ufea9\001\002\000\004\016\170\001\002\000\004\074\171" +
    "\001\002\000\034\007\ufeab\016\ufeab\020\ufeab\021\ufeab\022" +
    "\ufeab\024\ufeab\030\ufeab\031\ufeab\064\ufeab\066\ufeab\072\ufeab" +
    "\076\ufeab\077\ufeab\001\002\000\004\072\ufea3\001\002\000" +
    "\004\072\ufea8\001\002\000\004\072\ufea5\001\002\000\004" +
    "\072\ufea7\001\002\000\004\072\ufea2\001\002\000\004\072" +
    "\ufea4\001\002\000\004\072\ufea6\001\002\000\004\072\ufe97" +
    "\001\002\000\004\017\203\001\002\000\004\074\204\001" +
    "\002\000\026\007\053\016\136\020\206\021\205\022\130" +
    "\031\062\064\043\066\220\076\051\077\063\001\002\000" +
    "\004\074\234\001\002\000\012\032\065\033\071\076\066" +
    "\077\063\001\002\000\030\007\053\016\136\020\206\021" +
    "\205\022\130\031\062\064\043\066\220\072\ufe88\076\051" +
    "\077\063\001\002\000\030\007\053\016\136\020\206\021" +
    "\205\022\130\031\062\064\043\066\220\072\ufe87\076\051" +
    "\077\063\001\002\000\030\007\053\016\136\020\206\021" +
    "\205\022\130\031\062\064\043\066\220\072\ufe8c\076\051" +
    "\077\063\001\002\000\004\072\ufeaa\001\002\000\030\007" +
    "\053\016\136\020\206\021\205\022\130\031\062\064\043" +
    "\066\220\072\ufe89\076\051\077\063\001\002\000\030\007" +
    "\053\016\136\020\206\021\205\022\130\031\062\064\043" +
    "\066\220\072\ufe86\076\051\077\063\001\002\000\030\007" +
    "\053\016\136\020\206\021\205\022\130\031\062\064\043" +
    "\066\220\072\ufe8a\076\051\077\063\001\002\000\030\007" +
    "\053\016\136\020\206\021\205\022\130\031\062\064\043" +
    "\066\220\072\ufe85\076\051\077\063\001\002\000\030\007" +
    "\053\016\136\020\206\021\205\022\130\031\062\064\043" +
    "\066\220\072\ufe8b\076\051\077\063\001\002\000\004\031" +
    "\221\001\002\000\004\074\222\001\002\000\004\072\ufe84" +
    "\001\002\000\004\072\ufe95\001\002\000\004\072\ufe8d\001" +
    "\002\000\004\072\ufe94\001\002\000\004\072\ufe8f\001\002" +
    "\000\004\072\ufe93\001\002\000\004\072\ufe96\001\002\000" +
    "\004\072\ufe8e\001\002\000\004\072\ufe92\001\002\000\004" +
    "\072\ufe90\001\002\000\022\007\053\016\136\022\130\031" +
    "\062\064\043\066\245\076\051\077\063\001\002\000\024" +
    "\007\053\016\136\022\130\031\062\064\043\066\245\072" +
    "\ufe77\076\051\077\063\001\002\000\024\007\053\016\136" +
    "\022\130\031\062\064\043\066\245\072\ufe76\076\051\077" +
    "\063\001\002\000\024\007\053\016\136\022\130\031\062" +
    "\064\043\066\245\072\ufe7b\076\051\077\063\001\002\000" +
    "\024\007\053\016\136\022\130\031\062\064\043\066\245" +
    "\072\ufe78\076\051\077\063\001\002\000\024\007\053\016" +
    "\136\022\130\031\062\064\043\066\245\072\ufe79\076\051" +
    "\077\063\001\002\000\024\007\053\016\136\022\130\031" +
    "\062\064\043\066\245\072\ufe75\076\051\077\063\001\002" +
    "\000\024\007\053\016\136\022\130\031\062\064\043\066" +
    "\245\072\ufe74\076\051\077\063\001\002\000\024\007\053" +
    "\016\136\022\130\031\062\064\043\066\245\072\ufe7a\076" +
    "\051\077\063\001\002\000\004\031\247\001\002\000\004" +
    "\072\ufe91\001\002\000\004\074\250\001\002\000\004\072" +
    "\ufe73\001\002\000\004\072\ufe82\001\002\000\004\072\ufe7c" +
    "\001\002\000\004\072\ufe7e\001\002\000\004\072\ufe81\001" +
    "\002\000\004\072\ufe80\001\002\000\004\072\ufe83\001\002" +
    "\000\004\072\ufe7d\001\002\000\004\072\ufe7f\001\002\000" +
    "\022\007\053\016\136\022\130\031\062\064\043\066\245" +
    "\076\051\077\063\001\002\000\004\072\ufe98\001\002\000" +
    "\004\024\ufe5b\001\002\000\004\024\ufe5c\001\002\000\004" +
    "\024\ufe56\001\002\000\004\024\ufe5a\001\002\000\004\024" +
    "\ufe59\001\002\000\004\056\271\001\002\000\006\076\066" +
    "\077\063\001\002\000\004\023\273\001\002\000\006\076" +
    "\066\077\063\001\002\000\022\007\053\016\136\022\130" +
    "\031\062\064\043\066\316\076\051\077\063\001\002\000" +
    "\014\026\277\041\112\042\111\043\107\044\106\001\002" +
    "\000\006\076\066\077\063\001\002\000\006\042\302\077" +
    "\301\001\002\000\004\074\304\001\002\000\004\074\uff51" +
    "\001\002\000\004\077\303\001\002\000\004\074\uff52\001" +
    "\002\000\022\007\053\016\136\022\130\031\062\064\043" +
    "\066\316\076\051\077\063\001\002\000\024\007\053\016" +
    "\136\022\130\030\ufe63\031\062\064\043\066\316\076\051" +
    "\077\063\001\002\000\024\007\053\016\136\022\130\030" +
    "\ufe62\031\062\064\043\066\316\076\051\077\063\001\002" +
    "\000\024\007\053\016\136\022\130\030\ufe68\031\062\064" +
    "\043\066\316\076\051\077\063\001\002\000\024\007\053" +
    "\016\136\022\130\030\ufe64\031\062\064\043\066\316\076" +
    "\051\077\063\001\002\000\004\030\327\001\002\000\024" +
    "\007\053\016\136\022\130\030\ufe65\031\062\064\043\066" +
    "\316\076\051\077\063\001\002\000\024\007\053\016\136" +
    "\022\130\030\ufe61\031\062\064\043\066\316\076\051\077" +
    "\063\001\002\000\024\007\053\016\136\022\130\030\ufe67" +
    "\031\062\064\043\066\316\076\051\077\063\001\002\000" +
    "\024\007\053\016\136\022\130\030\ufe66\031\062\064\043" +
    "\066\316\076\051\077\063\001\002\000\006\022\320\031" +
    "\317\001\002\000\004\074\322\001\002\000\004\074\321" +
    "\001\002\000\004\030\ufe5f\001\002\000\004\030\ufe60\001" +
    "\002\000\004\030\ufe6e\001\002\000\004\030\ufe6f\001\002" +
    "\000\004\030\ufe69\001\002\000\004\030\ufe6d\001\002\000" +
    "\004\076\330\001\002\000\004\074\331\001\002\000\034" +
    "\007\ufe72\016\ufe72\020\ufe72\021\ufe72\022\ufe72\024\ufe72\030" +
    "\ufe72\031\ufe72\064\ufe72\066\ufe72\072\ufe72\076\ufe72\077\ufe72" +
    "\001\002\000\004\030\ufe6c\001\002\000\004\030\ufe70\001" +
    "\002\000\004\030\ufe6a\001\002\000\004\030\ufe6b\001\002" +
    "\000\004\074\337\001\002\000\040\002\uff50\007\uff50\016" +
    "\uff50\020\uff50\021\uff50\022\uff50\024\uff50\030\uff50\031\uff50" +
    "\037\uff50\064\uff50\066\uff50\072\uff50\076\uff50\077\uff50\001" +
    "\002\000\004\030\341\001\002\000\004\076\342\001\002" +
    "\000\004\074\343\001\002\000\034\007\ufe71\016\ufe71\020" +
    "\ufe71\021\ufe71\022\ufe71\024\ufe71\030\ufe71\031\ufe71\064\ufe71" +
    "\066\ufe71\072\ufe71\076\ufe71\077\ufe71\001\002\000\004\024" +
    "\ufe5d\001\002\000\004\024\ufe57\001\002\000\004\024\ufe58" +
    "\001\002\000\006\002\uff84\037\uff84\001\002\000\004\017" +
    "\351\001\002\000\004\074\352\001\002\000\024\007\053" +
    "\016\060\020\355\021\353\022\047\031\062\064\043\076" +
    "\051\077\063\001\002\000\004\074\u012b\001\002\000\026" +
    "\007\053\016\060\020\355\021\353\022\047\031\062\064" +
    "\043\072\uff30\076\051\077\063\001\002\000\012\032\065" +
    "\033\071\076\066\077\063\001\002\000\026\007\053\016" +
    "\060\020\355\021\353\022\047\031\062\064\043\072\uff33" +
    "\076\051\077\063\001\002\000\026\007\053\016\060\020" +
    "\355\021\353\022\047\031\062\064\043\072\uff32\076\051" +
    "\077\063\001\002\000\026\007\053\016\060\020\355\021" +
    "\353\022\047\031\062\064\043\072\uff2f\076\051\077\063" +
    "\001\002\000\026\007\053\016\060\020\355\021\353\022" +
    "\047\031\062\064\043\072\uff34\076\051\077\063\001\002" +
    "\000\026\007\053\016\060\020\355\021\353\022\047\031" +
    "\062\064\043\072\uff31\076\051\077\063\001\002\000\026" +
    "\007\053\016\060\020\355\021\353\022\047\031\062\064" +
    "\043\072\uff35\076\051\077\063\001\002\000\004\072\367" +
    "\001\002\000\026\007\053\016\060\020\355\021\353\022" +
    "\047\031\062\064\043\072\uff36\076\051\077\063\001\002" +
    "\000\004\072\uff3e\001\002\000\004\016\370\001\002\000" +
    "\004\074\371\001\002\000\032\002\uff40\007\uff40\016\uff40" +
    "\020\uff40\021\uff40\022\uff40\031\uff40\037\uff40\064\uff40\072" +
    "\uff40\076\uff40\077\uff40\001\002\000\004\072\uff3d\001\002" +
    "\000\004\072\uff3a\001\002\000\004\072\uff3c\001\002\000" +
    "\004\072\uff37\001\002\000\004\072\uff39\001\002\000\004" +
    "\072\uff3b\001\002\000\004\017\u0102\001\002\000\004\072" +
    "\uff2d\001\002\000\004\074\u0103\001\002\000\024\007\053" +
    "\016\060\020\u0106\021\u0104\022\047\031\062\064\043\076" +
    "\051\077\063\001\002\000\004\074\u0118\001\002\000\026" +
    "\007\053\016\060\020\u0106\021\u0104\022\047\031\062\064" +
    "\043\072\uff0c\076\051\077\063\001\002\000\012\032\065" +
    "\033\071\076\066\077\063\001\002\000\026\007\053\016" +
    "\060\020\u0106\021\u0104\022\047\031\062\064\043\072\uff0f" +
    "\076\051\077\063\001\002\000\026\007\053\016\060\020" +
    "\u0106\021\u0104\022\047\031\062\064\043\072\uff0e\076\051" +
    "\077\063\001\002\000\026\007\053\016\060\020\u0106\021" +
    "\u0104\022\047\031\062\064\043\072\uff0b\076\051\077\063" +
    "\001\002\000\026\007\053\016\060\020\u0106\021\u0104\022" +
    "\047\031\062\064\043\072\uff10\076\051\077\063\001\002" +
    "\000\026\007\053\016\060\020\u0106\021\u0104\022\047\031" +
    "\062\064\043\072\uff0d\076\051\077\063\001\002\000\026" +
    "\007\053\016\060\020\u0106\021\u0104\022\047\031\062\064" +
    "\043\072\uff11\076\051\077\063\001\002\000\004\072\uff3f" +
    "\001\002\000\026\007\053\016\060\020\u0106\021\u0104\022" +
    "\047\031\062\064\043\072\uff12\076\051\077\063\001\002" +
    "\000\004\072\uff1c\001\002\000\004\072\uff1b\001\002\000" +
    "\004\072\uff16\001\002\000\004\072\uff1a\001\002\000\004" +
    "\072\uff13\001\002\000\004\072\uff15\001\002\000\004\072" +
    "\uff19\001\002\000\004\072\uff17\001\002\000\004\072\uff14" +
    "\001\002\000\020\007\053\016\060\022\047\031\062\064" +
    "\043\076\051\077\063\001\002\000\022\007\053\016\060" +
    "\022\047\031\062\064\043\072\uff1d\076\051\077\063\001" +
    "\002\000\004\072\uff18\001\002\000\022\007\053\016\060" +
    "\022\047\031\062\064\043\072\uff1e\076\051\077\063\001" +
    "\002\000\022\007\053\016\060\022\047\031\062\064\043" +
    "\072\uff22\076\051\077\063\001\002\000\022\007\053\016" +
    "\060\022\047\031\062\064\043\072\uff1f\076\051\077\063" +
    "\001\002\000\022\007\053\016\060\022\047\031\062\064" +
    "\043\072\uff23\076\051\077\063\001\002\000\022\007\053" +
    "\016\060\022\047\031\062\064\043\072\uff20\076\051\077" +
    "\063\001\002\000\022\007\053\016\060\022\047\031\062" +
    "\064\043\072\uff21\076\051\077\063\001\002\000\022\007" +
    "\053\016\060\022\047\031\062\064\043\072\uff24\076\051" +
    "\077\063\001\002\000\004\072\uff2c\001\002\000\004\072" +
    "\uff29\001\002\000\004\072\uff27\001\002\000\004\072\uff2b" +
    "\001\002\000\004\072\uff28\001\002\000\004\072\uff2a\001" +
    "\002\000\004\072\uff26\001\002\000\004\072\uff25\001\002" +
    "\000\004\072\uff38\001\002\000\020\007\053\016\060\022" +
    "\047\031\062\064\043\076\051\077\063\001\002\000\004" +
    "\072\uff2e\001\002\000\004\074\u012e\001\002\000\006\002" +
    "\uff75\037\uff75\001\002\000\006\002\uff7f\037\uff7f\001\002" +
    "\000\006\002\uff83\037\uff83\001\002\000\004\004\u0132\001" +
    "\002\000\004\057\u0133\001\002\000\004\075\u0134\001\002" +
    "\000\004\060\u0135\001\002\000\004\074\u0136\001\002\000" +
    "\040\002\uff41\007\uff41\016\uff41\020\uff41\021\uff41\022\uff41" +
    "\024\uff41\030\uff41\031\uff41\037\uff41\064\uff41\066\uff41\072" +
    "\uff41\076\uff41\077\uff41\001\002\000\006\002\uff82\037\uff82" +
    "\001\002\000\004\076\u0152\001\002\000\010\057\u014a\076" +
    "\066\077\063\001\002\000\006\061\u0145\074\u0144\001\002" +
    "\000\014\032\065\033\071\075\u013f\076\066\077\063\001" +
    "\002\000\004\074\uff6f\001\002\000\004\074\u0143\001\002" +
    "\000\014\041\112\042\111\043\107\044\106\074\uff6e\001" +
    "\002\000\004\074\uff6d\001\002\000\006\076\066\077\063" +
    "\001\002\000\004\074\u0142\001\002\000\040\002\uff66\007" +
    "\uff66\016\uff66\020\uff66\021\uff66\022\uff66\024\uff66\030\uff66" +
    "\031\uff66\037\uff66\064\uff66\066\uff66\072\uff66\076\uff66\077" +
    "\uff66\001\002\000\040\002\uff67\007\uff67\016\uff67\020\uff67" +
    "\021\uff67\022\uff67\024\uff67\030\uff67\031\uff67\037\uff67\064" +
    "\uff67\066\uff67\072\uff67\076\uff67\077\uff67\001\002\000\042" +
    "\002\uff44\007\uff44\016\uff44\020\uff44\021\uff44\022\uff44\024" +
    "\uff44\030\uff44\031\uff44\037\uff44\064\uff44\066\uff44\072\uff44" +
    "\074\uff44\076\uff44\077\uff44\001\002\000\006\076\066\077" +
    "\063\001\002\000\004\074\u0147\001\002\000\042\002\uff45" +
    "\007\uff45\016\uff45\020\uff45\021\uff45\022\uff45\024\uff45\030" +
    "\uff45\031\uff45\037\uff45\064\uff45\066\uff45\072\uff45\074\uff45" +
    "\076\uff45\077\uff45\001\002\000\006\061\u0145\074\uff47\001" +
    "\002\000\004\074\uff48\001\002\000\006\076\066\077\063" +
    "\001\002\000\006\061\u0145\074\u014c\001\002\000\042\002" +
    "\uff46\007\uff46\016\uff46\020\uff46\021\uff46\022\uff46\024\uff46" +
    "\030\uff46\031\uff46\037\uff46\064\uff46\066\uff46\072\uff46\074" +
    "\uff46\076\uff46\077\uff46\001\002\000\004\074\u014e\001\002" +
    "\000\042\002\uff42\007\uff42\016\uff42\020\uff42\021\uff42\022" +
    "\uff42\024\uff42\030\uff42\031\uff42\037\uff42\064\uff42\066\uff42" +
    "\072\uff42\074\uff42\076\uff42\077\uff42\001\002\000\004\060" +
    "\u0150\001\002\000\004\074\u0151\001\002\000\042\002\uff43" +
    "\007\uff43\016\uff43\020\uff43\021\uff43\022\uff43\024\uff43\030" +
    "\uff43\031\uff43\037\uff43\064\uff43\066\uff43\072\uff43\074\uff43" +
    "\076\uff43\077\uff43\001\002\000\004\056\u0153\001\002\000" +
    "\014\032\065\033\071\075\u013f\076\066\077\063\001\002" +
    "\000\004\074\u0156\001\002\000\004\074\uff6e\001\002\000" +
    "\040\002\uff68\007\uff68\016\uff68\020\uff68\021\uff68\022\uff68" +
    "\024\uff68\030\uff68\031\uff68\037\uff68\064\uff68\066\uff68\072" +
    "\uff68\076\uff68\077\uff68\001\002\000\004\002\uffff\001\002" +
    "\000\004\056\u0159\001\002\000\006\076\066\077\063\001" +
    "\002\000\004\023\u015b\001\002\000\006\076\066\077\063" +
    "\001\002\000\022\007\053\016\u0169\022\047\031\u016a\064" +
    "\043\066\u016c\076\051\077\063\001\002\000\014\026\u015e" +
    "\041\112\042\111\043\107\044\106\001\002\000\006\042" +
    "\302\077\301\001\002\000\004\074\u0160\001\002\000\022" +
    "\007\053\016\u0169\022\047\031\u016a\064\043\066\u016c\076" +
    "\051\077\063\001\002\000\024\007\053\016\u0169\022\047" +
    "\030\uff00\031\u016a\064\043\066\u016c\076\051\077\063\001" +
    "\002\000\024\007\053\016\u0169\022\047\030\ufefc\031\u016a" +
    "\064\043\066\u016c\076\051\077\063\001\002\000\024\007" +
    "\053\016\u0169\022\047\030\ufefb\031\u016a\064\043\066\u016c" +
    "\076\051\077\063\001\002\000\024\007\053\016\u0169\022" +
    "\047\030\ufefd\031\u016a\064\043\066\u016c\076\051\077\063" +
    "\001\002\000\024\007\053\016\u0169\022\047\030\ufefe\031" +
    "\u016a\064\043\066\u016c\076\051\077\063\001\002\000\024" +
    "\007\053\016\u0169\022\047\030\ufefa\031\u016a\064\043\066" +
    "\u016c\076\051\077\063\001\002\000\004\030\u01da\001\002" +
    "\000\024\007\053\016\u0169\022\047\030\ufef9\031\u016a\064" +
    "\043\066\u016c\076\051\077\063\001\002\000\012\032\065" +
    "\033\071\076\066\077\063\001\002\000\004\025\u0170\001" +
    "\002\000\024\007\053\016\u0169\022\047\030\ufeff\031\u016a" +
    "\064\043\066\u016c\076\051\077\063\001\002\000\004\022" +
    "\u016d\001\002\000\004\074\u016e\001\002\000\004\030\ufef8" +
    "\001\002\000\004\030\uff07\001\002\000\012\032\065\033" +
    "\071\076\066\077\063\001\002\000\004\074\u0172\001\002" +
    "\000\022\007\053\016\u0169\022\047\031\u016a\064\043\066" +
    "\u017c\076\051\077\063\001\002\000\024\007\053\016\u0169" +
    "\022\047\024\ufeb5\031\u016a\064\043\066\u017c\076\051\077" +
    "\063\001\002\000\024\007\053\016\u0169\022\047\024\ufeb2" +
    "\031\u016a\064\043\066\u017c\076\051\077\063\001\002\000" +
    "\024\007\053\016\u0169\022\047\024\ufeb1\031\u016a\064\043" +
    "\066\u017c\076\051\077\063\001\002\000\024\007\053\016" +
    "\u0169\022\047\024\ufeb3\031\u016a\064\043\066\u017c\076\051" +
    "\077\063\001\002\000\024\007\053\016\u0169\022\047\024" +
    "\ufeb4\031\u016a\064\043\066\u017c\076\051\077\063\001\002" +
    "\000\024\007\053\016\u0169\022\047\024\ufeb0\031\u016a\064" +
    "\043\066\u017c\076\051\077\063\001\002\000\024\007\053" +
    "\016\u0169\022\047\024\ufeae\031\u016a\064\043\066\u017c\076" +
    "\051\077\063\001\002\000\004\024\u0182\001\002\000\024" +
    "\007\053\016\u0169\022\047\024\ufeaf\031\u016a\064\043\066" +
    "\u017c\076\051\077\063\001\002\000\006\022\u017e\031\u017d" +
    "\001\002\000\004\074\u0180\001\002\000\004\074\u017f\001" +
    "\002\000\004\024\ufeac\001\002\000\004\024\ufead\001\002" +
    "\000\004\024\ufeb6\001\002\000\004\074\u0183\001\002\000" +
    "\034\007\ufebe\016\ufebe\020\ufebe\021\ufebe\022\ufebe\024\ufebe" +
    "\030\ufebe\031\ufebe\064\ufebe\066\ufebe\072\ufebe\076\ufebe\077" +
    "\ufebe\001\002\000\004\024\ufeb7\001\002\000\004\024\ufeb8" +
    "\001\002\000\004\024\ufebc\001\002\000\004\024\ufebb\001" +
    "\002\000\004\024\ufeb9\001\002\000\004\024\ufeba\001\002" +
    "\000\004\024\ufebd\001\002\000\004\017\u018c\001\002\000" +
    "\004\074\u018d\001\002\000\026\007\053\016\u0169\020\u0190" +
    "\021\u018e\022\047\031\u016a\064\043\066\u0199\076\051\077" +
    "\063\001\002\000\004\074\u01d7\001\002\000\030\007\053" +
    "\016\u0169\020\u0190\021\u018e\022\047\031\u016a\064\043\066" +
    "\u0199\072\ufee7\076\051\077\063\001\002\000\012\032\065" +
    "\033\071\076\066\077\063\001\002\000\030\007\053\016" +
    "\u0169\020\u0190\021\u018e\022\047\031\u016a\064\043\066\u0199" +
    "\072\ufeea\076\051\077\063\001\002\000\030\007\053\016" +
    "\u0169\020\u0190\021\u018e\022\047\031\u016a\064\043\066\u0199" +
    "\072\ufee9\076\051\077\063\001\002\000\030\007\053\016" +
    "\u0169\020\u0190\021\u018e\022\047\031\u016a\064\043\066\u0199" +
    "\072\ufeeb\076\051\077\063\001\002\000\030\007\053\016" +
    "\u0169\020\u0190\021\u018e\022\047\031\u016a\064\043\066\u0199" +
    "\072\ufeec\076\051\077\063\001\002\000\030\007\053\016" +
    "\u0169\020\u0190\021\u018e\022\047\031\u016a\064\043\066\u0199" +
    "\072\ufee8\076\051\077\063\001\002\000\004\072\u019e\001" +
    "\002\000\030\007\053\016\u0169\020\u0190\021\u018e\022\047" +
    "\031\u016a\064\043\066\u0199\072\ufee6\076\051\077\063\001" +
    "\002\000\030\007\053\016\u0169\020\u0190\021\u018e\022\047" +
    "\031\u016a\064\043\066\u0199\072\ufeed\076\051\077\063\001" +
    "\002\000\004\022\u019a\001\002\000\004\074\u019b\001\002" +
    "\000\004\072\ufee5\001\002\000\004\072\ufef5\001\002\000" +
    "\004\072\ufeee\001\002\000\004\016\u019f\001\002\000\004" +
    "\074\u01a0\001\002\000\034\007\ufef7\016\ufef7\020\ufef7\021" +
    "\ufef7\022\ufef7\024\ufef7\030\ufef7\031\ufef7\064\ufef7\066\ufef7" +
    "\072\ufef7\076\ufef7\077\ufef7\001\002\000\004\072\ufef1\001" +
    "\002\000\004\072\ufef4\001\002\000\004\072\ufef3\001\002" +
    "\000\004\072\ufef0\001\002\000\004\072\ufef2\001\002\000" +
    "\004\017\u01a8\001\002\000\004\072\ufee3\001\002\000\004" +
    "\074\u01a9\001\002\000\026\007\053\016\u0169\020\u01ac\021" +
    "\u01aa\022\047\031\u016a\064\043\066\u01b5\076\051\077\063" +
    "\001\002\000\004\074\u01c1\001\002\000\030\007\053\016" +
    "\u0169\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5" +
    "\072\ufed2\076\051\077\063\001\002\000\012\032\065\033" +
    "\071\076\066\077\063\001\002\000\030\007\053\016\u0169" +
    "\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5\072" +
    "\ufed5\076\051\077\063\001\002\000\030\007\053\016\u0169" +
    "\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5\072" +
    "\ufed4\076\051\077\063\001\002\000\030\007\053\016\u0169" +
    "\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5\072" +
    "\ufed6\076\051\077\063\001\002\000\030\007\053\016\u0169" +
    "\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5\072" +
    "\ufed3\076\051\077\063\001\002\000\030\007\053\016\u0169" +
    "\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5\072" +
    "\ufed7\076\051\077\063\001\002\000\030\007\053\016\u0169" +
    "\020\u01ac\021\u01aa\022\047\031\u016a\064\043\066\u01b5\072" +
    "\ufed1\076\051\077\063\001\002\000\004\072\ufef6\001\002" +
    "\000\030\007\053\016\u0169\020\u01ac\021\u01aa\022\047\031" +
    "\u016a\064\043\066\u01b5\072\ufed8\076\051\077\063\001\002" +
    "\000\004\022\u01b6\001\002\000\004\074\u01b7\001\002\000" +
    "\004\072\ufed0\001\002\000\004\072\ufee2\001\002\000\004" +
    "\072\ufed9\001\002\000\004\072\ufee1\001\002\000\004\072" +
    "\ufedc\001\002\000\004\072\ufee0\001\002\000\004\072\ufedb" +
    "\001\002\000\004\072\ufedf\001\002\000\004\072\ufedd\001" +
    "\002\000\004\072\ufeda\001\002\000\022\007\053\016\u0169" +
    "\022\047\031\u016a\064\043\066\u01cb\076\051\077\063\001" +
    "\002\000\024\007\053\016\u0169\022\047\031\u016a\064\043" +
    "\066\u01cb\072\ufec1\076\051\077\063\001\002\000\024\007" +
    "\053\016\u0169\022\047\031\u016a\064\043\066\u01cb\072\ufec4" +
    "\076\051\077\063\001\002\000\024\007\053\016\u0169\022" +
    "\047\031\u016a\064\043\066\u01cb\072\ufec3\076\051\077\063" +
    "\001\002\000\024\007\053\016\u0169\022\047\031\u016a\064" +
    "\043\066\u01cb\072\ufec5\076\051\077\063\001\002\000\024" +
    "\007\053\016\u0169\022\047\031\u016a\064\043\066\u01cb\072" +
    "\ufec6\076\051\077\063\001\002\000\024\007\053\016\u0169" +
    "\022\047\031\u016a\064\043\066\u01cb\072\ufec2\076\051\077" +
    "\063\001\002\000\004\072\ufede\001\002\000\024\007\053" +
    "\016\u0169\022\047\031\u016a\064\043\066\u01cb\072\ufec0\076" +
    "\051\077\063\001\002\000\024\007\053\016\u0169\022\047" +
    "\031\u016a\064\043\066\u01cb\072\ufec7\076\051\077\063\001" +
    "\002\000\004\022\u01cc\001\002\000\004\074\u01cd\001\002" +
    "\000\004\072\ufebf\001\002\000\004\072\ufecf\001\002\000" +
    "\004\072\ufec8\001\002\000\004\072\ufecb\001\002\000\004" +
    "\072\ufece\001\002\000\004\072\ufecd\001\002\000\004\072" +
    "\ufeca\001\002\000\004\072\ufecc\001\002\000\004\072\ufec9" +
    "\001\002\000\004\072\ufeef\001\002\000\022\007\053\016" +
    "\u0169\022\047\031\u016a\064\043\066\u01cb\076\051\077\063" +
    "\001\002\000\004\072\ufee4\001\002\000\004\030\uff01\001" +
    "\002\000\004\076\u01db\001\002\000\004\074\u01dc\001\002" +
    "\000\040\002\uff0a\007\uff0a\016\uff0a\020\uff0a\021\uff0a\022" +
    "\uff0a\024\uff0a\030\uff0a\031\uff0a\037\uff0a\064\uff0a\066\uff0a" +
    "\072\uff0a\076\uff0a\077\uff0a\001\002\000\004\030\uff02\001" +
    "\002\000\004\030\uff06\001\002\000\004\030\uff05\001\002" +
    "\000\004\030\uff03\001\002\000\004\030\uff04\001\002\000" +
    "\004\030\uff08\001\002\000\004\030\u01e4\001\002\000\004" +
    "\076\u01e5\001\002\000\004\074\u01e6\001\002\000\040\002" +
    "\uff09\007\uff09\016\uff09\020\uff09\021\uff09\022\uff09\024\uff09" +
    "\030\uff09\031\uff09\037\uff09\064\uff09\066\uff09\072\uff09\076" +
    "\uff09\077\uff09\001\002\000\006\002\uff7e\037\uff7e\001\002" +
    "\000\006\002\uff80\037\uff80\001\002\000\006\002\uff81\037" +
    "\uff81\001\002\000\006\056\u01ec\065\u01eb\001\002\000\010" +
    "\012\023\013\025\014\024\001\002\000\014\032\065\033" +
    "\071\075\u013f\076\066\077\063\001\002\000\004\074\u01ee" +
    "\001\002\000\040\002\uff69\007\uff69\016\uff69\020\uff69\021" +
    "\uff69\022\uff69\024\uff69\030\uff69\031\uff69\037\uff69\064\uff69" +
    "\066\uff69\072\uff69\076\uff69\077\uff69\001\002\000\006\056" +
    "\u01f1\074\u01f0\001\002\000\040\002\uff6c\007\uff6c\016\uff6c" +
    "\020\uff6c\021\uff6c\022\uff6c\024\uff6c\030\uff6c\031\uff6c\037" +
    "\uff6c\064\uff6c\066\uff6c\072\uff6c\076\uff6c\077\uff6c\001\002" +
    "\000\014\032\065\033\071\075\u013f\076\u01f3\077\063\001" +
    "\002\000\004\074\u01f6\001\002\000\012\057\u0139\074\uff59" +
    "\076\066\077\063\001\002\000\004\074\u01f5\001\002\000" +
    "\040\002\uff6a\007\uff6a\016\uff6a\020\uff6a\021\uff6a\022\uff6a" +
    "\024\uff6a\030\uff6a\031\uff6a\037\uff6a\064\uff6a\066\uff6a\072" +
    "\uff6a\076\uff6a\077\uff6a\001\002\000\040\002\uff6b\007\uff6b" +
    "\016\uff6b\020\uff6b\021\uff6b\022\uff6b\024\uff6b\030\uff6b\031" +
    "\uff6b\037\uff6b\064\uff6b\066\uff6b\072\uff6b\076\uff6b\077\uff6b" +
    "\001\002\000\006\002\uff85\037\uff85\001\002\000\004\065" +
    "\u01fe\001\002\000\004\076\u01fa\001\002\000\004\065\u01fb" +
    "\001\002\000\010\012\023\013\025\014\024\001\002\000" +
    "\012\015\036\060\035\061\037\076\034\001\002\000\006" +
    "\065\uff72\074\uff72\001\002\000\010\012\023\013\025\014" +
    "\024\001\002\000\012\015\036\060\035\061\037\076\034" +
    "\001\002\000\006\065\uff71\074\uff71\001\002\000\004\065" +
    "\u0202\001\002\000\010\012\023\013\025\014\024\001\002" +
    "\000\012\015\036\060\035\061\037\076\034\001\002\000" +
    "\006\065\uff74\074\uff74\001\002\000\010\012\023\013\025" +
    "\014\024\001\002\000\012\015\036\060\035\061\037\076" +
    "\034\001\002\000\006\065\uff73\074\uff73\001\002\000\004" +
    "\060\u0209\001\002\000\004\074\u020a\001\002\000\022\007" +
    "\053\016\060\022\047\031\062\064\043\072\057\076\051" +
    "\077\063\001\002\000\004\002\ufffd\001\002\000\004\057" +
    "\u020d\001\002\000\012\015\036\060\035\061\037\076\034" +
    "\001\002\000\004\065\u020f\001\002\000\010\012\023\013" +
    "\025\014\024\001\002\000\004\074\u0211\001\002\000\022" +
    "\007\053\016\u021b\022\u0215\031\u021c\064\043\066\u021e\076" +
    "\051\077\063\001\002\000\024\007\053\016\u021b\022\u0215" +
    "\031\u021c\064\043\066\u021e\072\uffeb\076\051\077\063\001" +
    "\002\000\024\007\053\016\u021b\022\u0215\031\u021c\064\043" +
    "\066\u021e\072\uffee\076\051\077\063\001\002\000\024\007" +
    "\053\016\u021b\022\u0215\031\u021c\064\043\066\u021e\072\uffea" +
    "\076\051\077\063\001\002\000\004\076\u0295\001\002\000" +
    "\024\007\053\016\u021b\022\u0215\031\u021c\064\043\066\u021e" +
    "\072\uffef\076\051\077\063\001\002\000\024\007\053\016" +
    "\u021b\022\u0215\031\u021c\064\043\066\u021e\072\uffec\076\051" +
    "\077\063\001\002\000\024\007\053\016\u021b\022\u0215\031" +
    "\u021c\064\043\066\u021e\072\uffed\076\051\077\063\001\002" +
    "\000\024\007\053\016\u021b\022\u0215\031\u021c\064\043\066" +
    "\u021e\072\uffe9\076\051\077\063\001\002\000\004\072\u028d" +
    "\001\002\000\012\032\065\033\071\076\066\077\063\001" +
    "\002\000\004\025\u0222\001\002\000\024\007\053\016\u021b" +
    "\022\u0215\031\u021c\064\043\066\u021e\072\ufff0\076\051\077" +
    "\063\001\002\000\004\034\u021f\001\002\000\004\074\u0220" +
    "\001\002\000\004\072\uffe8\001\002\000\004\072\ufff8\001" +
    "\002\000\012\032\065\033\071\076\066\077\063\001\002" +
    "\000\004\074\u0224\001\002\000\022\007\053\016\u021b\022" +
    "\u0215\031\u021c\064\043\066\u022e\076\051\077\063\001\002" +
    "\000\024\007\053\016\u021b\022\u0215\024\uffa1\031\u021c\064" +
    "\043\066\u022e\076\051\077\063\001\002\000\024\007\053" +
    "\016\u021b\022\u0215\024\uffa4\031\u021c\064\043\066\u022e\076" +
    "\051\077\063\001\002\000\024\007\053\016\u021b\022\u0215" +
    "\024\uffa0\031\u021c\064\043\066\u022e\076\051\077\063\001" +
    "\002\000\024\007\053\016\u021b\022\u0215\024\uff9e\031\u021c" +
    "\064\043\066\u022e\076\051\077\063\001\002\000\024\007" +
    "\053\016\u021b\022\u0215\024\uffa2\031\u021c\064\043\066\u022e" +
    "\076\051\077\063\001\002\000\024\007\053\016\u021b\022" +
    "\u0215\024\uffa3\031\u021c\064\043\066\u022e\076\051\077\063" +
    "\001\002\000\024\007\053\016\u021b\022\u0215\024\uff9f\031" +
    "\u021c\064\043\066\u022e\076\051\077\063\001\002\000\004" +
    "\024\u0236\001\002\000\024\007\053\016\u021b\022\u0215\024" +
    "\uffa5\031\u021c\064\043\066\u022e\076\051\077\063\001\002" +
    "\000\010\022\u0231\031\u0230\034\u022f\001\002\000\004\074" +
    "\u0234\001\002\000\004\074\u0233\001\002\000\004\074\u0232" +
    "\001\002\000\004\024\uff9b\001\002\000\004\024\uff9d\001" +
    "\002\000\004\024\uff9c\001\002\000\004\024\uffad\001\002" +
    "\000\004\074\u0237\001\002\000\034\007\uffae\016\uffae\020" +
    "\uffae\021\uffae\022\uffae\024\uffae\030\uffae\031\uffae\064\uffae" +
    "\066\uffae\072\uffae\076\uffae\077\uffae\001\002\000\004\024" +
    "\uffa7\001\002\000\004\024\uffab\001\002\000\004\024\uffaa" +
    "\001\002\000\004\024\uffa6\001\002\000\004\024\uffa8\001" +
    "\002\000\004\024\uffac\001\002\000\004\024\uffa9\001\002" +
    "\000\004\017\u0240\001\002\000\004\074\u0241\001\002\000" +
    "\026\007\053\016\u021b\020\u0243\021\u0242\022\u0215\031\u021c" +
    "\064\043\066\u024d\076\051\077\063\001\002\000\004\074" +
    "\u028b\001\002\000\012\032\065\033\071\076\066\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffda\076\051\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffdd\076\051\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffd9\076\051\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffd6\076\051\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffdb\076\051\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffdc\076\051\077\063" +
    "\001\002\000\030\007\053\016\u021b\020\u0243\021\u0242\022" +
    "\u0215\031\u021c\064\043\066\u024d\072\uffd8\076\051\077\063" +
    "\001\002\000\004\072\u0251\001\002\000\030\007\053\016" +
    "\u021b\020\u0243\021\u0242\022\u0215\031\u021c\064\043\066\u024d" +
    "\072\uffd7\076\051\077\063\001\002\000\004\034\u024e\001" +
    "\002\000\004\074\u024f\001\002\000\004\072\uffd5\001\002" +
    "\000\004\072\uffdf\001\002\000\004\016\u0252\001\002\000" +
    "\004\074\u0253\001\002\000\034\007\uffe7\016\uffe7\020\uffe7" +
    "\021\uffe7\022\uffe7\024\uffe7\030\uffe7\031\uffe7\064\uffe7\066" +
    "\uffe7\072\uffe7\076\uffe7\077\uffe7\001\002\000\004\072\uffe1" +
    "\001\002\000\004\072\uffe4\001\002\000\004\072\uffe3\001" +
    "\002\000\004\072\uffde\001\002\000\004\072\uffe0\001\002" +
    "\000\004\072\uffe5\001\002\000\004\072\uffe2\001\002\000" +
    "\004\017\u025d\001\002\000\004\072\uffd3\001\002\000\004" +
    "\074\u025e\001\002\000\026\007\053\016\u021b\020\u0260\021" +
    "\u025f\022\u0215\031\u021c\064\043\066\u026a\076\051\077\063" +
    "\001\002\000\004\074\u0276\001\002\000\012\032\065\033" +
    "\071\076\066\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb4\076\051\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb7\076\051\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb3\076\051\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb0\076\051\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb5\076\051\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb6\076\051\077\063\001\002\000\030\007\053\016\u021b" +
    "\020\u0260\021\u025f\022\u0215\031\u021c\064\043\066\u026a\072" +
    "\uffb2\076\051\077\063\001\002\000\004\072\uffe6\001\002" +
    "\000\030\007\053\016\u021b\020\u0260\021\u025f\022\u0215\031" +
    "\u021c\064\043\066\u026a\072\uffb1\076\051\077\063\001\002" +
    "\000\004\034\u026b\001\002\000\004\074\u026c\001\002\000" +
    "\004\072\uffaf\001\002\000\004\072\uffb9\001\002\000\004" +
    "\072\uffbb\001\002\000\004\072\uffc0\001\002\000\004\072" +
    "\uffbf\001\002\000\004\072\uffb8\001\002\000\004\072\uffba" +
    "\001\002\000\004\072\uffc1\001\002\000\004\072\uffbe\001" +
    "\002\000\004\072\uffbc\001\002\000\022\007\053\016\u021b" +
    "\022\u0215\031\u021c\064\043\066\u0280\076\051\077\063\001" +
    "\002\000\004\072\uffbd\001\002\000\024\007\053\016\u021b" +
    "\022\u0215\031\u021c\064\043\066\u0280\072\uffc7\076\051\077" +
    "\063\001\002\000\024\007\053\016\u021b\022\u0215\031\u021c" +
    "\064\043\066\u0280\072\uffca\076\051\077\063\001\002\000" +
    "\024\007\053\016\u021b\022\u0215\031\u021c\064\043\066\u0280" +
    "\072\uffc6\076\051\077\063\001\002\000\024\007\053\016" +
    "\u021b\022\u0215\031\u021c\064\043\066\u0280\072\uffc3\076\051" +
    "\077\063\001\002\000\024\007\053\016\u021b\022\u0215\031" +
    "\u021c\064\043\066\u0280\072\uffc8\076\051\077\063\001\002" +
    "\000\024\007\053\016\u021b\022\u0215\031\u021c\064\043\066" +
    "\u0280\072\uffc9\076\051\077\063\001\002\000\024\007\053" +
    "\016\u021b\022\u0215\031\u021c\064\043\066\u0280\072\uffc5\076" +
    "\051\077\063\001\002\000\024\007\053\016\u021b\022\u0215" +
    "\031\u021c\064\043\066\u0280\072\uffc4\076\051\077\063\001" +
    "\002\000\004\034\u0281\001\002\000\004\074\u0282\001\002" +
    "\000\004\072\uffc2\001\002\000\004\072\uffcc\001\002\000" +
    "\004\072\uffce\001\002\000\004\072\uffd1\001\002\000\004" +
    "\072\uffd0\001\002\000\004\072\uffcb\001\002\000\004\072" +
    "\uffcd\001\002\000\004\072\uffd2\001\002\000\004\072\uffcf" +
    "\001\002\000\022\007\053\016\u021b\022\u0215\031\u021c\064" +
    "\043\066\u0280\076\051\077\063\001\002\000\004\072\uffd4" +
    "\001\002\000\004\034\u028e\001\002\000\004\074\u028f\001" +
    "\002\000\004\037\005\001\002\000\004\002\ufffe\001\002" +
    "\000\004\072\ufff1\001\002\000\004\072\ufff5\001\002\000" +
    "\004\072\ufff4\001\002\000\004\072\ufff7\001\002\000\004" +
    "\056\u0296\001\002\000\006\076\066\077\063\001\002\000" +
    "\004\023\u0298\001\002\000\006\076\066\077\063\001\002" +
    "\000\022\007\053\016\u021b\022\u0215\031\u021c\064\043\066" +
    "\u02a7\076\051\077\063\001\002\000\014\026\u029b\041\112" +
    "\042\111\043\107\044\106\001\002\000\006\042\302\077" +
    "\301\001\002\000\004\074\u029d\001\002\000\022\007\053" +
    "\016\u021b\022\u0215\031\u021c\064\043\066\u02a7\076\051\077" +
    "\063\001\002\000\024\007\053\016\u021b\022\u0215\030\uff8b" +
    "\031\u021c\064\043\066\u02a7\076\051\077\063\001\002\000" +
    "\024\007\053\016\u021b\022\u0215\030\uff8e\031\u021c\064\043" +
    "\066\u02a7\076\051\077\063\001\002\000\024\007\053\016" +
    "\u021b\022\u0215\030\uff8a\031\u021c\064\043\066\u02a7\076\051" +
    "\077\063\001\002\000\024\007\053\016\u021b\022\u0215\030" +
    "\uff90\031\u021c\064\043\066\u02a7\076\051\077\063\001\002" +
    "\000\024\007\053\016\u021b\022\u0215\030\uff8c\031\u021c\064" +
    "\043\066\u02a7\076\051\077\063\001\002\000\024\007\053" +
    "\016\u021b\022\u0215\030\uff8d\031\u021c\064\043\066\u02a7\076" +
    "\051\077\063\001\002\000\024\007\053\016\u021b\022\u0215" +
    "\030\uff89\031\u021c\064\043\066\u02a7\076\051\077\063\001" +
    "\002\000\004\030\u02af\001\002\000\024\007\053\016\u021b" +
    "\022\u0215\030\uff8f\031\u021c\064\043\066\u02a7\076\051\077" +
    "\063\001\002\000\010\022\u02aa\031\u02a9\034\u02a8\001\002" +
    "\000\004\074\u02ad\001\002\000\004\074\u02ac\001\002\000" +
    "\004\074\u02ab\001\002\000\004\030\uff86\001\002\000\004" +
    "\030\uff88\001\002\000\004\030\uff87\001\002\000\004\030" +
    "\uff97\001\002\000\004\076\u02b0\001\002\000\004\074\u02b1" +
    "\001\002\000\034\007\uff9a\016\uff9a\020\uff9a\021\uff9a\022" +
    "\uff9a\024\uff9a\030\uff9a\031\uff9a\064\uff9a\066\uff9a\072\uff9a" +
    "\076\uff9a\077\uff9a\001\002\000\004\030\uff91\001\002\000" +
    "\004\030\uff95\001\002\000\004\030\uff94\001\002\000\004" +
    "\030\uff98\001\002\000\004\030\uff92\001\002\000\004\030" +
    "\uff96\001\002\000\004\030\uff93\001\002\000\004\030\u02ba" +
    "\001\002\000\004\076\u02bb\001\002\000\004\074\u02bc\001" +
    "\002\000\034\007\uff99\016\uff99\020\uff99\021\uff99\022\uff99" +
    "\024\uff99\030\uff99\031\uff99\064\uff99\066\uff99\072\uff99\076" +
    "\uff99\077\uff99\001\002\000\004\072\ufff2\001\002\000\004" +
    "\072\ufff6\001\002\000\004\072\ufff3\001\002\000\004\002" +
    "\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02be\000\004\003\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\013\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\003\017\001\001\000\002\001\001\000" +
    "\006\011\025\040\021\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\027\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\004\037\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\053\006\043\010" +
    "\044\014\047\020\060\026\041\031\045\033\055\042\051" +
    "\047\054\001\001\000\026\005\053\006\043\010\044\014" +
    "\u01f6\020\060\026\041\031\045\033\055\042\051\047\054" +
    "\001\001\000\002\001\001\000\026\005\053\006\043\010" +
    "\044\014\u01e8\020\060\026\041\031\045\033\055\042\051" +
    "\047\054\001\001\000\026\005\053\006\043\010\044\014" +
    "\u01e7\020\060\026\041\031\045\033\055\042\051\047\054" +
    "\001\001\000\026\005\053\006\043\010\044\014\u01e6\020" +
    "\060\026\041\031\045\033\055\042\051\047\054\001\001" +
    "\000\002\001\001\000\004\003\u0156\001\001\000\004\033" +
    "\u0139\001\001\000\026\005\053\006\043\010\044\014\u0136" +
    "\020\060\026\041\031\045\033\055\042\051\047\054\001" +
    "\001\000\002\001\001\000\026\005\053\006\043\010\044" +
    "\014\u012f\020\060\026\041\031\045\033\055\042\051\047" +
    "\054\001\001\000\026\005\053\006\043\010\044\014\u012e" +
    "\020\060\026\041\031\045\033\055\042\051\047\054\001" +
    "\001\000\004\050\275\001\001\000\002\001\001\000\010" +
    "\012\067\025\347\033\071\001\001\000\026\005\053\006" +
    "\043\010\044\014\346\020\060\026\041\031\045\033\055" +
    "\042\051\047\054\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\012\067\025\066\033\071\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\027\072\001\001\000\006" +
    "\012\101\033\103\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\033\104\001" +
    "\001\000\002\001\001\000\004\050\107\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\033\112\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\033\116\043\115\001\001\000\002\001" +
    "\001\000\004\044\120\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\033\116\043\122\001\001\000\002\001" +
    "\001\000\026\005\131\006\124\010\125\031\126\033\055" +
    "\042\130\047\132\056\136\057\134\065\133\001\001\000" +
    "\026\005\131\006\124\010\125\031\126\033\055\042\130" +
    "\047\132\056\345\057\134\065\133\001\001\000\026\005" +
    "\131\006\124\010\125\031\126\033\055\042\130\047\132" +
    "\056\344\057\134\065\133\001\001\000\026\005\131\006" +
    "\124\010\125\031\126\033\055\042\130\047\132\056\343" +
    "\057\134\065\133\001\001\000\002\001\001\000\026\005" +
    "\131\006\124\010\125\031\126\033\055\042\130\047\132" +
    "\056\266\057\134\065\133\001\001\000\026\005\131\006" +
    "\124\010\125\031\126\033\055\042\130\047\132\056\265" +
    "\057\134\065\133\001\001\000\026\005\131\006\124\010" +
    "\125\031\126\033\055\042\130\047\132\056\264\057\134" +
    "\065\133\001\001\000\026\005\131\006\124\010\125\031" +
    "\126\033\055\042\130\047\132\056\263\057\134\065\133" +
    "\001\001\000\026\005\131\006\124\010\125\031\126\033" +
    "\055\042\130\047\132\056\262\057\134\065\133\001\001" +
    "\000\010\012\067\025\144\033\071\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\156\006\151\010\152\031\153" +
    "\033\055\042\154\047\155\057\161\060\160\065\157\001" +
    "\001\000\002\001\001\000\012\012\067\025\201\033\071" +
    "\063\200\001\001\000\026\005\156\006\151\010\152\031" +
    "\153\033\055\042\154\047\155\057\161\060\177\065\157" +
    "\001\001\000\026\005\156\006\151\010\152\031\153\033" +
    "\055\042\154\047\155\057\161\060\176\065\157\001\001" +
    "\000\026\005\156\006\151\010\152\031\153\033\055\042" +
    "\154\047\155\057\161\060\175\065\157\001\001\000\026" +
    "\005\156\006\151\010\152\031\153\033\055\042\154\047" +
    "\155\057\161\060\174\065\157\001\001\000\026\005\156" +
    "\006\151\010\152\031\153\033\055\042\154\047\155\057" +
    "\161\060\173\065\157\001\001\000\026\005\156\006\151" +
    "\010\152\031\153\033\055\042\154\047\155\057\161\060" +
    "\172\065\157\001\001\000\026\005\156\006\151\010\152" +
    "\031\153\033\055\042\154\047\155\057\161\060\171\065" +
    "\157\001\001\000\002\001\001\000\026\005\156\006\151" +
    "\010\152\031\153\033\055\042\154\047\155\057\161\060" +
    "\165\065\157\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\214\006" +
    "\206\010\207\031\210\033\055\042\212\047\213\057\216" +
    "\062\211\065\215\001\001\000\002\001\001\000\012\012" +
    "\067\025\201\033\071\063\232\001\001\000\026\005\214" +
    "\006\206\010\207\031\210\033\055\042\212\047\213\057" +
    "\216\062\231\065\215\001\001\000\026\005\214\006\206" +
    "\010\207\031\210\033\055\042\212\047\213\057\216\062" +
    "\230\065\215\001\001\000\026\005\214\006\206\010\207" +
    "\031\210\033\055\042\212\047\213\057\216\062\227\065" +
    "\215\001\001\000\002\001\001\000\026\005\214\006\206" +
    "\010\207\031\210\033\055\042\212\047\213\057\216\062" +
    "\226\065\215\001\001\000\026\005\214\006\206\010\207" +
    "\031\210\033\055\042\212\047\213\057\216\062\225\065" +
    "\215\001\001\000\026\005\214\006\206\010\207\031\210" +
    "\033\055\042\212\047\213\057\216\062\224\065\215\001" +
    "\001\000\026\005\214\006\206\010\207\031\210\033\055" +
    "\042\212\047\213\057\216\062\223\065\215\001\001\000" +
    "\026\005\214\006\206\010\207\031\210\033\055\042\212" +
    "\047\213\057\216\062\222\065\215\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\026\005\240\006\234\010" +
    "\235\031\236\033\055\042\237\047\241\057\243\061\245" +
    "\065\242\001\001\000\026\005\240\006\234\010\235\031" +
    "\236\033\055\042\237\047\241\057\243\061\257\065\242" +
    "\001\001\000\026\005\240\006\234\010\235\031\236\033" +
    "\055\042\237\047\241\057\243\061\256\065\242\001\001" +
    "\000\026\005\240\006\234\010\235\031\236\033\055\042" +
    "\237\047\241\057\243\061\255\065\242\001\001\000\026" +
    "\005\240\006\234\010\235\031\236\033\055\042\237\047" +
    "\241\057\243\061\254\065\242\001\001\000\026\005\240" +
    "\006\234\010\235\031\236\033\055\042\237\047\241\057" +
    "\243\061\253\065\242\001\001\000\026\005\240\006\234" +
    "\010\235\031\236\033\055\042\237\047\241\057\243\061" +
    "\252\065\242\001\001\000\026\005\240\006\234\010\235" +
    "\031\236\033\055\042\237\047\241\057\243\061\251\065" +
    "\242\001\001\000\026\005\240\006\234\010\235\031\236" +
    "\033\055\042\237\047\241\057\243\061\250\065\242\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\240\006\234\010\235\031\236\033\055\042\237\047\241" +
    "\057\243\061\261\065\242\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\033" +
    "\271\001\001\000\002\001\001\000\006\033\274\047\273" +
    "\001\001\000\026\005\311\006\304\010\305\031\306\033" +
    "\055\042\307\047\312\057\314\064\337\065\313\001\001" +
    "\000\004\050\275\001\001\000\004\033\335\001\001\000" +
    "\004\030\277\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\026\005\311\006" +
    "\304\010\305\031\306\033\055\042\307\047\312\057\314" +
    "\064\310\065\313\001\001\000\026\005\311\006\304\010" +
    "\305\031\306\033\055\042\307\047\312\057\314\064\334" +
    "\065\313\001\001\000\026\005\311\006\304\010\305\031" +
    "\306\033\055\042\307\047\312\057\314\064\333\065\313" +
    "\001\001\000\026\005\311\006\304\010\305\031\306\033" +
    "\055\042\307\047\312\057\314\064\332\065\313\001\001" +
    "\000\026\005\311\006\304\010\305\031\306\033\055\042" +
    "\307\047\312\057\314\064\331\065\313\001\001\000\002" +
    "\001\001\000\026\005\311\006\304\010\305\031\306\033" +
    "\055\042\307\047\312\057\314\064\325\065\313\001\001" +
    "\000\026\005\311\006\304\010\305\031\306\033\055\042" +
    "\307\047\312\057\314\064\324\065\313\001\001\000\026" +
    "\005\311\006\304\010\305\031\306\033\055\042\307\047" +
    "\312\057\314\064\323\065\313\001\001\000\026\005\311" +
    "\006\304\010\305\031\306\033\055\042\307\047\312\057" +
    "\314\064\322\065\313\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\362\006\355\010\356\020\364\021" +
    "\363\026\353\031\357\033\055\042\360\047\361\001\001" +
    "\000\002\001\001\000\026\005\362\006\355\010\356\020" +
    "\364\021\u0129\026\353\031\357\033\055\042\360\047\361" +
    "\001\001\000\012\012\067\024\u0100\025\377\033\071\001" +
    "\001\000\026\005\362\006\355\010\356\020\364\021\376" +
    "\026\353\031\357\033\055\042\360\047\361\001\001\000" +
    "\026\005\362\006\355\010\356\020\364\021\375\026\353" +
    "\031\357\033\055\042\360\047\361\001\001\000\026\005" +
    "\362\006\355\010\356\020\364\021\374\026\353\031\357" +
    "\033\055\042\360\047\361\001\001\000\026\005\362\006" +
    "\355\010\356\020\364\021\373\026\353\031\357\033\055" +
    "\042\360\047\361\001\001\000\026\005\362\006\355\010" +
    "\356\020\364\021\372\026\353\031\357\033\055\042\360" +
    "\047\361\001\001\000\026\005\362\006\355\010\356\020" +
    "\364\021\371\026\353\031\357\033\055\042\360\047\361" +
    "\001\001\000\002\001\001\000\026\005\362\006\355\010" +
    "\356\020\364\021\365\026\353\031\357\033\055\042\360" +
    "\047\361\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u010b\006\u0106\010\u0107\020" +
    "\u010d\023\u010c\026\u0104\031\u0108\033\055\042\u0109\047\u010a" +
    "\001\001\000\002\001\001\000\026\005\u010b\006\u0106\010" +
    "\u0107\020\u010d\023\u0116\026\u0104\031\u0108\033\055\042\u0109" +
    "\047\u010a\001\001\000\012\012\067\024\u0115\025\377\033" +
    "\071\001\001\000\026\005\u010b\006\u0106\010\u0107\020\u010d" +
    "\023\u0114\026\u0104\031\u0108\033\055\042\u0109\047\u010a\001" +
    "\001\000\026\005\u010b\006\u0106\010\u0107\020\u010d\023\u0113" +
    "\026\u0104\031\u0108\033\055\042\u0109\047\u010a\001\001\000" +
    "\026\005\u010b\006\u0106\010\u0107\020\u010d\023\u0112\026\u0104" +
    "\031\u0108\033\055\042\u0109\047\u010a\001\001\000\026\005" +
    "\u010b\006\u0106\010\u0107\020\u010d\023\u0111\026\u0104\031\u0108" +
    "\033\055\042\u0109\047\u010a\001\001\000\026\005\u010b\006" +
    "\u0106\010\u0107\020\u010d\023\u0110\026\u0104\031\u0108\033\055" +
    "\042\u0109\047\u010a\001\001\000\026\005\u010b\006\u0106\010" +
    "\u0107\020\u010d\023\u010f\026\u0104\031\u0108\033\055\042\u0109" +
    "\047\u010a\001\001\000\002\001\001\000\026\005\u010b\006" +
    "\u0106\010\u0107\020\u010d\023\u010e\026\u0104\031\u0108\033\055" +
    "\042\u0109\047\u010a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\005\u011d\006\u011f\010\u011e\020\u0120" +
    "\022\u0119\026\u011a\031\u0118\033\055\042\u011b\047\u011c\001" +
    "\001\000\026\005\u011d\006\u011f\010\u011e\020\u0120\022\u0128" +
    "\026\u011a\031\u0118\033\055\042\u011b\047\u011c\001\001\000" +
    "\002\001\001\000\026\005\u011d\006\u011f\010\u011e\020\u0120" +
    "\022\u0127\026\u011a\031\u0118\033\055\042\u011b\047\u011c\001" +
    "\001\000\026\005\u011d\006\u011f\010\u011e\020\u0120\022\u0126" +
    "\026\u011a\031\u0118\033\055\042\u011b\047\u011c\001\001\000" +
    "\026\005\u011d\006\u011f\010\u011e\020\u0120\022\u0125\026\u011a" +
    "\031\u0118\033\055\042\u011b\047\u011c\001\001\000\026\005" +
    "\u011d\006\u011f\010\u011e\020\u0120\022\u0124\026\u011a\031\u0118" +
    "\033\055\042\u011b\047\u011c\001\001\000\026\005\u011d\006" +
    "\u011f\010\u011e\020\u0120\022\u0123\026\u011a\031\u0118\033\055" +
    "\042\u011b\047\u011c\001\001\000\026\005\u011d\006\u011f\010" +
    "\u011e\020\u0120\022\u0122\026\u011a\031\u0118\033\055\042\u011b" +
    "\047\u011c\001\001\000\026\005\u011d\006\u011f\010\u011e\020" +
    "\u0120\022\u0121\026\u011a\031\u0118\033\055\042\u011b\047\u011c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u011d\006\u011f\010\u011e\020\u0120\022\u012b\026\u011a" +
    "\031\u0118\033\055\042\u011b\047\u011c\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\033" +
    "\116\043\u014a\001\001\000\004\051\u0145\001\001\000\010" +
    "\012\u013b\033\u013d\034\u013c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\050\u013f\001\001\000\002\001\001" +
    "\000\004\033\u0140\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\033\u0147" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\051" +
    "\u0148\001\001\000\002\001\001\000\006\033\116\043\u014e" +
    "\001\001\000\004\051\u014c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\012" +
    "\u013b\033\u0154\034\u0153\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\033\u0159\001\001\000\002\001\001\000\006" +
    "\033\u015c\047\u015b\001\001\000\026\005\u0164\006\u0161\010" +
    "\u0162\026\u0160\033\055\042\u0163\047\u0165\055\u01e2\066\u0167" +
    "\070\u016a\001\001\000\004\050\275\001\001\000\004\030" +
    "\u015e\001\001\000\002\001\001\000\026\005\u0164\006\u0161" +
    "\010\u0162\026\u0160\033\055\042\u0163\047\u0165\055\u0166\066" +
    "\u0167\070\u016a\001\001\000\026\005\u0164\006\u0161\010\u0162" +
    "\026\u0160\033\055\042\u0163\047\u0165\055\u01e1\066\u0167\070" +
    "\u016a\001\001\000\026\005\u0164\006\u0161\010\u0162\026\u0160" +
    "\033\055\042\u0163\047\u0165\055\u01e0\066\u0167\070\u016a\001" +
    "\001\000\026\005\u0164\006\u0161\010\u0162\026\u0160\033\055" +
    "\042\u0163\047\u0165\055\u01df\066\u0167\070\u016a\001\001\000" +
    "\026\005\u0164\006\u0161\010\u0162\026\u0160\033\055\042\u0163" +
    "\047\u0165\055\u01de\066\u0167\070\u016a\001\001\000\026\005" +
    "\u0164\006\u0161\010\u0162\026\u0160\033\055\042\u0163\047\u0165" +
    "\055\u01dd\066\u0167\070\u016a\001\001\000\026\005\u0164\006" +
    "\u0161\010\u0162\026\u0160\033\055\042\u0163\047\u0165\055\u01dc" +
    "\066\u0167\070\u016a\001\001\000\002\001\001\000\026\005" +
    "\u0164\006\u0161\010\u0162\026\u0160\033\055\042\u0163\047\u0165" +
    "\055\u01d8\066\u0167\070\u016a\001\001\000\010\012\067\025" +
    "\u018a\033\071\001\001\000\002\001\001\000\026\005\u0164" +
    "\006\u0161\010\u0162\026\u0160\033\055\042\u0163\047\u0165\055" +
    "\u016e\066\u0167\070\u016a\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\012" +
    "\067\025\u0170\033\071\001\001\000\002\001\001\000\026" +
    "\005\u0176\006\u0173\010\u0174\026\u0172\033\055\042\u0175\047" +
    "\u0177\066\u0178\067\u0179\070\u017a\001\001\000\026\005\u0176" +
    "\006\u0173\010\u0174\026\u0172\033\055\042\u0175\047\u0177\066" +
    "\u0178\067\u0189\070\u017a\001\001\000\026\005\u0176\006\u0173" +
    "\010\u0174\026\u0172\033\055\042\u0175\047\u0177\066\u0178\067" +
    "\u0188\070\u017a\001\001\000\026\005\u0176\006\u0173\010\u0174" +
    "\026\u0172\033\055\042\u0175\047\u0177\066\u0178\067\u0187\070" +
    "\u017a\001\001\000\026\005\u0176\006\u0173\010\u0174\026\u0172" +
    "\033\055\042\u0175\047\u0177\066\u0178\067\u0186\070\u017a\001" +
    "\001\000\026\005\u0176\006\u0173\010\u0174\026\u0172\033\055" +
    "\042\u0175\047\u0177\066\u0178\067\u0185\070\u017a\001\001\000" +
    "\026\005\u0176\006\u0173\010\u0174\026\u0172\033\055\042\u0175" +
    "\047\u0177\066\u0178\067\u0184\070\u017a\001\001\000\026\005" +
    "\u0176\006\u0173\010\u0174\026\u0172\033\055\042\u0175\047\u0177" +
    "\066\u0178\067\u0183\070\u017a\001\001\000\002\001\001\000" +
    "\026\005\u0176\006\u0173\010\u0174\026\u0172\033\055\042\u0175" +
    "\047\u0177\066\u0178\067\u0180\070\u017a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u0193\006\u0190\010\u0191\026\u018e\033\055\042" +
    "\u0192\047\u0194\066\u0196\070\u0197\072\u0195\001\001\000\002" +
    "\001\001\000\026\005\u0193\006\u0190\010\u0191\026\u018e\033" +
    "\055\042\u0192\047\u0194\066\u0196\070\u0197\072\u01d5\001\001" +
    "\000\012\012\067\025\u01a5\033\071\071\u01a6\001\001\000" +
    "\026\005\u0193\006\u0190\010\u0191\026\u018e\033\055\042\u0192" +
    "\047\u0194\066\u0196\070\u0197\072\u01a4\001\001\000\026\005" +
    "\u0193\006\u0190\010\u0191\026\u018e\033\055\042\u0192\047\u0194" +
    "\066\u0196\070\u0197\072\u01a3\001\001\000\026\005\u0193\006" +
    "\u0190\010\u0191\026\u018e\033\055\042\u0192\047\u0194\066\u0196" +
    "\070\u0197\072\u01a2\001\001\000\026\005\u0193\006\u0190\010" +
    "\u0191\026\u018e\033\055\042\u0192\047\u0194\066\u0196\070\u0197" +
    "\072\u01a1\001\001\000\026\005\u0193\006\u0190\010\u0191\026" +
    "\u018e\033\055\042\u0192\047\u0194\066\u0196\070\u0197\072\u01a0" +
    "\001\001\000\002\001\001\000\026\005\u0193\006\u0190\010" +
    "\u0191\026\u018e\033\055\042\u0192\047\u0194\066\u0196\070\u0197" +
    "\072\u019c\001\001\000\026\005\u0193\006\u0190\010\u0191\026" +
    "\u018e\033\055\042\u0192\047\u0194\066\u0196\070\u0197\072\u019b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\005\u01b0\006\u01ac\010\u01ad\026\u01aa\033\055" +
    "\042\u01ae\047\u01af\066\u01b1\070\u01b3\073\u01b2\001\001\000" +
    "\002\001\001\000\026\005\u01b0\006\u01ac\010\u01ad\026\u01aa" +
    "\033\055\042\u01ae\047\u01af\066\u01b1\070\u01b3\073\u01bf\001" +
    "\001\000\012\012\067\025\u01a5\033\071\071\u01be\001\001" +
    "\000\026\005\u01b0\006\u01ac\010\u01ad\026\u01aa\033\055\042" +
    "\u01ae\047\u01af\066\u01b1\070\u01b3\073\u01bd\001\001\000\026" +
    "\005\u01b0\006\u01ac\010\u01ad\026\u01aa\033\055\042\u01ae\047" +
    "\u01af\066\u01b1\070\u01b3\073\u01bc\001\001\000\026\005\u01b0" +
    "\006\u01ac\010\u01ad\026\u01aa\033\055\042\u01ae\047\u01af\066" +
    "\u01b1\070\u01b3\073\u01bb\001\001\000\026\005\u01b0\006\u01ac" +
    "\010\u01ad\026\u01aa\033\055\042\u01ae\047\u01af\066\u01b1\070" +
    "\u01b3\073\u01ba\001\001\000\026\005\u01b0\006\u01ac\010\u01ad" +
    "\026\u01aa\033\055\042\u01ae\047\u01af\066\u01b1\070\u01b3\073" +
    "\u01b9\001\001\000\026\005\u01b0\006\u01ac\010\u01ad\026\u01aa" +
    "\033\055\042\u01ae\047\u01af\066\u01b1\070\u01b3\073\u01b8\001" +
    "\001\000\002\001\001\000\026\005\u01b0\006\u01ac\010\u01ad" +
    "\026\u01aa\033\055\042\u01ae\047\u01af\066\u01b1\070\u01b3\073" +
    "\u01b7\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\005\u01c5\006\u01c2\010\u01c3\026\u01c1\033\055\042\u01c4" +
    "\047\u01c6\066\u01c8\070\u01c9\074\u01c7\001\001\000\026\005" +
    "\u01c5\006\u01c2\010\u01c3\026\u01c1\033\055\042\u01c4\047\u01c6" +
    "\066\u01c8\070\u01c9\074\u01d4\001\001\000\026\005\u01c5\006" +
    "\u01c2\010\u01c3\026\u01c1\033\055\042\u01c4\047\u01c6\066\u01c8" +
    "\070\u01c9\074\u01d3\001\001\000\026\005\u01c5\006\u01c2\010" +
    "\u01c3\026\u01c1\033\055\042\u01c4\047\u01c6\066\u01c8\070\u01c9" +
    "\074\u01d2\001\001\000\026\005\u01c5\006\u01c2\010\u01c3\026" +
    "\u01c1\033\055\042\u01c4\047\u01c6\066\u01c8\070\u01c9\074\u01d1" +
    "\001\001\000\026\005\u01c5\006\u01c2\010\u01c3\026\u01c1\033" +
    "\055\042\u01c4\047\u01c6\066\u01c8\070\u01c9\074\u01d0\001\001" +
    "\000\026\005\u01c5\006\u01c2\010\u01c3\026\u01c1\033\055\042" +
    "\u01c4\047\u01c6\066\u01c8\070\u01c9\074\u01cf\001\001\000\002" +
    "\001\001\000\026\005\u01c5\006\u01c2\010\u01c3\026\u01c1\033" +
    "\055\042\u01c4\047\u01c6\066\u01c8\070\u01c9\074\u01ce\001\001" +
    "\000\026\005\u01c5\006\u01c2\010\u01c3\026\u01c1\033\055\042" +
    "\u01c4\047\u01c6\066\u01c8\070\u01c9\074\u01cd\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\026\005\u01c5\006\u01c2" +
    "\010\u01c3\026\u01c1\033\055\042\u01c4\047\u01c6\066\u01c8\070" +
    "\u01c9\074\u01d7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\011\u01ee\001\001\000\010\012\u013b" +
    "\033\u0154\034\u01ec\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\012\u013b" +
    "\033\u0154\034\u01f1\042\u01f3\001\001\000\002\001\001\000" +
    "\004\033\u0139\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\011\u01fb\001\001" +
    "\000\004\004\u01fc\001\001\000\002\001\001\000\004\011" +
    "\u01fe\001\001\000\004\004\u01ff\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\011\u0202\001\001\000\004\004" +
    "\u0203\001\001\000\002\001\001\000\004\011\u0205\001\001" +
    "\000\004\004\u0206\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\005\053\006\043\010\044" +
    "\014\u020a\020\060\026\041\031\045\033\055\042\051\047" +
    "\054\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\004\u020d\001\001\000\002\001\001\000\004\011\u020f\001" +
    "\001\000\002\001\001\000\026\005\u0217\006\u0211\010\u0213" +
    "\013\u0219\033\055\042\u0216\047\u0218\075\u0215\077\u0212\105" +
    "\u021c\001\001\000\026\005\u0217\006\u0211\010\u0213\013\u02be" +
    "\033\055\042\u0216\047\u0218\075\u0215\077\u0212\105\u021c\001" +
    "\001\000\026\005\u0217\006\u0211\010\u0213\013\u02bd\033\055" +
    "\042\u0216\047\u0218\075\u0215\077\u0212\105\u021c\001\001\000" +
    "\026\005\u0217\006\u0211\010\u0213\013\u02bc\033\055\042\u0216" +
    "\047\u0218\075\u0215\077\u0212\105\u021c\001\001\000\002\001" +
    "\001\000\026\005\u0217\006\u0211\010\u0213\013\u0293\033\055" +
    "\042\u0216\047\u0218\075\u0215\077\u0212\105\u021c\001\001\000" +
    "\026\005\u0217\006\u0211\010\u0213\013\u0292\033\055\042\u0216" +
    "\047\u0218\075\u0215\077\u0212\105\u021c\001\001\000\026\005" +
    "\u0217\006\u0211\010\u0213\013\u0291\033\055\042\u0216\047\u0218" +
    "\075\u0215\077\u0212\105\u021c\001\001\000\026\005\u0217\006" +
    "\u0211\010\u0213\013\u0290\033\055\042\u0216\047\u0218\075\u0215" +
    "\077\u0212\105\u021c\001\001\000\002\001\001\000\010\012" +
    "\067\025\u023e\033\071\001\001\000\002\001\001\000\026" +
    "\005\u0217\006\u0211\010\u0213\013\u0220\033\055\042\u0216\047" +
    "\u0218\075\u0215\077\u0212\105\u021c\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\012\067\025\u0222\033\071\001\001\000\002\001\001" +
    "\000\026\005\u0229\006\u0224\010\u0226\033\055\042\u0228\047" +
    "\u022a\075\u0227\076\u022b\077\u0225\105\u022c\001\001\000\026" +
    "\005\u0229\006\u0224\010\u0226\033\055\042\u0228\047\u022a\075" +
    "\u0227\076\u023d\077\u0225\105\u022c\001\001\000\026\005\u0229" +
    "\006\u0224\010\u0226\033\055\042\u0228\047\u022a\075\u0227\076" +
    "\u023c\077\u0225\105\u022c\001\001\000\026\005\u0229\006\u0224" +
    "\010\u0226\033\055\042\u0228\047\u022a\075\u0227\076\u023b\077" +
    "\u0225\105\u022c\001\001\000\026\005\u0229\006\u0224\010\u0226" +
    "\033\055\042\u0228\047\u022a\075\u0227\076\u023a\077\u0225\105" +
    "\u022c\001\001\000\026\005\u0229\006\u0224\010\u0226\033\055" +
    "\042\u0228\047\u022a\075\u0227\076\u0239\077\u0225\105\u022c\001" +
    "\001\000\026\005\u0229\006\u0224\010\u0226\033\055\042\u0228" +
    "\047\u022a\075\u0227\076\u0238\077\u0225\105\u022c\001\001\000" +
    "\026\005\u0229\006\u0224\010\u0226\033\055\042\u0228\047\u022a" +
    "\075\u0227\076\u0237\077\u0225\105\u022c\001\001\000\002\001" +
    "\001\000\026\005\u0229\006\u0224\010\u0226\033\055\042\u0228" +
    "\047\u022a\075\u0227\076\u0234\077\u0225\105\u022c\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\026\005" +
    "\u0248\006\u0243\010\u0245\033\055\042\u0247\047\u0249\075\u0246" +
    "\077\u0244\101\u024a\105\u024b\001\001\000\002\001\001\000" +
    "\012\012\067\025\u025a\033\071\100\u025b\001\001\000\026" +
    "\005\u0248\006\u0243\010\u0245\033\055\042\u0247\047\u0249\075" +
    "\u0246\077\u0244\101\u0259\105\u024b\001\001\000\026\005\u0248" +
    "\006\u0243\010\u0245\033\055\042\u0247\047\u0249\075\u0246\077" +
    "\u0244\101\u0258\105\u024b\001\001\000\026\005\u0248\006\u0243" +
    "\010\u0245\033\055\042\u0247\047\u0249\075\u0246\077\u0244\101" +
    "\u0257\105\u024b\001\001\000\026\005\u0248\006\u0243\010\u0245" +
    "\033\055\042\u0247\047\u0249\075\u0246\077\u0244\101\u0256\105" +
    "\u024b\001\001\000\026\005\u0248\006\u0243\010\u0245\033\055" +
    "\042\u0247\047\u0249\075\u0246\077\u0244\101\u0255\105\u024b\001" +
    "\001\000\026\005\u0248\006\u0243\010\u0245\033\055\042\u0247" +
    "\047\u0249\075\u0246\077\u0244\101\u0254\105\u024b\001\001\000" +
    "\026\005\u0248\006\u0243\010\u0245\033\055\042\u0247\047\u0249" +
    "\075\u0246\077\u0244\101\u0253\105\u024b\001\001\000\002\001" +
    "\001\000\026\005\u0248\006\u0243\010\u0245\033\055\042\u0247" +
    "\047\u0249\075\u0246\077\u0244\101\u024f\105\u024b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\026\005\u0265\006\u0260\010\u0262\033\055\042" +
    "\u0264\047\u0266\075\u0263\077\u0261\102\u0267\105\u0268\001\001" +
    "\000\002\001\001\000\012\012\067\025\u025a\033\071\100" +
    "\u0274\001\001\000\026\005\u0265\006\u0260\010\u0262\033\055" +
    "\042\u0264\047\u0266\075\u0263\077\u0261\102\u0273\105\u0268\001" +
    "\001\000\026\005\u0265\006\u0260\010\u0262\033\055\042\u0264" +
    "\047\u0266\075\u0263\077\u0261\102\u0272\105\u0268\001\001\000" +
    "\026\005\u0265\006\u0260\010\u0262\033\055\042\u0264\047\u0266" +
    "\075\u0263\077\u0261\102\u0271\105\u0268\001\001\000\026\005" +
    "\u0265\006\u0260\010\u0262\033\055\042\u0264\047\u0266\075\u0263" +
    "\077\u0261\102\u0270\105\u0268\001\001\000\026\005\u0265\006" +
    "\u0260\010\u0262\033\055\042\u0264\047\u0266\075\u0263\077\u0261" +
    "\102\u026f\105\u0268\001\001\000\026\005\u0265\006\u0260\010" +
    "\u0262\033\055\042\u0264\047\u0266\075\u0263\077\u0261\102\u026e" +
    "\105\u0268\001\001\000\026\005\u0265\006\u0260\010\u0262\033" +
    "\055\042\u0264\047\u0266\075\u0263\077\u0261\102\u026d\105\u0268" +
    "\001\001\000\002\001\001\000\026\005\u0265\006\u0260\010" +
    "\u0262\033\055\042\u0264\047\u0266\075\u0263\077\u0261\102\u026c" +
    "\105\u0268\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\005\u027c\006\u0277\010\u0279\033\055\042\u027b\047" +
    "\u027d\075\u027a\077\u0278\103\u0276\105\u027e\001\001\000\002" +
    "\001\001\000\026\005\u027c\006\u0277\010\u0279\033\055\042" +
    "\u027b\047\u027d\075\u027a\077\u0278\103\u0289\105\u027e\001\001" +
    "\000\026\005\u027c\006\u0277\010\u0279\033\055\042\u027b\047" +
    "\u027d\075\u027a\077\u0278\103\u0288\105\u027e\001\001\000\026" +
    "\005\u027c\006\u0277\010\u0279\033\055\042\u027b\047\u027d\075" +
    "\u027a\077\u0278\103\u0287\105\u027e\001\001\000\026\005\u027c" +
    "\006\u0277\010\u0279\033\055\042\u027b\047\u027d\075\u027a\077" +
    "\u0278\103\u0286\105\u027e\001\001\000\026\005\u027c\006\u0277" +
    "\010\u0279\033\055\042\u027b\047\u027d\075\u027a\077\u0278\103" +
    "\u0285\105\u027e\001\001\000\026\005\u027c\006\u0277\010\u0279" +
    "\033\055\042\u027b\047\u027d\075\u027a\077\u0278\103\u0284\105" +
    "\u027e\001\001\000\026\005\u027c\006\u0277\010\u0279\033\055" +
    "\042\u027b\047\u027d\075\u027a\077\u0278\103\u0283\105\u027e\001" +
    "\001\000\026\005\u027c\006\u0277\010\u0279\033\055\042\u027b" +
    "\047\u027d\075\u027a\077\u0278\103\u0282\105\u027e\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\026\005\u027c\006\u0277\010\u0279\033" +
    "\055\042\u027b\047\u027d\075\u027a\077\u0278\103\u028b\105\u027e" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\003\u028f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\033\u0296\001\001\000\002" +
    "\001\001\000\006\033\u0299\047\u0298\001\001\000\026\005" +
    "\u02a2\006\u029d\010\u029f\033\055\042\u02a1\047\u02a3\075\u02a0" +
    "\077\u029e\104\u02b8\105\u02a5\001\001\000\004\050\275\001" +
    "\001\000\004\030\u029b\001\001\000\002\001\001\000\026" +
    "\005\u02a2\006\u029d\010\u029f\033\055\042\u02a1\047\u02a3\075" +
    "\u02a0\077\u029e\104\u02a4\105\u02a5\001\001\000\026\005\u02a2" +
    "\006\u029d\010\u029f\033\055\042\u02a1\047\u02a3\075\u02a0\077" +
    "\u029e\104\u02b7\105\u02a5\001\001\000\026\005\u02a2\006\u029d" +
    "\010\u029f\033\055\042\u02a1\047\u02a3\075\u02a0\077\u029e\104" +
    "\u02b6\105\u02a5\001\001\000\026\005\u02a2\006\u029d\010\u029f" +
    "\033\055\042\u02a1\047\u02a3\075\u02a0\077\u029e\104\u02b5\105" +
    "\u02a5\001\001\000\026\005\u02a2\006\u029d\010\u029f\033\055" +
    "\042\u02a1\047\u02a3\075\u02a0\077\u029e\104\u02b4\105\u02a5\001" +
    "\001\000\026\005\u02a2\006\u029d\010\u029f\033\055\042\u02a1" +
    "\047\u02a3\075\u02a0\077\u029e\104\u02b3\105\u02a5\001\001\000" +
    "\026\005\u02a2\006\u029d\010\u029f\033\055\042\u02a1\047\u02a3" +
    "\075\u02a0\077\u029e\104\u02b2\105\u02a5\001\001\000\026\005" +
    "\u02a2\006\u029d\010\u029f\033\055\042\u02a1\047\u02a3\075\u02a0" +
    "\077\u029e\104\u02b1\105\u02a5\001\001\000\002\001\001\000" +
    "\026\005\u02a2\006\u029d\010\u029f\033\055\042\u02a1\047\u02a3" +
    "\075\u02a0\077\u029e\104\u02ad\105\u02a5\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Gramatica$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Gramatica$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Gramatica$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    private Symbol sym;
    
    public void syntax_error(Symbol sym){
        this.sym = sym;
    }

    public Symbol getS(){
        return this.sym;
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Gramatica$actions {
  private final Gramatica parser;

  /** Constructor */
  CUP$Gramatica$actions(Gramatica parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000000(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= OPCPROCESO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)).value;
		RESULT = start_val;
              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Gramatica$parser.done_parsing();
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= tk_public tk_module tk_Identificador tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // OPCPROCESO ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_Linea CUERPOPRO OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // OPCPROCESO ::= tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_as TIPOD tk_Linea CUERPOFUNC tk_end tk_function tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // OPCPROCESO ::= tk_public tk_sub tk_main tk_ParentesisA tk_ParentesisC tk_Linea CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // OPCPROCESO ::= tk_public tk_structure tk_Identificador tk_Linea CUERPOSTRUC tk_end tk_structure tk_Linea OPCPROCESO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCPROCESO",1, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-8)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // CUERPOSTRUC ::= tk_Identificador tk_as VARIABLESTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOSTRUC",12, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // VARIABLESTRUC ::= TIPOD tk_Linea CUERPOSTRUC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // VARIABLESTRUC ::= TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLESTRUC",30, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CUERPOFUNC ::= SINTAXFOR_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // CUERPOFUNC ::= SINTAXWHILE_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // CUERPOFUNC ::= SINTAXIF_FUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // CUERPOFUNC ::= VARIABLE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // CUERPOFUNC ::= LLAMADAFUNC CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // CUERPOFUNC ::= ASIGNACIONVAL CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // CUERPOFUNC ::= CONSOLEWRITE CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // CUERPOFUNC ::= OPERACIONES CUERPOFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // CUERPOFUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // CUERPOFUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // CUERPOFUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // CUERPOFUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // CUERPOFUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // CUERPOFUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CUERPOFUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CUERPOFUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CUERPOFUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOFUNC",9, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // SINTAXIF_FUNC ::= tk_if CONDICION tk_then tk_Linea INIF_FUNC tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FUNC",61, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // SINTAXELSEIF_FUNC ::= CONDICION tk_then tk_Linea INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FUNC",62, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // INIF_FUNC ::= SINTAXIF_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // INIF_FUNC ::= VARIABLE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // INIF_FUNC ::= LLAMADAFUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // INIF_FUNC ::= ASIGNACIONVAL INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // INIF_FUNC ::= OPERACIONES INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // INIF_FUNC ::= CONSOLEWRITE INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // INIF_FUNC ::= SINTAXFOR_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // INIF_FUNC ::= SINTAXWHILE_FUNC INIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // INIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // INIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // INIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // INIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // INIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // INIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // INIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // INIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // INIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // INIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // INIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FUNC",63, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // INELSE_FUNC ::= SINTAXIF_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // INELSE_FUNC ::= VARIABLE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // INELSE_FUNC ::= LLAMADAFUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // INELSE_FUNC ::= ASIGNACIONVAL INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // INELSE_FUNC ::= OPERACIONES INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // INELSE_FUNC ::= CONSOLEWRITE INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // INELSE_FUNC ::= SINTAXFOR_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // INELSE_FUNC ::= SINTAXWHILE_FUNC INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // INELSE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // INELSE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // INELSE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // INELSE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // INELSE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // INELSE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // INELSE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // INELSE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // INELSE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FUNC",65, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // INELSEIF_FUNC ::= SINTAXIF_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // INELSEIF_FUNC ::= VARIABLE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // INELSEIF_FUNC ::= LLAMADAFUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // INELSEIF_FUNC ::= ASIGNACIONVAL INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // INELSEIF_FUNC ::= tk_else tk_Linea INELSE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // INELSEIF_FUNC ::= tk_elseif SINTAXELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // INELSEIF_FUNC ::= OPERACIONES INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // INELSEIF_FUNC ::= CONSOLEWRITE INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // INELSEIF_FUNC ::= SINTAXFOR_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC INELSEIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // INELSEIF_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // INELSEIF_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // INELSEIF_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // INELSEIF_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // INELSEIF_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // INELSEIF_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // INELSEIF_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // INELSEIF_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // INELSEIF_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FUNC",64, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // SINTAXWHILE_FUNC ::= tk_do tk_while CONDICION tk_Linea INWHILE_FUNC tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FUNC",59, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // INWHILE_FUNC ::= SINTAXFOR_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // INWHILE_FUNC ::= SINTAXIF_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // INWHILE_FUNC ::= VARIABLE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // INWHILE_FUNC ::= LLAMADAFUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // INWHILE_FUNC ::= ASIGNACIONVAL INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // INWHILE_FUNC ::= CONSOLEWRITE INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // INWHILE_FUNC ::= OPERACIONES INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // INWHILE_FUNC ::= SINTAXWHILE_FUNC INWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // INWHILE_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // INWHILE_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // INWHILE_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // INWHILE_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // INWHILE_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // INWHILE_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // INWHILE_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // INWHILE_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // INWHILE_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // INWHILE_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // INWHILE_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FUNC",60, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // SINTAXFOR_FUNC ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_FUNC tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_FUNC",67, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // INFOR_FUNC ::= SINTAXWHILE_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // INFOR_FUNC ::= SINTAXFOR_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // INFOR_FUNC ::= SINTAXIF_FUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // INFOR_FUNC ::= VARIABLE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // INFOR_FUNC ::= LLAMADAFUNC INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // INFOR_FUNC ::= ASIGNACIONVAL INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // INFOR_FUNC ::= CONSOLEWRITE INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // INFOR_FUNC ::= OPERACIONES INFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // INFOR_FUNC ::= SINTAXWHILE_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // INFOR_FUNC ::= SINTAXFOR_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // INFOR_FUNC ::= SINTAXIF_FUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // INFOR_FUNC ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // INFOR_FUNC ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // INFOR_FUNC ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // INFOR_FUNC ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // INFOR_FUNC ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // INFOR_FUNC ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // INFOR_FUNC ::= tk_exit tk_function tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // INFOR_FUNC ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_FUNC",66, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // CUERPOPRO ::= SINTAXFOR CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // CUERPOPRO ::= SINTAXIF CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // CUERPOPRO ::= VARIABLE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // CUERPOPRO ::= LLAMADAFUNC CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // CUERPOPRO ::= ASIGNACIONVAL CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // CUERPOPRO ::= CONSOLEWRITE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // CUERPOPRO ::= OPERACIONES CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // CUERPOPRO ::= SINTAXWHILE CUERPOPRO 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // CUERPOPRO ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // CUERPOPRO ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // CUERPOPRO ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // CUERPOPRO ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // CUERPOPRO ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // CUERPOPRO ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // CUERPOPRO ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // CUERPOPRO ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // CUERPOPRO ::= tk_end tk_sub tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CUERPOPRO",10, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // PARAMETROS ::= tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // PARAMETROS ::= tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // PARAMETROS ::= tk_Coma tk_byval tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // PARAMETROS ::= tk_Coma tk_Identificador tk_as TIPOD PARAMETROS 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // PARAMETROS ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("PARAMETROS",2, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // VALOR ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // VALOR ::= iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // VALOR ::= tk_valorString 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VALOR",26, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // VARIABLE ::= tk_dim tk_Identificador tk_as TIPOD tk_Igual LLAMADAFUNC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // VARIABLE ::= tk_dim tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // VARIABLE ::= tk_Identificador tk_punto tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("VARIABLE",3, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // ASIGNACIONVAL ::= tk_Identificador tk_Igual VALOR tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // ASIGNACIONVAL ::= tk_Identificador tk_Igual iDNUM OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("ASIGNACIONVAL",4, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // OPCBOOL ::= tk_true 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // OPCBOOL ::= tk_false 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCBOOL",8, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // TIPOD ::= tk_String 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // TIPOD ::= tk_integer 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // TIPOD ::= tk_boolean 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("TIPOD",7, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // CICLOS ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // CICLOS ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CICLOS",13, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // OPCRELACIONALES ::= tk_mayorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // OPCRELACIONALES ::= tk_mayorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // OPCRELACIONALES ::= tk_menorque 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // OPCRELACIONALES ::= tk_menorigual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // OPCRELACIONALES ::= tk_Igual 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPCRELACIONALES",21, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // iDNUM ::= tk_Identificador 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // iDNUM ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("iDNUM",25, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // CONDICION ::= iDNUM OPCRELACIONALES iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // CONDICION ::= iDNUM OPCRELACIONALES OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // CONDICION ::= iDNUM OPCRELACIONALES tk_Identificador tk_ParentesisA IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // CONDICION ::= OPCBOOL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // CONDICION ::= iDNUM OPCRELACIONALES tk_ParentesisA iDNUM OPEARITMETICA iDNUM tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONDICION",19, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // AUMDEC ::= tk_Resta tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // AUMDEC ::= tk_Numero 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("AUMDEC",22, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // OPERACIONES ::= iDNUM OPEARITMETICA iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPERACIONES",37, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // OPEARITMETICA ::= tk_Suma 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // OPEARITMETICA ::= tk_Resta 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // OPEARITMETICA ::= tk_Multiplicacion 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // OPEARITMETICA ::= tk_Division 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("OPEARITMETICA",38, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // IDENTIFICADORES ::= iDNUM IDENTIFICADORESPRIMA 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORES",33, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // IDENTIFICADORESPRIMA ::= tk_Coma IDENTIFICADORES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // IDENTIFICADORESPRIMA ::= tk_ParentesisC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESPRIMA",34, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // IDENTIFICADORESUB ::= tk_Coma iDNUM IDENTIFICADORESUB 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // IDENTIFICADORESUB ::= tk_Coma iDNUM 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("IDENTIFICADORESUB",39, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // LLAMADAFUNC ::= tk_Identificador iDNUM IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // LLAMADAFUNC ::= tk_Identificador iDNUM tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA tk_ParentesisA IDENTIFICADORES tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-5)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // LLAMADAFUNC ::= tk_Identificador tk_ParentesisA IDENTIFICADORES IDENTIFICADORESUB tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("LLAMADAFUNC",32, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-4)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // CONSOLEWRITE ::= tk_cs tk_punto tk_writeline tk_ParentesisA tk_valorString tk_ParentesisC tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("CONSOLEWRITE",6, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // SINTAXIF ::= tk_if CONDICION tk_then tk_Linea INIF tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF",14, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // SINTAXELSEIF ::= CONDICION tk_then tk_Linea INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF",18, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // INIF ::= SINTAXIF INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // INIF ::= VARIABLE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // INIF ::= LLAMADAFUNC INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // INIF ::= ASIGNACIONVAL INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // INIF ::= OPERACIONES INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // INIF ::= CONSOLEWRITE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // INIF ::= SINTAXFOR INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // INIF ::= SINTAXWHILE INIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // INIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // INIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // INIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // INIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // INIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // INIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // INIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // INIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // INIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // INIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF",15, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // INELSE ::= SINTAXIF INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // INELSE ::= VARIABLE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // INELSE ::= LLAMADAFUNC INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // INELSE ::= ASIGNACIONVAL INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // INELSE ::= OPERACIONES INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // INELSE ::= CONSOLEWRITE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // INELSE ::= SINTAXFOR INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // INELSE ::= SINTAXWHILE INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // INELSE ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // INELSE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // INELSE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // INELSE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // INELSE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // INELSE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // INELSE ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // INELSE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE",16, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // INELSEIF ::= SINTAXIF INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // INELSEIF ::= VARIABLE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // INELSEIF ::= LLAMADAFUNC INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // INELSEIF ::= ASIGNACIONVAL INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // INELSEIF ::= tk_else tk_Linea INELSE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // INELSEIF ::= tk_elseif SINTAXELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // INELSEIF ::= OPERACIONES INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // INELSEIF ::= CONSOLEWRITE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // INELSEIF ::= SINTAXFOR INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // INELSEIF ::= SINTAXWHILE INELSEIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // INELSEIF ::= SINTAXIF 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // INELSEIF ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // INELSEIF ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // INELSEIF ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // INELSEIF ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // INELSEIF ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // INELSEIF ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // INELSEIF ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF",17, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // SINTAXFOR ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR",20, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // INFOR ::= SINTAXFOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // INFOR ::= SINTAXIF_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // INFOR ::= VARIABLE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // INFOR ::= LLAMADAFUNC INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // INFOR ::= ASIGNACIONVAL INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // INFOR ::= CONSOLEWRITE INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // INFOR ::= OPERACIONES INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // INFOR ::= SINTAXWHILE_FOR INFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // INFOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // INFOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // INFOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // INFOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // INFOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // INFOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // INFOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // INFOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // INFOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR",43, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // SINTAXIF_FOR ::= tk_if CONDICION tk_then tk_Linea INIF_FOR tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_FOR",54, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // SINTAXELSEIF_FOR ::= CONDICION tk_then tk_Linea INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_FOR",55, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // INIF_FOR ::= SINTAXIF_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // INIF_FOR ::= VARIABLE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // INIF_FOR ::= LLAMADAFUNC INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // INIF_FOR ::= ASIGNACIONVAL INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // INIF_FOR ::= OPERACIONES INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // INIF_FOR ::= CONSOLEWRITE INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // INIF_FOR ::= SINTAXFOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // INIF_FOR ::= SINTAXWHILE_FOR INIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // INIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // INIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // INIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // INIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // INIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // INIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // INIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // INIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // INIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // INIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // INIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_FOR",56, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // INELSEIF_FOR ::= SINTAXIF_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // INELSEIF_FOR ::= VARIABLE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // INELSEIF_FOR ::= LLAMADAFUNC INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // INELSEIF_FOR ::= ASIGNACIONVAL INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // INELSEIF_FOR ::= tk_else tk_Linea INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // INELSEIF_FOR ::= tk_elseif SINTAXELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // INELSEIF_FOR ::= OPERACIONES INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // INELSEIF_FOR ::= CONSOLEWRITE INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // INELSEIF_FOR ::= SINTAXFOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // INELSEIF_FOR ::= SINTAXWHILE_FOR INELSEIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // INELSEIF_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // INELSEIF_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // INELSEIF_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action_part00000001(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Gramatica$result;

      /* select the action based on the action number */
      switch (CUP$Gramatica$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // INELSEIF_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // INELSEIF_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // INELSEIF_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // INELSEIF_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // INELSEIF_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // INELSEIF_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_FOR",57, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // INELSE_FOR ::= SINTAXIF_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // INELSE_FOR ::= VARIABLE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // INELSE_FOR ::= LLAMADAFUNC INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // INELSE_FOR ::= ASIGNACIONVAL INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // INELSE_FOR ::= OPERACIONES INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // INELSE_FOR ::= CONSOLEWRITE INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // INELSE_FOR ::= SINTAXFOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // INELSE_FOR ::= SINTAXWHILE_FOR INELSE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // INELSE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // INELSE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // INELSE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // INELSE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // INELSE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // INELSE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // INELSE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // INELSE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // INELSE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_FOR",58, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // SINTAXWHILE_FOR ::= tk_do tk_while CONDICION tk_Linea INWHILE_FOR tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE_FOR",52, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // INWHILE_FOR ::= SINTAXFOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // INWHILE_FOR ::= VARIABLE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // INWHILE_FOR ::= LLAMADAFUNC INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // INWHILE_FOR ::= ASIGNACIONVAL INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // INWHILE_FOR ::= CONSOLEWRITE INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // INWHILE_FOR ::= OPERACIONES INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // INWHILE_FOR ::= SINTAXWHILE_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // INWHILE_FOR ::= SINTAXIF_FOR INWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // INWHILE_FOR ::= SINTAXFOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // INWHILE_FOR ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // INWHILE_FOR ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // INWHILE_FOR ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // INWHILE_FOR ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // INWHILE_FOR ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // INWHILE_FOR ::= SINTAXIF_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // INWHILE_FOR ::= SINTAXWHILE_FOR 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // INWHILE_FOR ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // INWHILE_FOR ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE_FOR",53, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // SINTAXIF_WHILE ::= tk_if CONDICION tk_then tk_Linea INIF_WHILE tk_end tk_if tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXIF_WHILE",45, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-7)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // SINTAXELSEIF_WHILE ::= CONDICION tk_then tk_Linea INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXELSEIF_WHILE",49, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-3)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // INIF_WHILE ::= SINTAXIF_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // INIF_WHILE ::= VARIABLE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // INIF_WHILE ::= LLAMADAFUNC INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // INIF_WHILE ::= ASIGNACIONVAL INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // INIF_WHILE ::= OPERACIONES INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // INIF_WHILE ::= CONSOLEWRITE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // INIF_WHILE ::= SINTAXFOR_WHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // INIF_WHILE ::= SINTAXWHILE INIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // INIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // INIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // INIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // INIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // INIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // INIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // INIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // INIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // INIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // INIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // INIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INIF_WHILE",46, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // INELSEIF_WHILE ::= SINTAXWHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // INELSEIF_WHILE ::= SINTAXIF_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // INELSEIF_WHILE ::= VARIABLE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // INELSEIF_WHILE ::= LLAMADAFUNC INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // INELSEIF_WHILE ::= ASIGNACIONVAL INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // INELSEIF_WHILE ::= tk_else tk_Linea INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // INELSEIF_WHILE ::= tk_elseif SINTAXELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // INELSEIF_WHILE ::= OPERACIONES INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // INELSEIF_WHILE ::= CONSOLEWRITE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // INELSEIF_WHILE ::= SINTAXFOR_WHILE INELSEIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // INELSEIF_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // INELSEIF_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // INELSEIF_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // INELSEIF_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // INELSEIF_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // INELSEIF_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // INELSEIF_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // INELSEIF_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // INELSEIF_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSEIF_WHILE",48, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // INELSE_WHILE ::= SINTAXWHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // INELSE_WHILE ::= SINTAXIF_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // INELSE_WHILE ::= VARIABLE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // INELSE_WHILE ::= LLAMADAFUNC INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // INELSE_WHILE ::= ASIGNACIONVAL INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // INELSE_WHILE ::= OPERACIONES INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // INELSE_WHILE ::= CONSOLEWRITE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // INELSE_WHILE ::= SINTAXFOR_WHILE INELSE_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // INELSE_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // INELSE_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // INELSE_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // INELSE_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // INELSE_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // INELSE_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // INELSE_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // INELSE_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // INELSE_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INELSE_WHILE",47, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to iDNUM tk_step AUMDEC tk_Linea INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-12)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // SINTAXFOR_WHILE ::= tk_for tk_Identificador tk_Igual iDNUM tk_to OPERACIONES INFOR_WHILE tk_next tk_Identificador tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXFOR_WHILE",51, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-9)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // INFOR_WHILE ::= SINTAXWHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // INFOR_WHILE ::= SINTAXFOR_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // INFOR_WHILE ::= SINTAXIF_WHILE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // INFOR_WHILE ::= VARIABLE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // INFOR_WHILE ::= LLAMADAFUNC INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // INFOR_WHILE ::= ASIGNACIONVAL INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // INFOR_WHILE ::= CONSOLEWRITE INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // INFOR_WHILE ::= OPERACIONES INFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // INFOR_WHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // INFOR_WHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // INFOR_WHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // INFOR_WHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // INFOR_WHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // INFOR_WHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // INFOR_WHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // INFOR_WHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // INFOR_WHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // INFOR_WHILE ::= tk_exit tk_for tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INFOR_WHILE",50, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // SINTAXWHILE ::= tk_do tk_while CONDICION tk_Linea INWHILE tk_loop tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("SINTAXWHILE",23, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-6)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // INWHILE ::= SINTAXWHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // INWHILE ::= SINTAXFOR_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // INWHILE ::= SINTAXIF_WHILE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // INWHILE ::= VARIABLE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INWHILE ::= LLAMADAFUNC INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INWHILE ::= ASIGNACIONVAL INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INWHILE ::= CONSOLEWRITE INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INWHILE ::= OPERACIONES INWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-1)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INWHILE ::= SINTAXWHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INWHILE ::= SINTAXFOR_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INWHILE ::= SINTAXIF_WHILE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INWHILE ::= VARIABLE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INWHILE ::= LLAMADAFUNC 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INWHILE ::= ASIGNACIONVAL 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INWHILE ::= CONSOLEWRITE 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INWHILE ::= OPERACIONES 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INWHILE ::= tk_exit tk_do tk_Linea 
            {
              Object RESULT =null;

              CUP$Gramatica$result = parser.getSymbolFactory().newSymbol("INWHILE",44, ((java_cup.runtime.Symbol)CUP$Gramatica$stack.elementAt(CUP$Gramatica$top-2)), ((java_cup.runtime.Symbol)CUP$Gramatica$stack.peek()), RESULT);
            }
          return CUP$Gramatica$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Gramatica$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Gramatica$do_action(
    int                        CUP$Gramatica$act_num,
    java_cup.runtime.lr_parser CUP$Gramatica$parser,
    java.util.Stack            CUP$Gramatica$stack,
    int                        CUP$Gramatica$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$Gramatica$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$Gramatica$do_action_part00000000(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$Gramatica$do_action_part00000001(
                               CUP$Gramatica$act_num,
                               CUP$Gramatica$parser,
                               CUP$Gramatica$stack,
                               CUP$Gramatica$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
