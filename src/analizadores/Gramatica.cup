package Analizadores;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    
    public void syntax_error(Symbol s){
        this.s = s;
    }

    public Symbol getS(){
        return this.s;
}
:};

/* Terminales */

terminal tk_writeline, tk_like, tk_sys, tk_cs, tk_null, ERROR;

/* Tipos de Datos */
terminal tk_integer, tk_boolean, tk_String;

/* Por Valor o Por Referencia */
terminal tk_byval;

/* Estructuras de Control */
terminal tk_if, tk_then, tk_elseif, tk_else, tk_for, tk_to, tk_loop, tk_while, tk_step;
terminal tk_until, tk_next, tk_do;

/* Expresiones Booleanas */
terminal tk_true, tk_false;

/* Funciones */
terminal tk_function, tk_sub, tk_structure, tk_public, tk_module;

/* Operadores Aritmeticos */
terminal tk_Suma,tk_Resta,tk_Multiplicacion,tk_Division, tk_mod;

/* Operadores logicos */
terminal tk_and, tk_or, tk_not, tk_xor;

/*Operadores Relacionales */
terminal tk_mayorque,tk_mayorigual,tk_menorque,tk_menorigual,tk_Igual;

/* Parentesis */
terminal tk_ParentesisA, tk_ParentesisC;

/* Simbolos */
terminal tk_Coma, tk_ampersant, tk_punto;

/* palabras reservadas */
terminal tk_dim, tk_as, tk_exit, tk_return, tk_write, tk_read, tk_end;

terminal EMPTY;

/* Valores */
terminal String tk_valorString;
terminal String tk_Identificador;
terminal Integer tk_Numero;

non terminal INICIO, OPCPROCESO , PARAMETROS, PARAMETROSPRIMA, VARIABLE, TIPOD, OPCBOOL, CUERPOFUNC, CUERPOPRO, CUERPOSTRUC, CICLOS,SINTAXIF, SENTENCIAIF,
            CONDICION, SINTAXFOR,OPCRELACIONALES, AUMDEC, SINTAXWHILE, SENTENCIAPRIMA, iDNUM, VALOR, VARIABLEPRIMA;

start with INICIO;

INICIO ::= tk_public tk_module tk_Identificador OPCPROCESO;

OPCPROCESO ::= tk_public tk_sub tk_Identificador tk_ParentesisA PARAMETROS tk_ParentesisC CUERPOPRO|
                tk_public tk_function tk_Identificador tk_ParentesisA PARAMETROS tk_ParentesisC tk_as TIPOD CUERPOFUNC|
                tk_structure tk_Identificador CUERPOSTRUC;

PARAMETROS ::= VARIABLE PARAMETROSPRIMA; 

PARAMETROSPRIMA ::=  tk_Coma VARIABLE PARAMETROSPRIMA | EMPTY;  

VALOR ::= OPCBOOL | iDNUM | tk_valorString ;

VARIABLE ::= tk_Identificador tk_as TIPOD |
                tk_dim tk_Identificador tk_as TIPOD VARIABLEPRIMA;

VARIABLEPRIMA ::= tk_Igual VALOR | EMPTY;

OPCBOOL ::= tk_true | tk_false;

TIPOD ::= tk_String | tk_integer | tk_byval | tk_boolean;

CICLOS ::=  SINTAXWHILE | SINTAXFOR;

OPCRELACIONALES ::= tk_mayorque |
                    tk_mayorigual | 
                    tk_menorque |
                    tk_menorigual |
                    tk_Igual;

SINTAXIF ::= tk_if CONDICION tk_then;

iDNUM ::= tk_Identificador | tk_Numero;

CONDICION ::= iDNUM OPCRELACIONALES iDNUM |
            iDNUM OPCRELACIONALES OPCBOOL |
            OPCBOOL;

SINTAXFOR ::= tk_for tk_Identificador tk_Igual tk_Numero tk_to tk_Numero tk_step AUMDEC;

AUMDEC ::= tk_Resta tk_Numero | tk_Numero ;

SINTAXWHILE ::= tk_do tk_while CONDICION ;

SENTENCIAIF ::= CICLOS | SINTAXIF | VARIABLE ;